In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
2 errors generated when compiling for gfx908.
terminate called after throwing an instance of 'migraphx::version_1::exception'
  what():  /src/AMDMIGraphX/src/process.cpp:97: check_exec: Command cd /tmp/migraphx-compile-6b5f-7f0551df8700-63a2c6ddffab7a-lCnq1bUJuAkOTeqC; /opt/rocm/llvm/bin/clang++ -Wno-float-equal -DMIGRAPHX_NGLOBAL=163840 -DMIGRAPHX_NLOCAL=1024 -Weverything -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-conversion -Wno-double-promotion -Wno-exit-time-destructors -Wno-extra-semi -Wno-extra-semi-stmt -Wno-float-conversion -Wno-gnu-anonymous-struct -Wno-gnu-zero-variadic-macro-arguments -Wno-missing-prototypes -Wno-nested-anon-types -Wno-padded -Wno-shorten-64-to-32 -Wno-sign-conversion -Wno-sign-compare -Wno-unused-command-line-argument -Wno-weak-vtables -Wno-c99-extensions -ftemplate-backtrace-limit=0 -Werror --std=c++17 -fno-gpu-rdc -c --offload-arch=gfx908:sramecc+:xnack- --cuda-device-only -O3  -Wno-unused-command-line-argument -Wno-cuda-compat -mllvm -amdgpu-early-inline-all=true -mllvm -amdgpu-function-calls=false -x hip -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm-5.4.2/llvm/lib/clang/15.0.0/include/.. -D__HIP_PLATFORM_HCC__=1 -D__HIP_PLATFORM_AMD__=1 -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm/include --hip-link --hip-link -I. main.cpp -o main.o exited with status 1
In file included from In file included from main.cppmain.cpp::33:
:
In file included from In file included from ./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp::2929:
:
./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::191191::5656::  error: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?no member named '__hmax' in the global namespace; did you mean '__fmax'?

MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

                                                     ~~^~~~~~                                                     ~~^~~~~~

                                                       __fmax                                                       __fmax

./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::6767::6464::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~                                                               ^~~~~

/usr/include/x86_64-linux-gnu/bits/mathcalls.h/usr/include/x86_64-linux-gnu/bits/mathcalls.h::329329::11::  note: note: '__fmax' declared here'__fmax' declared here

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^^

/usr/include/math.h/usr/include/math.h::278278::33::  note: note: expanded from macro '__MATHCALLX'expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^  ^

/usr/include/math.h/usr/include/math.h::281281::2222::  note: note: expanded from macro '__MATHDECLX'expanded from macro '__MATHDECLX'

  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h/usr/include/x86_64-linux-gnu/sys/cdefs.h::105105::2323::  note: note: expanded from macro '__CONCAT'expanded from macro '__CONCAT'

#define __CONCAT(x,y)   x ## y#define __CONCAT(x,y)   x ## y

                        ^                        ^

<scratch space><scratch space>::117117::11::  note: note: expanded from hereexpanded from here

__fmax__fmax

^^

In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: In file included from error: main.cppno member named '__hmin' in the global namespace; did you mean '__fmin'?:
3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):
                                                      ~~^~~~~~note: 
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'                                                       __fmin

./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
                                                                ^~~~~note: 
'__fmin' declared here
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^
/usr/include/math.h:278:3:__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__)); 
note: ^expanded from macro '__MATHCALLX'

/usr/include/math.h:278:3: note:   __MATHDECLX (_Mdouble_,function,suffix, args, attrib)expanded from macro '__MATHCALLX'

  ^
/usr/include/math.h:281:22:   __MATHDECLX (_Mdouble_,function,suffix, args, attrib)note: 
expanded from macro '__MATHDECLX'  ^

/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib) 
note:                      ^expanded from macro '__CONCAT'

/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23#define __CONCAT(x,y)   x ## y:
                         ^note: 
expanded from macro '__CONCAT'
<scratch space>:118:1:#define __CONCAT(x,y)   x ## y 
note:                         ^expanded from here

<scratch space>:__fmin118
:^1
: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281In file included from :main.cpp22::3 :
note: In file included from expanded from macro '__MATHDECLX'./migraphx/kernels/pointwise.hpp
:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
#define __CONCAT(x,y)   x ## y                                                     ~~^~~~~~

                        ^                                                       __fmax

./migraphx/kernels/math.hpp:<scratch space>67::11764::1 :note:  expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'note: 
expanded from here
__fmax
^
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
In file included from main.cpp:3:
In file included from In file included from   __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)./migraphx/kernels/layernorm.hppmain.cpp
::                     ^263
:
:
In file included from /usr/include/x86_64-linux-gnu/sys/cdefs.hIn file included from ./migraphx/kernels/reduce.hpp:./migraphx/kernels/layernorm.hpp:105:30:26:
23:
In file included from :In file included from ./migraphx/kernels/ops.hpp ./migraphx/kernels/reduce.hpp:note: :27expanded from macro '__CONCAT'30:

:
./migraphx/kernels/math.hppIn file included from :./migraphx/kernels/ops.hpp191::#define __CONCAT(x,y)   x ## y2756
:
:                        ^./migraphx/kernels/math.hpp 
:error: 191no member named '__hmax' in the global namespace; did you mean '__fmax'?:
56<scratch space>:: 117error: :no member named '__hmax' in the global namespace; did you mean '__fmax'?1
: note: MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)expanded from here

                                                     ~~^~~~~~
__fmax                                                       __fmax

^MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
./migraphx/kernels/math.hpp
:                                                     ~~^~~~~~67
:                                                       __fmax64
: note: ./migraphx/kernels/math.hppexpanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':
67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));3
:^ 
note: expanded from macro '__MATHCALLX'
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):
   ^note: 
expanded from macro '__MATHDECLX'
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)23
:                     ^ 
note: expanded from macro '__CONCAT'/usr/include/x86_64-linux-gnu/sys/cdefs.h
:105:23: #define __CONCAT(x,y)   x ## ynote: 
expanded from macro '__CONCAT'                        ^

#define __CONCAT(x,y)   x ## y<scratch space>
:                        ^117
:1: note: expanded from here<scratch space>
:117__fmax:
1^:
 note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
In file included from /usr/include/math.hmain.cpp::2813::
22In file included from :./migraphx/kernels/pointwise.hpp :note: 29expanded from macro '__MATHDECLX':

./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)23
:                                                     ~~^~~~~~ 
note:                                                        __fminexpanded from macro '__CONCAT'

./migraphx/kernels/math.hpp:67:64:#define __CONCAT(x,y)   x ## y 
note:                         ^expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

<scratch space>:118:1: note: expanded from here
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }__fmin

                                                               ^~~~~^

/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
In file included from In file included from /usr/include/x86_64-linux-gnu/sys/cdefs.hmain.cppmain.cpp:::10533::
:
23In file included from In file included from :./migraphx/kernels/layernorm.hpp./migraphx/kernels/layernorm.hpp ::note: 2626expanded from macro '__CONCAT':
:

In file included from In file included from ./migraphx/kernels/reduce.hpp#define __CONCAT(x,y)   x ## y./migraphx/kernels/reduce.hpp:
:30                        ^30:

:
In file included from In file included from <scratch space>./migraphx/kernels/ops.hpp./migraphx/kernels/ops.hpp:::1182727::
:
1./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::: 192192note: ::expanded from here5656
:: __fmin error: 
error: no member named '__hmin' in the global namespace; did you mean '__fmin'?^no member named '__hmin' in the global namespace; did you mean '__fmin'?


MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)

                                                       __fmin                                                     ~~^~~~~~

                                                       __fmin
./migraphx/kernels/math.hpp:67./migraphx/kernels/math.hpp::6467:: 64note: :expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR' 
note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:/usr/include/x86_64-linux-gnu/bits/mathcalls.h1::332 :note: 1'__fmin' declared here:
 note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:/usr/include/math.h3::278 :note: 3expanded from macro '__MATHCALLX':
 note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
/usr/include/math.h  ^:
281:/usr/include/math.h22::281 :note: 22expanded from macro '__MATHDECLX':
 note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
/usr/include/x86_64-linux-gnu/sys/cdefs.h                     ^:
105:23/usr/include/x86_64-linux-gnu/sys/cdefs.h:: 105note: :expanded from macro '__CONCAT'23
: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>#define __CONCAT(x,y)   x ## y:
118                        ^:
1:<scratch space> :note: 118expanded from here:
1:__fmin 
note: ^expanded from here

__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^In file included from 
main.cpp:3/usr/include/math.h:
:In file included from 278./migraphx/kernels/pointwise.hpp::329::
 ./migraphx/kernels/math.hppnote: :expanded from macro '__MATHCALLX'192
:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):
                                                      ~~^~~~~~note: 
expanded from macro '__MATHDECLX'                                                       __fmin

./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
                                                                ^~~~~note: 
expanded from macro '__CONCAT'
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:#define __CONCAT(x,y)   x ## y1
:                        ^ 
note: '__fmin' declared here
<scratch space>:117:1: __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));note: 
expanded from here^

__fmax
/usr/include/math.h^:
278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/softmax.hpp:27:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/softmax.hpp:27:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmaxIn file included from 
main.cpp:3./migraphx/kernels/math.hpp:
:In file included from 67./migraphx/kernels/pointwise.hpp::6429::
 ./migraphx/kernels/math.hppnote: :expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'192
:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:                                                       __fmin329
:1:./migraphx/kernels/math.hpp :note: 67'__fmax' declared here:
64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }278
:                                                               ^~~~~3
: note: expanded from macro '__MATHCALLX'
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^
/usr/include/math.h:281:22: __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));note: 
expanded from macro '__MATHDECLX'^

/usr/include/math.h:278:3: note:   __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)expanded from macro '__MATHCALLX'

                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib) 
note:   ^expanded from macro '__CONCAT'

/usr/include/math.h:281:22#define __CONCAT(x,y)   x ## y:
                         ^note: 
expanded from macro '__MATHDECLX'
<scratch space>:117:1: note: expanded from here
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
__fmax                     ^

^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/softmax.hpp:27:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1:In file included from  main.cppnote: :'__fmax' declared here3
:
In file included from ./migraphx/kernels/softmax.hpp:27:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));./migraphx/kernels/ops.hpp
:^27
:
./migraphx/kernels/math.hpp:/usr/include/math.h191::27856::3 :error:  no member named '__hmax' in the global namespace; did you mean '__fmax'?note: 
expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22:MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax) 
note:                                                      ~~^~~~~~expanded from macro '__MATHDECLX'

                                                       __fmax
./migraphx/kernels/math.hpp:67:64:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib) 
note:                      ^expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~
#define __CONCAT(x,y)   x ## y
                        ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329<scratch space>::1117:: 1note: :'__fmax' declared here 
note: expanded from here
__fmax
^
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^In file included from 
main.cpp:/usr/include/x86_64-linux-gnu/sys/cdefs.h3::
105In file included from :./migraphx/kernels/pointwise.hpp23::29 :
note: ./migraphx/kernels/math.hppexpanded from macro '__CONCAT':
191:56: error: #define __CONCAT(x,y)   x ## yno member named '__hmax' in the global namespace; did you mean '__fmax'?

                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
In file included from ./migraphx/kernels/math.hppmain.cpp::673::
64In file included from :./migraphx/kernels/pointwise.hpp :note: 29expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':

./migraphx/kernels/math.hpp:192:56:    inline auto __device__ name(type x, type y)->type { return fname(x, y); } 
error:                                                                ^~~~~no member named '__hmin' in the global namespace; did you mean '__fmin'?

/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)'__fmax' declared here

                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));64
:^ 
note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
/usr/include/x86_64-linux-gnu/bits/mathcalls.h  ^:
332:/usr/include/math.h1::281 :note: 22'__fmin' declared here:
 note: expanded from macro '__MATHDECLX'
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)/usr/include/math.h
:                     ^278
:3/usr/include/x86_64-linux-gnu/sys/cdefs.h:: 105note: :expanded from macro '__MATHCALLX'23
: note: expanded from macro '__CONCAT'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
#define __CONCAT(x,y)   x ## y  ^

                        ^/usr/include/math.h
:281:22: <scratch space>note: :expanded from macro '__MATHDECLX'117
:1: note: expanded from here
__fmax
^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from In file included from main.cppmain.cpp::33:
:
In file included from In file included from ./migraphx/kernels/layernorm.hpp./migraphx/kernels/pointwise.hpp::2629:
:
In file included from ./migraphx/kernels/math.hpp./migraphx/kernels/reduce.hpp::19130::
56In file included from :./migraphx/kernels/ops.hpp :error: 27no member named '__hmax' in the global namespace; did you mean '__fmax'?:

./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
./migraphx/kernels/math.hpp                                                     ~~^~~~~~:
67                                                       __fmax:
64:./migraphx/kernels/math.hpp :note: 67expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':
64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1/usr/include/x86_64-linux-gnu/bits/mathcalls.h:: 329note: :'__fmax' declared here1
: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));^

^
/usr/include/math.h:/usr/include/math.h278::2783::3 :note:  expanded from macro '__MATHCALLX'note: 
expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^  ^

/usr/include/math.h/usr/include/math.h::281281::2222::  note: note: expanded from macro '__MATHDECLX'expanded from macro '__MATHDECLX'

  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
/usr/include/x86_64-linux-gnu/sys/cdefs.h                     ^:
105:/usr/include/x86_64-linux-gnu/sys/cdefs.h23::105 :note: 23expanded from macro '__CONCAT':
 note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
In file included from #define __CONCAT(x,y)   x ## ymain.cpp<scratch space>
::                        ^3117
:
:In file included from 1./migraphx/kernels/softmax.hpp<scratch space>::: 27117note: :
:expanded from hereIn file included from 1
./migraphx/kernels/reduce.hpp:__fmax: 
30note: ^:
expanded from here
In file included from 
./migraphx/kernels/ops.hpp:__fmax27
:
^./migraphx/kernels/math.hpp
:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/softmax.hpp:27:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: In file included from expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'main.cpp
:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }56
:                                                               ^~~~~ 
error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

                                                     ~~^~~~~~^

                                                       __fmax
/usr/include/math.h:./migraphx/kernels/math.hpp278::673::64 :note:  expanded from macro '__MATHCALLX'note: 
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
22                                                               ^~~~~:
 note: expanded from macro '__MATHDECLX'
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib) 
note:                      ^'__fmax' declared here

/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
#define __CONCAT(x,y)   x ## y
/usr/include/math.h                        ^:
278<scratch space>::3118:: 1note: :expanded from macro '__MATHCALLX' 
note: expanded from here
__fmin
^
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64:In file included from  main.cppnote: :expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'3
:
In file included from ./migraphx/kernels/softmax.hpp:27:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }27
:
                                                               ^~~~~./migraphx/kernels/math.hpp
:In file included from 192main.cpp/usr/include/x86_64-linux-gnu/bits/mathcalls.h:::563329::
: In file included from 1error: ./migraphx/kernels/layernorm.hpp:no member named '__hmin' in the global namespace; did you mean '__fmin'?: 
26In file included from note: :
main.cpp'__fmax' declared hereIn file included from :
./migraphx/kernels/reduce.hppMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)3:
:
30                                                     ~~^~~~~~In file included from :
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
./migraphx/kernels/softmax.hppIn file included from 
                                                       __fmin:./migraphx/kernels/ops.hpp^
27:
:
./migraphx/kernels/math.hpp27In file included from :/usr/include/math.h:
./migraphx/kernels/reduce.hpp67:./migraphx/kernels/math.hpp::278:3064:191:
:3:In file included from  :56./migraphx/kernels/ops.hppnote:  ::expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'note:  27
expanded from macro '__MATHCALLX'error: :

no member named '__hmax' in the global namespace; did you mean '__fmax'?./migraphx/kernels/math.hpp
:192:56    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
 
                                                               ^~~~~error:   ^
no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)/usr/include/x86_64-linux-gnu/bits/mathcalls.h
/usr/include/math.h
::                                                     ~~^~~~~~332281
::                                                       __fmax122
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):./migraphx/kernels/math.hpp:
 :                                                      ~~^~~~~~note: 67note: 
'__fmin' declared here:expanded from macro '__MATHDECLX'                                                       __fmin
64

: note: ./migraphx/kernels/math.hppexpanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));67
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):^
64
                     ^:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
 /usr/include/math.h
note: /usr/include/x86_64-linux-gnu/sys/cdefs.h:                                                               ^~~~~expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':278

105::323::/usr/include/x86_64-linux-gnu/bits/mathcalls.h  :note:     inline auto __device__ name(type x, type y)->type { return fname(x, y); }note: 329expanded from macro '__MATHCALLX'
expanded from macro '__CONCAT':
                                                               ^~~~~
1
: note: #define __CONCAT(x,y)   x ## y'__fmax' declared here  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
/usr/include/x86_64-linux-gnu/bits/mathcalls.h

                        ^:  ^
332
:__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));1/usr/include/math.h
<scratch space>::^: 281
117note: ::'__fmin' declared here/usr/include/math.h221
:::278  :note: note: 3expanded from macro '__MATHDECLX'__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));expanded from here:


 ^note: __fmax
expanded from macro '__MATHCALLX'

^  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)/usr/include/math.h

:                     ^278  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
:
3/usr/include/x86_64-linux-gnu/sys/cdefs.h  ^::
 105note: /usr/include/math.h:expanded from macro '__MATHCALLX':23
281:: 22note: :expanded from macro '__CONCAT'  __MATHDECLX (_Mdouble_,function,suffix, args, attrib) 

note:   ^expanded from macro '__MATHDECLX'
#define __CONCAT(x,y)   x ## y/usr/include/math.h

:                        ^281
:22<scratch space>::  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib) 118
note: :                     ^expanded from macro '__MATHDECLX'1

:/usr/include/x86_64-linux-gnu/sys/cdefs.h :note: 105expanded from here:
23  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):__fmin
 
                     ^note: ^
expanded from macro '__CONCAT'

/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23:#define __CONCAT(x,y)   x ## y 
note:                         ^expanded from macro '__CONCAT'

<scratch space>#define __CONCAT(x,y)   x ## y:
117                        ^:
1:<scratch space> :note: 118expanded from here:
1:__fmax 
note: ^expanded from here

__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/layernorm.hpp:26:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
In file included from main.cpp:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }3
:
                                                               ^~~~~In file included from 
./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:/usr/include/x86_64-linux-gnu/bits/mathcalls.h192::33256::1 :error:  no member named '__hmin' in the global namespace; did you mean '__fmin'?note: 
'__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)/usr/include/math.h
:                                                     ~~^~~~~~278
:                                                       __fmin3
: note: ./migraphx/kernels/math.hppexpanded from macro '__MATHCALLX':
67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
1                     ^:
 note: /usr/include/x86_64-linux-gnu/sys/cdefs.h'__fmin' declared here:
105:23: note: expanded from macro '__CONCAT'
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));#define __CONCAT(x,y)   x ## y

^                        ^

<scratch space>/usr/include/math.h::118278::13::  note: note: expanded from hereexpanded from macro '__MATHCALLX'

__fmin
^
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/layernorm.hpp:26:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
In file included from main.cpp  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
3                     ^:

In file included from /usr/include/x86_64-linux-gnu/sys/cdefs.h./migraphx/kernels/pointwise.hpp::10529::
23./migraphx/kernels/math.hpp:: 192note: :expanded from macro '__CONCAT'56
: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from hereMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)

                                                     ~~^~~~~~__fmin

                                                       __fmin^

./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/layernorm.hpp:26:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
timeout: the monitored command dumped core
In file included from main.cpp:3:
In file included from ./migraphx/kernels/layernorm.hpp:26:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/softmax.hpp:27:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/ops.hpp:93:26: note: called by 'operator()<_Float16, _Float16>'
        return migraphx::max(x, y);
                         ^
./migraphx/kernels/reduce.hpp:110:51: note: called by 'operator()<unsigned int, migraphx::integral_constant<int, 0>>'
    idx.local_stride(n, [&](auto i, auto d) { x = op(x, index::invoke_loop(f, i, d)); });
                                                  ^
./migraphx/kernels/index.hpp:154:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/reduce.hpp:110:25), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i, d);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<true, (lambda at ./migraphx/kernels/reduce.hpp:110:25), migraphx::integral_constant<unsigned int, 64>, migraphx::integral_constant<unsigned int, 64>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:232:9: note: called by 'local_stride<(lambda at ./migraphx/kernels/reduce.hpp:110:25), migraphx::integral_constant<unsigned int, 64>>'
        for_stride<true>(local, n, nlocal(), f);
        ^
./migraphx/kernels/reduce.hpp:110:9: note: called by 'block_reduce<migraphx::op::max, migraphx::lowest, migraphx::integral_constant<unsigned int, 64>, (lambda at ./migraphx/kernels/reduce.hpp:373:51)>'
    idx.local_stride(n, [&](auto i, auto d) { x = op(x, index::invoke_loop(f, i, d)); });
        ^
./migraphx/kernels/reduce.hpp:373:20: note: called by 'reduce_impl<migraphx::op::max, migraphx::lowest, migraphx::op::id, migraphx::integral_constant<unsigned int, 64>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(4))), 1, migraphx::integral_constant<unsigned int, 64>> &>'
            return block_reduce(idx, op, init, n, [&](auto j, auto d) {
                   ^
./migraphx/kernels/reduce.hpp:314:28: note: called by 'operator()<migraphx::integral_constant<unsigned int, 64>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(4))), 1, migraphx::integral_constant<unsigned int, 64>>>'
            return derived.reduce_impl(op, init, read, n, xs...);
                           ^
./migraphx/kernels/reduce.hpp:278:43: note: called by 'operator()<migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(4))), 1, migraphx::integral_constant<unsigned int, 64>> &>'
        return [=](auto&&... xs) { return f(get_size(xs...), make_inner_slice(xs)...); };
                                          ^
./migraphx/kernels/softmax.hpp:41:24: note: called by 'operator()<migraphx::array<unsigned int, 3>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>>'
        const auto c = r.reduce(op::max{}, lowest{}, op::id{})(input);
                       ^
./migraphx/kernels/reduce.hpp:414:13: note: called by 'operator()<unsigned int>'
            f(out_idx, make(idx, [&](auto input) { return reduce_slice<Output>(input, out_idx); }));
            ^In file included from 
main.cpp:./migraphx/kernels/index.hpp3::
160In file included from :./migraphx/kernels/softmax.hpp16::27 :
note: In file included from called by 'invoke_loop<(lambda at ./migraphx/kernels/reduce.hpp:412:53), unsigned int, migraphx::integral_constant<int, 0>>'./migraphx/kernels/reduce.hpp
:30:
        return f(i);In file included from 
./migraphx/kernels/ops.hpp               ^:
27:
./migraphx/kernels/math.hpp./migraphx/kernels/index.hpp::191202::5621::2   errorerror: note: sreference to __host__ function '__fmax' in __device__ functioncalled by 'for_stride<false, (lambda at ./migraphx/kernels/reduce.hpp:412:53), migraphx::integral_constant<unsigned int, 655360>, migraphx::integral_constant<unsigned int, 655360>>' generated

 when compiling for gfx908.
                    invoke_loop(f, start, _c<0>);
                    ^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
./migraphx/kernels/index.hpp                                                       ^:
226:9: ./migraphx/kernels/ops.hppnote: :called by 'global_stride<(lambda at ./migraphx/kernels/reduce.hpp:412:53), migraphx::integral_constant<unsigned int, 655360>>'93
:26: note: called by 'operator()<_Float16, _Float16>'
        for_stride<false>(global, n, nglobal(), f);
        ^
        return migraphx::max(x, y);
                         ^
./migraphx/kernels/reduce.hpp:412./migraphx/kernels/reduce.hpp::13110:: 51note: :called by 'run<migraphx::shape<migraphx::integral_const_array<unsigned int, 40, 256, 1>, migraphx::integral_const_array<unsigned int, 16384, 64, 1>>, (lambda at ./migraphx/kernels/softmax.hpp:36:57)>' 
note: called by 'operator()<unsigned int, migraphx::integral_constant<int, 0>>'
        idx.global_stride(nelements * idx.nlocal(), [&](auto i) {
            ^
    idx.local_stride(n, [&](auto i, auto d) { x = op(x, index::invoke_loop(f, i, d)); });
                                                  ^
./migraphx/kernels/softmax.hpp:36./migraphx/kernels/index.hpp::21154:: 16note: :called by 'softmax<2U, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 40, 256, 64>, migraphx::integral_const_array<unsigned int, 16384, 64, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 40, 256, 64>, migraphx::integral_const_array<unsigned int, 16384, 64, 1>>>>' 
note: called by 'invoke_loop<(lambda at ./migraphx/kernels/reduce.hpp:110:25), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i, d);
               ^    block::template run<reduce::with_axis<Input, Axis>>([&](auto, auto r) {

                    ^
./migraphx/kernels/index.hpp:198:25main.cpp:: 13note: :called by 'for_stride<true, (lambda at ./migraphx/kernels/reduce.hpp:110:25), migraphx::integral_constant<unsigned int, 16>, migraphx::integral_constant<unsigned int, 64>>'9
: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 40, 256, 64>, migraphx::integral_const_array<unsigned int, 16384, 64, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 40, 256, 64>, migraphx::integral_const_array<unsigned int, 16384, 64, 1>>>>'
                        invoke_loop(f, start, _c<0>);
                        ^
        softmax<2>(input, output);
./migraphx/kernels/index.hpp        ^:
232:9: note: called by 'local_stride<(lambda at ./migraphx/kernels/reduce.hpp:110:25), migraphx::integral_constant<unsigned int, 16>>'
./migraphx/kernels/vectorize.hpp        for_stride<true>(local, n, nlocal(), f);:
257        ^:
13: note: ./migraphx/kernels/reduce.hppcalled by 'operator()<(lambda at main.cpp:12:74), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 40, 256, 256>, migraphx::integral_const_array<unsigned int, 65536, 256, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 40, 256, 256>, migraphx::integral_const_array<unsigned int, 65536, 256, 1>>>>':
110:9: note:             f(vectorize_tensor<N, Axis>(xs)...);called by 'block_reduce<migraphx::op::max, migraphx::lowest, migraphx::integral_constant<unsigned int, 16>, (lambda at ./migraphx/kernels/reduce.hpp:373:51)>'

            ^
./migraphx/kernels/functional.hpp    idx.local_stride(n, [&](auto i, auto d) { x = op(x, index::invoke_loop(f, i, d)); });:
257        ^:
58: note: called by 'operator()<(lambda at main.cpp:12:74)>'
./migraphx/kernels/reduce.hpp:373:20: note: called by 'reduce_impl<migraphx::op::max, migraphx::lowest, migraphx::op::id, migraphx::integral_constant<unsigned int, 16>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(4))), 1, migraphx::integral_constant<unsigned int, 16>> &>'    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                         ^
            return block_reduce(idx, op, init, n, [&](auto j, auto d) {./migraphx/kernels/functional.hpp
:                   ^273
:50:./migraphx/kernels/reduce.hpp :note: 314called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 40, 256, 256>, migraphx::integral_const_array<unsigned int, 65536, 256, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 40, 256, 256>, migraphx::integral_const_array<unsigned int, 65536, 256, 1>>>>':
28: note: called by 'operator()<migraphx::integral_constant<unsigned int, 16>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(4))), 1, migraphx::integral_constant<unsigned int, 16>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
            return derived.reduce_impl(op, init, read, n, xs...);
                           ^
./migraphx/kernels/args.hpp:39./migraphx/kernels/reduce.hpp::12278:: 43note: :called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, void, void>' 
note: called by 'operator()<migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(4))), 1, migraphx::integral_constant<unsigned int, 16>> &>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45        return [=](auto&&... xs) { return f(get_size(xs...), make_inner_slice(xs)...); };:
37                                          ^:
 note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'./migraphx/kernels/softmax.hpp
:41:24: note: called by 'operator()<migraphx::array<unsigned int, 3>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
        const auto c = r.reduce(op::max{}, lowest{}, op::id{})(input);./migraphx/kernels/functional.hpp
:                       ^273
:./migraphx/kernels/reduce.hpp16::414 :note: 13called by 'operator()<(lambda at main.cpp:12:74), void *, void *>':
 note: called by 'operator()<unsigned int>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
            f(out_idx, make(idx, [&](auto input) { return reduce_slice<Output>(input, out_idx); }));./migraphx/kernels/functional.hpp
:            ^257
:58./migraphx/kernels/index.hpp:: 2160note:  error:called by 'operator()<(lambda at main.cpp:12:74)>'s16
 generated: when compiling for  gfx908note: .
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };called by 'invoke_loop<(lambda at ./migraphx/kernels/reduce.hpp:412:53), unsigned int, migraphx::integral_constant<int, 0>>'

                                                         ^
        return f(i);main.cpp
:               ^12
:73:./migraphx/kernels/index.hpp :note: 202called by 'softmax_kernel':
21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/reduce.hpp:412:53), migraphx::integral_constant<unsigned int, 2621440>, migraphx::integral_constant<unsigned int, 2621440>>'
    transform_args(make_tensors(), vectorize<4, 2>())(input_p, output_p)([](auto input, auto output) {                    invoke_loop(f, start, _c<0>);

                                                                        ^                    ^

./migraphx/kernels/index.hpp:/usr/include/x86_64-linux-gnu/bits/mathcalls.h226::3299::1 :note:  called by 'global_stride<(lambda at ./migraphx/kernels/reduce.hpp:412:53), migraphx::integral_constant<unsigned int, 2621440>>'note: 
'__fmax' declared here
        for_stride<false>(global, n, nglobal(), f);
        ^
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
./migraphx/kernels/reduce.hpp:412/usr/include/math.h::13278:: 3note: :called by 'run<migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 1>, migraphx::integral_const_array<unsigned int, 65536, 16, 1>>, (lambda at ./migraphx/kernels/softmax.hpp:36:57)>' 
note: expanded from macro '__MATHCALLX'
        idx.global_stride(nelements * idx.nlocal(), [&](auto i) {
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)            ^

  ^
/usr/include/math.h:281./migraphx/kernels/softmax.hpp::2236:: 21note: :expanded from macro '__MATHDECLX' 
note: called by 'softmax<2U, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 16>, migraphx::integral_const_array<unsigned int, 65536, 16, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 16>, migraphx::integral_const_array<unsigned int, 65536, 16, 1>>>>'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
    block::template run<reduce::with_axis<Input, Axis>>([&](auto, auto r) {
/usr/include/x86_64-linux-gnu/sys/cdefs.h                    ^:
105:23: main.cppnote: :expanded from macro '__CONCAT'13
:9: note: #define __CONCAT(x,y)   x ## ycalled by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 16>, migraphx::integral_const_array<unsigned int, 65536, 16, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 16>, migraphx::integral_const_array<unsigned int, 65536, 16, 1>>>>'

                        ^
<scratch space>:        softmax<2>(input, output);117
:        ^1
: note: expanded from here
__fmax
^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at main.cpp:12:74), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 64>, migraphx::integral_const_array<unsigned int, 262144, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 64>, migraphx::integral_const_array<unsigned int, 262144, 64, 1>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:12:74)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 64>, migraphx::integral_const_array<unsigned int, 262144, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 64>, migraphx::integral_const_array<unsigned int, 262144, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at main.cpp:12:74), void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:12:74)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
main.cpp:12:73: note: called by 'softmax_kernel'
    transform_args(make_tensors(), vectorize<4, 2>())(input_p, output_p)([](auto input, auto output) {
                                                                        ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/softmax.hpp:27:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/ops.hpp:93:26: note: called by 'operator()<_Float16, _Float16>'
        return migraphx::max(x, y);
                         ^
./migraphx/kernels/reduce.hpp:110:51: note: called by 'operator()<unsigned int, migraphx::integral_constant<int, 0>>'
    idx.local_stride(n, [&](auto i, auto d) { x = op(x, index::invoke_loop(f, i, d)); });
                                                  ^
./migraphx/kernels/index.hpp:154:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/reduce.hpp:110:25), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i, d);
               ^
./migraphx/kernels/index.hpp:198:25: note: called by 'for_stride<true, (lambda at ./migraphx/kernels/reduce.hpp:110:25), migraphx::integral_constant<unsigned int, 32>, migraphx::integral_constant<unsigned int, 64>>'
                        invoke_loop(f, start, _c<0>);
                        ^
./migraphx/kernels/index.hpp:232:9: note: called by 'local_stride<(lambda at ./migraphx/kernels/reduce.hpp:110:25), migraphx::integral_constant<unsigned int, 32>>'
        for_stride<true>(local, n, nlocal(), f);
        ^
./migraphx/kernels/reduce.hpp:110:9: note: called by 'block_reduce<migraphx::op::max, migraphx::lowest, migraphx::integral_constant<unsigned int, 32>, (lambda at ./migraphx/kernels/reduce.hpp:373:51)>'
    idx.local_stride(n, [&](auto i, auto d) { x = op(x, index::invoke_loop(f, i, d)); });
        ^
./migraphx/kernels/reduce.hpp:373:20: note: called by 'reduce_impl<migraphx::op::max, migraphx::lowest, migraphx::op::id, migraphx::integral_constant<unsigned int, 32>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(2))), 1, migraphx::integral_constant<unsigned int, 32>> &>'
            return block_reduce(idx, op, init, n, [&](auto j, auto d) {
                   ^
./migraphx/kernels/reduce.hpp:314:28: note: called by 'operator()<migraphx::integral_constant<unsigned int, 32>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(2))), 1, migraphx::integral_constant<unsigned int, 32>>>'
            return derived.reduce_impl(op, init, read, n, xs...);
                           ^
./migraphx/kernels/reduce.hpp:278:43: note: called by 'operator()<migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(2))), 1, migraphx::integral_constant<unsigned int, 32>> &>'
        return [=](auto&&... xs) { return f(get_size(xs...), make_inner_slice(xs)...); };
                                          ^
./migraphx/kernels/softmax.hpp:41:24: note: called by 'operator()<migraphx::array<unsigned int, 3>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>>'
        const auto c = r.reduce(op::max{}, lowest{}, op::id{})(input);
                       ^
./migraphx/kernels/reduce.hpp:414:13: note: called by 'operator()<unsigned int>'
            f(out_idx, make(idx, [&](auto input) { return reduce_slice<Output>(input, out_idx); }));
            ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/reduce.hpp:412:53), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/reduce.hpp:412:53), migraphx::integral_constant<unsigned int, 1310720>, migraphx::integral_constant<unsigned int, 1310720>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/reduce.hpp:412:53), migraphx::integral_constant<unsigned int, 1310720>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/reduce.hpp:412:13: note: called by 'run<migraphx::shape<migraphx::integral_const_array<unsigned int, 20, 1024, 1>, migraphx::integral_const_array<unsigned int, 32768, 32, 1>>, (lambda at ./migraphx/kernels/softmax.hpp:36:57)>'
        idx.global_stride(nelements * idx.nlocal(), [&](auto i) {
            ^
./migraphx/kernels/softmax.hpp:36:21: note: called by 'softmax<2U, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 20, 1024, 32>, migraphx::integral_const_array<unsigned int, 32768, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 20, 1024, 32>, migraphx::integral_const_array<unsigned int, 32768, 32, 1>>>>'
    block::template run<reduce::with_axis<Input, Axis>>([&](auto, auto r) {
                    ^
main.cpp:13:9: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 20, 1024, 32>, migraphx::integral_const_array<unsigned int, 32768, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 20, 1024, 32>, migraphx::integral_const_array<unsigned int, 32768, 32, 1>>>>'
        softmax<2>(input, output);
        ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at main.cpp:12:74), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 20, 1024, 64>, migraphx::integral_const_array<unsigned int, 65536, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 20, 1024, 64>, migraphx::integral_const_array<unsigned int, 65536, 64, 1>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:12:74)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 20, 1024, 64>, migraphx::integral_const_array<unsigned int, 65536, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 20, 1024, 64>, migraphx::integral_const_array<unsigned int, 65536, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at main.cpp:12:74), void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:12:74)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
main.cpp:12:73: note: called by 'softmax_kernel'
    transform_args(make_tensors(), vectorize<2, 2>())(input_p, output_p)([](auto input, auto output) {
                                                                        ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/softmax.hpp:27:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/ops.hpp:93:26: note: called by 'operator()<_Float16, _Float16>'
        return migraphx::max(x, y);
                         ^
./migraphx/kernels/reduce.hpp:110:51: note: called by 'operator()<unsigned int, migraphx::integral_constant<int, 3>>'
    idx.local_stride(n, [&](auto i, auto d) { x = op(x, index::invoke_loop(f, i, d)); });
                                                  ^
./migraphx/kernels/index.hpp:154:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/reduce.hpp:110:25), unsigned int, migraphx::integral_constant<int, 3>>'
        return f(i, d);
               ^
./migraphx/kernels/index.hpp:170:21: note: called by 'operator()<migraphx::integral_constant<int, 3>, migraphx::integral_constant<unsigned int, 3>>'
                    invoke_loop(f, i, d);
                    ^
./migraphx/kernels/functional.hpp:181:25: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/index.hpp:167:18) &, migraphx::integral_constant<int, 3>, migraphx::integral_constant<unsigned int, 3> &>'
    return fold_impl(f, f(static_cast<T&&>(x), static_cast<U&&>(y)), static_cast<Ts&&>(xs)...);
                        ^
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/index.hpp:167:18) &, migraphx::integral_constant<int, 2>, migraphx::integral_constant<unsigned int, 2> &, migraphx::integral_constant<unsigned int, 3> &>'
    return fold_impl(f, f(static_cast<T&&>(x), static_cast<U&&>(y)), static_cast<Ts&&>(xs)...);
           ^
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/index.hpp:167:18) &, migraphx::integral_constant<int, 1>, migraphx::integral_constant<unsigned int, 1> &, migraphx::integral_constant<unsigned int, 2> &, migraphx::integral_constant<unsigned int, 3> &>'
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/index.hpp:167:18) &, const migraphx::integral_constant<int, 0> &, migraphx::integral_constant<unsigned int, 0> &, migraphx::integral_constant<unsigned int, 1> &, migraphx::integral_constant<unsigned int, 2> &, migraphx::integral_constant<unsigned int, 3> &>'
./migraphx/kernels/functional.hpp:187:39: note: called by 'operator()<const migraphx::integral_constant<int, 0> &, migraphx::integral_constant<unsigned int, 0> &, migraphx::integral_constant<unsigned int, 1> &, migraphx::integral_constant<unsigned int, 2> &, migraphx::integral_constant<unsigned int, 3> &>'
    return [=](auto&&... xs) { return fold_impl(f, static_cast<decltype(xs)&&>(xs)...); };
                                      ^
./migraphx/kernels/index.hpp:167:13: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>>'
            fold([&](auto d, auto k) {
            ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/index.hpp:166:52) &, 0U, 1U, 2U, 3U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<4U, (lambda at ./migraphx/kernels/index.hpp:166:52) &>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:144:12: note: called by 'sequence<migraphx::integral_constant<unsigned int, 4>, (lambda at ./migraphx/kernels/index.hpp:166:52)>'
    return sequence_c<ic>(f);
           ^
./migraphx/kernels/index.hpp:166:9: note: called by 'for_stride_loop_unroll<(lambda at ./migraphx/kernels/reduce.hpp:110:25), migraphx::integral_constant<unsigned int, 1024>, migraphx::integral_constant<unsigned int, 256>>'
        sequence(max_stride_iterations(n, stride), [&](auto... ks) {
        ^
./migraphx/kernels/index.hpp:209:21: note: called by 'for_stride<true, (lambda at ./migraphx/kernels/reduce.hpp:110:25), migraphx::integral_constant<unsigned int, 1024>, migraphx::integral_constant<unsigned int, 256>>'
                    for_stride_loop_unroll(start, n, stride, f);
                    ^
./migraphx/kernels/index.hpp:232:9: note: called by 'local_stride<(lambda at ./migraphx/kernels/reduce.hpp:110:25), migraphx::integral_constant<unsigned int, 1024>>'
        for_stride<true>(local, n, nlocal(), f);
        ^
./migraphx/kernels/reduce.hpp:110:9: note: called by 'block_reduce<migraphx::op::max, migraphx::lowest, migraphx::integral_constant<unsigned int, 1024>, (lambda at ./migraphx/kernels/reduce.hpp:373:51)>'
    idx.local_stride(n, [&](auto i, auto d) { x = op(x, index::invoke_loop(f, i, d)); });
        ^
./migraphx/kernels/reduce.hpp:373:20: note: called by 'reduce_impl<migraphx::op::max, migraphx::lowest, migraphx::op::id, migraphx::integral_constant<unsigned int, 1024>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(4))), 4, migraphx::integral_constant<unsigned int, 1024>> &>'
            return block_reduce(idx, op, init, n, [&](auto j, auto d) {
                   ^
./migraphx/kernels/reduce.hpp:314:28: note: called by 'operator()<migraphx::integral_constant<unsigned int, 1024>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(4))), 4, migraphx::integral_constant<unsigned int, 1024>>>'
            return derived.reduce_impl(op, init, read, n, xs...);
                           ^
./migraphx/kernels/reduce.hpp:278:43: note: called by 'operator()<migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>::inner_storage<_Float16 __attribute__((ext_vector_type(4))), 4, migraphx::integral_constant<unsigned int, 1024>> &>'
        return [=](auto&&... xs) { return f(get_size(xs...), make_inner_slice(xs)...); };
                                          ^
./migraphx/kernels/softmax.hpp:41:24: note: called by 'operator()<migraphx::array<unsigned int, 3>, migraphx::reduce::block::reducer<(lambda at ./migraphx/kernels/reduce.hpp:414:34)>>'
        const auto c = r.reduce(op::max{}, lowest{}, op::id{})(input);
                       ^
./migraphx/kernels/reduce.hpp:414:13: note: called by 'operator()<unsigned int>'
            f(out_idx, make(idx, [&](auto input) { return reduce_slice<Output>(input, out_idx); }));
            ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/reduce.hpp:412:53), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/reduce.hpp:412:53), migraphx::integral_constant<unsigned int, 10485760>, migraphx::integral_constant<unsigned int, 10485760>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/reduce.hpp:412:53), migraphx::integral_constant<unsigned int, 10485760>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/reduce.hpp:412:13: note: called by 'run<migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 1>, migraphx::integral_const_array<unsigned int, 4194304, 1024, 1>>, (lambda at ./migraphx/kernels/softmax.hpp:36:57)>'
        idx.global_stride(nelements * idx.nlocal(), [&](auto i) {
            ^
./migraphx/kernels/softmax.hpp:36:21: note: called by 'softmax<2U, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 1024>, migraphx::integral_const_array<unsigned int, 4194304, 1024, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 1024>, migraphx::integral_const_array<unsigned int, 4194304, 1024, 1>>>>'
    block::template run<reduce::with_axis<Input, Axis>>([&](auto, auto r) {
                    ^
main.cpp:13:9: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 1024>, migraphx::integral_const_array<unsigned int, 4194304, 1024, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(4))), migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 1024>, migraphx::integral_const_array<unsigned int, 4194304, 1024, 1>>>>'
        softmax<2>(input, output);
        ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at main.cpp:12:74), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 4096>, migraphx::integral_const_array<unsigned int, 16777216, 4096, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 4096>, migraphx::integral_const_array<unsigned int, 16777216, 4096, 1>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:12:74)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 4096>, migraphx::integral_const_array<unsigned int, 16777216, 4096, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 10, 4096, 4096>, migraphx::integral_const_array<unsigned int, 16777216, 4096, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at main.cpp:12:74), void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:12:74)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
main.cpp:12:73: note: called by 'softmax_kernel'
    transform_args(make_tensors(), vectorize<4, 2>())(input_p, output_p)([](auto input, auto output) {
                                                                        ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
