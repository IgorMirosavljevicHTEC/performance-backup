In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>, migraphx::integral_constant<unsigned int, 393216>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1775616>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 13642240>, migraphx::integral_constant<unsigned int, 13642240>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 13642240>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
terminate called after throwing an instance of 'migraphx::version_1::exception'
  what():  /src/AMDMIGraphX/src/process.cpp:97: check_exec: Command cd /tmp/migraphx-compile-2477-7f3069ffb700-646c171334e370-Efht9uFxr8BKxI1l; /opt/rocm/llvm/bin/clang++ -Wno-float-equal -DMIGRAPHX_NGLOBAL=393216 -DMIGRAPHX_NLOCAL=1024 -Weverything -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-conversion -Wno-double-promotion -Wno-exit-time-destructors -Wno-extra-semi -Wno-extra-semi-stmt -Wno-float-conversion -Wno-gnu-anonymous-struct -Wno-gnu-zero-variadic-macro-arguments -Wno-missing-prototypes -Wno-nested-anon-types -Wno-padded -Wno-shorten-64-to-32 -Wno-sign-conversion -Wno-sign-compare -Wno-unused-command-line-argument -Wno-weak-vtables -Wno-c99-extensions -ftemplate-backtrace-limit=0 -Werror --std=c++17 -fno-gpu-rdc -c --offload-arch=gfx908:sramecc+:xnack- --cuda-device-only -O3  -Wno-unused-command-line-argument -Wno-cuda-compat -mllvm -amdgpu-early-inline-all=true -mllvm -amdgpu-function-calls=false -x hip -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm-5.4.2/llvm/lib/clang/15.0.0/include/.. -D__HIP_PLATFORM_HCC__=1 -D__HIP_PLATFORM_AMD__=1 -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm/include --hip-link --hip-link -I. main.cpp -o main.o exited with status 1
3 errors generated when compiling for gfx908.
timeout: the monitored command dumped core
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from In file included from main.cppmain.cpp::33:
:
In file included from In file included from ./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp::2929:
:
./migraphx/kernels/math.hpp:191:./migraphx/kernels/math.hpp56::191 :error: 56no member named '__hmax' in the global namespace; did you mean '__fmax'?:
 error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

                                                     ~~^~~~~~                                                     ~~^~~~~~

                                                       __fmax                                                       __fmax

./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::6767::6464::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~                                                               ^~~~~

/usr/include/x86_64-linux-gnu/bits/mathcalls.h/usr/include/x86_64-linux-gnu/bits/mathcalls.h::329329::11::  note: note: '__fmax' declared here'__fmax' declared here

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^^

/usr/include/math.h:/usr/include/math.h278::2783::3 :note:  expanded from macro '__MATHCALLX'note: 
expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^/usr/include/math.h
:281/usr/include/math.h::22281:: 22note: :expanded from macro '__MATHDECLX' 
note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^/usr/include/x86_64-linux-gnu/sys/cdefs.h
:105/usr/include/x86_64-linux-gnu/sys/cdefs.h::23105:: 23note: :expanded from macro '__CONCAT' 
note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^#define __CONCAT(x,y)   x ## y

                        ^
<scratch space>:117<scratch space>::1117:: 1note: :expanded from here 
note: expanded from here__fmax

^__fmax

^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from In file included from main.cppmain.cpp::33:
:
In file included from In file included from ./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp::2929:
:
./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::192192::5656::  error: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?no member named '__hmin' in the global namespace; did you mean '__fmin'?

MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)

                                                     ~~^~~~~~                                                     ~~^~~~~~

                                                       __fmin                                                       __fmin

./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::6767::6464::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~                                                               ^~~~~

/usr/include/x86_64-linux-gnu/bits/mathcalls.h/usr/include/x86_64-linux-gnu/bits/mathcalls.h::332332::11::  note: note: '__fmin' declared here'__fmin' declared here

__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^^

/usr/include/math.h/usr/include/math.h::278278::33::  note: note: expanded from macro '__MATHCALLX'expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^  ^

/usr/include/math.h/usr/include/math.h::281281::2222::  note: note: expanded from macro '__MATHDECLX'expanded from macro '__MATHDECLX'

  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h/usr/include/x86_64-linux-gnu/sys/cdefs.h::105105::2323::  note: note: expanded from macro '__CONCAT'expanded from macro '__CONCAT'

#define __CONCAT(x,y)   x ## y#define __CONCAT(x,y)   x ## y

                        ^                        ^

<scratch space><scratch space>::118118::11::  note: note: expanded from hereexpanded from here

__fmin__fmin

^^

In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from In file included from In file included from main.cppmain.cppmain.cpp:::333:
:
:
In file included from In file included from In file included from ./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp:::292929:
:
:
./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp:::191191191:::565656:::   error: error: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?no member named '__hmax' in the global namespace; did you mean '__fmax'?no member named '__hmax' in the global namespace; did you mean '__fmax'?


MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)


                                                     ~~^~~~~~                                                     ~~^~~~~~                                                     ~~^~~~~~


                                                       __fmax                                                       __fmax                                                       __fmax


./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::./migraphx/kernels/math.hpp6767::In file included from :6764main.cpp64::::64 3 :note: :
note:  expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'In file included from expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'note: 
./migraphx/kernels/pointwise.hpp
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':
29:
./migraphx/kernels/math.hpp:191:56: error:     inline auto __device__ name(type x, type y)->type { return fname(x, y); }no member named '__hmax' in the global namespace; did you mean '__fmax'?
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~

                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.hMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax):
/usr/include/x86_64-linux-gnu/bits/mathcalls.h329                                                     ~~^~~~~~::
/usr/include/x86_64-linux-gnu/bits/mathcalls.h3291                                                       __fmax:::
3291 :./migraphx/kernels/math.hpp:note: 1: '__fmax' declared here:67note: 
 :'__fmax' declared herenote: 64
'__fmax' declared here:
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__)); 
note: ^expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));


__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));^/usr/include/math.h

:^    inline auto __device__ name(type x, type y)->type { return fname(x, y); }278
/usr/include/math.h
::                                                               ^~~~~/usr/include/math.h3278
:::278 3:/usr/include/x86_64-linux-gnu/bits/mathcalls.hnote: :3:expanded from macro '__MATHCALLX' :329
note:  :expanded from macro '__MATHCALLX'note: 1
expanded from macro '__MATHCALLX':  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
 
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)note:   ^
'__fmax' declared here
  ^  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

/usr/include/math.h
/usr/include/math.h:__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));  ^:281

281:^/usr/include/math.h:22
:22:281/usr/include/math.h: :: note: 22278note: expanded from macro '__MATHDECLX'::expanded from macro '__MATHDECLX'
 3
note: :expanded from macro '__MATHDECLX' 
note: expanded from macro '__MATHCALLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
/usr/include/x86_64-linux-gnu/sys/cdefs.h
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)                     ^:  ^

105
                     ^:/usr/include/x86_64-linux-gnu/sys/cdefs.h/usr/include/math.h
23:::/usr/include/x86_64-linux-gnu/sys/cdefs.h105281 :::note: 1052322expanded from macro '__CONCAT':::
23  :note: note: #define __CONCAT(x,y)   x ## y expanded from macro '__CONCAT'expanded from macro '__MATHDECLX'
note: 

                        ^expanded from macro '__CONCAT'

#define __CONCAT(x,y)   x ## y  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

<scratch space>                        ^#define __CONCAT(x,y)   x ## y                     ^:


117                        ^/usr/include/x86_64-linux-gnu/sys/cdefs.h:<scratch space>
:1:105:117:<scratch space> :23:note: 1:117expanded from here: :
 note: 1note: __fmaxexpanded from macro '__CONCAT':expanded from here

 
^note: #define __CONCAT(x,y)   x ## y
__fmaxexpanded from here


                        ^^
__fmax

<scratch space>^:
117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
In file included from main.cpp:3:
In file included from   __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)./migraphx/kernels/pointwise.hpp
:                     ^29
:
./migraphx/kernels/math.hpp/usr/include/x86_64-linux-gnu/sys/cdefs.h::191105::5623::  error: note: no member named '__hmax' in the global namespace; did you mean '__fmax'?expanded from macro '__CONCAT'

#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from hereMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

__fmin                                                     ~~^~~~~~

^                                                       __fmax

./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191In file included from :main.cpp56::3 :
error: In file included from no member named '__hmax' in the global namespace; did you mean '__fmax'?./migraphx/kernels/pointwise.hpp
:29:
./migraphx/kernels/math.hpp:192:56In file included from :main.cpp :error: 3no member named '__hmin' in the global namespace; did you mean '__fmin'?:

In file included from MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)./migraphx/kernels/pointwise.hpp
:                                                     ~~^~~~~~29
:
                                                       __fmax./migraphx/kernels/math.hpp
:191:./migraphx/kernels/math.hpp56::67 MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):error: 
64no member named '__hmax' in the global namespace; did you mean '__fmax'?                                                     ~~^~~~~~:

                                                        __fminnote: 
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
./migraphx/kernels/math.hpp:67:64: note: MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }                                                     ~~^~~~~~

                                                               ^~~~~                                                       __fmax

./migraphx/kernels/math.hpp:67:64    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:/usr/include/x86_64-linux-gnu/bits/mathcalls.h
 :                                                               ^~~~~note: 329
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':
1: note: /usr/include/x86_64-linux-gnu/bits/mathcalls.h'__fmax' declared here:
332:1    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
                                                                ^~~~~note: __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
'__fmin' declared here

^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329/usr/include/math.h::1278:: 3__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));note: :
'__fmax' declared here ^
note: 
expanded from macro '__MATHCALLX'
/usr/include/math.h:278:3__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));:
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib) ^
note: 
  ^expanded from macro '__MATHCALLX'

/usr/include/math.h/usr/include/math.h::278281::322::   __MATHDECLX (_Mdouble_,function,suffix, args, attrib) note: 
note: expanded from macro '__MATHCALLX'  ^expanded from macro '__MATHDECLX'


/usr/include/math.h:281:22:   __MATHDECLX (_Mdouble_,function,suffix, args, attrib)note: 
expanded from macro '__MATHDECLX'  ^  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)


                     ^/usr/include/math.h
:281/usr/include/x86_64-linux-gnu/sys/cdefs.h::22105:: 23  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)note: :
expanded from macro '__MATHDECLX'                      ^
note: 
expanded from macro '__CONCAT'/usr/include/x86_64-linux-gnu/sys/cdefs.h
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
105#define __CONCAT(x,y)   x ## y                     ^:

23                        ^:/usr/include/x86_64-linux-gnu/sys/cdefs.h
 :note: 105expanded from macro '__CONCAT'<scratch space>:
:23117:: 1note: #define __CONCAT(x,y)   x ## y:expanded from macro '__CONCAT'
 
                        ^note: 
expanded from here#define __CONCAT(x,y)   x ## y
<scratch space>
__fmax:                        ^
118
^:
1<scratch space>:: 117note: :expanded from here1
: __fminnote: 
expanded from here^

__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
In file included from   __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)main.cpp
:                     ^3
:
In file included from /usr/include/x86_64-linux-gnu/sys/cdefs.h./migraphx/kernels/pointwise.hpp::10529::
23./migraphx/kernels/math.hpp:: 192note: :expanded from macro '__CONCAT'56
: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?#define __CONCAT(x,y)   x ## y

                        ^
<scratch space>:117:1: note: expanded from hereMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)

__fmax                                                     ~~^~~~~~

^                                                       __fmin

./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:In file included from 29main.cpp:
:./migraphx/kernels/math.hpp3::
191In file included from :./migraphx/kernels/pointwise.hpp56::29 :
error: ./migraphx/kernels/math.hppno member named '__hmax' in the global namespace; did you mean '__fmax'?:
192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)

                                                     ~~^~~~~~                                                     ~~^~~~~~
In file included from 
                                                       __fmaxmain.cpp                                                       __fmin
:
3./migraphx/kernels/math.hpp:
./migraphx/kernels/math.hpp:In file included from :67./migraphx/kernels/pointwise.hppIn file included from 67::main.cpp:6429:64::
3: ./migraphx/kernels/math.hpp:
 note: :In file included from note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'192./migraphx/kernels/pointwise.hppexpanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
::
5629::
 ./migraphx/kernels/math.hpperror: :no member named '__hmin' in the global namespace; did you mean '__fmin'?192
:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }56
:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }                                                               ^~~~~ 

error:                                                                ^~~~~MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)no member named '__hmin' in the global namespace; did you mean '__fmin'?


/usr/include/x86_64-linux-gnu/bits/mathcalls.h                                                     ~~^~~~~~/usr/include/x86_64-linux-gnu/bits/mathcalls.h:
:329                                                       __fmin332:
:MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)11./migraphx/kernels/math.hpp
:::                                                     ~~^~~~~~  67
note: note: :                                                       __fmin'__fmax' declared here'__fmin' declared here64


:./migraphx/kernels/math.hpp :note: 67expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':
64: note: __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));


^^    inline auto __device__ name(type x, type y)->type { return fname(x, y); }


                                                               ^~~~~/usr/include/math.h
/usr/include/math.h:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:278
/usr/include/x86_64-linux-gnu/bits/mathcalls.h278:                                                               ^~~~~::3
3323::: /usr/include/x86_64-linux-gnu/bits/mathcalls.h1 note: ::note: expanded from macro '__MATHCALLX'332 expanded from macro '__MATHCALLX'
:note: 
1'__fmin' declared here:
 note:   __MATHDECLX (_Mdouble_,function,suffix, args, attrib)'__fmin' declared here

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  ^

__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));  ^/usr/include/math.h

:^__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));/usr/include/math.h281

::^281/usr/include/math.h22
:::22/usr/include/math.h278 :::note:  2783expanded from macro '__MATHDECLX'note: ::
expanded from macro '__MATHDECLX'3 
:note:  expanded from macro '__MATHCALLX'note: 
expanded from macro '__MATHCALLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)                     ^  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)                     ^



  ^  ^/usr/include/x86_64-linux-gnu/sys/cdefs.h
/usr/include/x86_64-linux-gnu/sys/cdefs.h
:/usr/include/math.h:/usr/include/math.h105:105::281:28123:23::22:22 : :note:  note:  expanded from macro '__CONCAT'note: expanded from macro '__CONCAT'note: 
expanded from macro '__MATHDECLX'
expanded from macro '__MATHDECLX'

#define __CONCAT(x,y)   x ## y
#define __CONCAT(x,y)   x ## y                        ^

                        ^
<scratch space>:118<scratch space>::1  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)117:

:                      ^                     ^1note: 

:expanded from here/usr/include/x86_64-linux-gnu/sys/cdefs.h /usr/include/x86_64-linux-gnu/sys/cdefs.h
:note: :105__fminexpanded from here105:

:23^23__fmax:
:
  ^note: note: 
expanded from macro '__CONCAT'expanded from macro '__CONCAT'

#define __CONCAT(x,y)   x ## y#define __CONCAT(x,y)   x ## y

                        ^                        ^

<scratch space><scratch space>::118118::11::  note: note: expanded from hereexpanded from here

__fmin__fmin

^^

In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
In file included from main.cpp:4:
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));In file included from 
./migraphx/kernels/ops.hpp^:
27:
./migraphx/kernels/math.hpp:/usr/include/math.h192::27856::3 :error:  no member named '__hmin' in the global namespace; did you mean '__fmin'?note: 
expanded from macro '__MATHCALLX'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

                                                     ~~^~~~~~  ^

                                                       __fmin
/usr/include/math.h:./migraphx/kernels/math.hpp281::6722::64 :note:  expanded from macro '__MATHDECLX'note: 
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:332:/usr/include/x86_64-linux-gnu/sys/cdefs.h1::105 In file included from :note: main.cpp23'__fmin' declared here::
3 :
note: __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));In file included from expanded from macro '__CONCAT'
./migraphx/kernels/pointwise.hpp
^:
29#define __CONCAT(x,y)   x ## y:
/usr/include/math.h
./migraphx/kernels/math.hpp:                        ^:278
192::356<scratch space>:::  117note: error: :expanded from macro '__MATHCALLX'no member named '__hmin' in the global namespace; did you mean '__fmin'?1

: note: expanded from here  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^__fmax

/usr/include/math.h^:
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)281In file included from 
:main.cpp                                                     ~~^~~~~~22:
:3                                                       __fmin :

note: In file included from expanded from macro '__MATHDECLX'./migraphx/kernels/math.hpp./migraphx/kernels/pointwise.hpp
::6729::
64./migraphx/kernels/math.hpp::  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib) 192
note: :                     ^expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'56

:/usr/include/x86_64-linux-gnu/sys/cdefs.h :error: 105no member named '__hmin' in the global namespace; did you mean '__fmin'?:
23    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
                                                                ^~~~~note: 
expanded from macro '__CONCAT'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)/usr/include/x86_64-linux-gnu/bits/mathcalls.h#define __CONCAT(x,y)   x ## y
:
                                                     ~~^~~~~~332                        ^
:
                                                       __fmin1<scratch space>
:: 118./migraphx/kernels/math.hppnote: ::'__fmin' declared here167
:: 64note: :expanded from here 
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));note: __fmin
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
^
^

/usr/include/math.h:278:3:    inline auto __device__ name(type x, type y)->type { return fname(x, y); } 
note:                                                                ^~~~~expanded from macro '__MATHCALLX'

/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):
   ^note: 
'__fmin' declared here
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
                      ^note: 
expanded from macro '__MATHCALLX'
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h#define __CONCAT(x,y)   x ## y:
281                        ^:
22:<scratch space> :note: 118expanded from macro '__MATHDECLX':
1: note: expanded from here
__fmin
^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
In file included from ./migraphx/kernels/math.hppmain.cpp::673::
64In file included from :./migraphx/kernels/pointwise.hpp :note: 29expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':

./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax):
1                                                     ~~^~~~~~:
                                                        __fmaxnote: 
'__fmax' declared here
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3:     inline auto __device__ name(type x, type y)->type { return fname(x, y); }note: 
expanded from macro '__MATHCALLX'                                                               ^~~~~

/usr/include/x86_64-linux-gnu/bits/mathcalls.h:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)329
:  ^1
: /usr/include/math.hnote: :'__fmax' declared here281
:22: note: expanded from macro '__MATHDECLX'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)278
:                     ^3
: note: /usr/include/x86_64-linux-gnu/sys/cdefs.hexpanded from macro '__MATHCALLX':
105:23: note: expanded from macro '__CONCAT'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
#define __CONCAT(x,y)   x ## y
/usr/include/math.h                        ^:
281:22: <scratch space>note: :expanded from macro '__MATHDECLX'117
:1: note: expanded from here
__fmax
^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^In file included from 
main.cpp:3:
/usr/include/math.hIn file included from :./migraphx/kernels/pointwise.hpp278::293:
:./migraphx/kernels/math.hpp :note: 192expanded from macro '__MATHCALLX':
56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)note: 
expanded from macro '__MATHDECLX'                                                     ~~^~~~~~

                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note:   __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
#define __CONCAT(x,y)   x ## y
                        ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:<scratch space>332::1181::1 :note:  '__fmin' declared herenote: 
expanded from here
__fmin
^
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:In file included from 40main.cpp::664::
 In file included from note: ./migraphx/kernels/ops.hppcalled by 'operator()<unsigned int>':
27:
./migraphx/kernels/math.hpp:191:56                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });:
                                                                  ^error: 
no member named '__hmax' in the global namespace; did you mean '__fmax'?
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1881600>, migraphx::integral_constant<unsigned int, 1881600>>'

                                                     ~~^~~~~~
                                                       __fmax                    invoke_loop(f, start, _c<0>);

                    ^
./migraphx/kernels/math.hpp./migraphx/kernels/index.hpp::67226::649::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1881600>>'

        for_stride<false>(global, n, nglobal(), f);
        ^
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:    idx.global_stride(out.get_shape().elements(),1
:        ^ 
note: '__fmax' declared here
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'./migraphx/kernels/vectorize.hpp
:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)            ^

  ^
./migraphx/kernels/functional.hpp:/usr/include/math.h257::28158::22 :note:  called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'note: 
expanded from macro '__MATHDECLX'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
273                     ^:
50: /usr/include/x86_64-linux-gnu/sys/cdefs.hnote: :called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'105
:23: note: expanded from macro '__CONCAT'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^#define __CONCAT(x,y)   x ## y

                        ^./migraphx/kernels/functional.hpp
:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'<scratch space>
:117:1:             return f(arg_c<(is + size - 1) % size>()(xs...)...);note: 
expanded from here                   ^

__fmax./migraphx/kernels/functional.hpp
:^118
:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2959360>, migraphx::integral_constant<unsigned int, 2959360>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2959360>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1775616>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26In file included from :In file included from main.cpp53main.cpp:::3 3:
note: :
In file included from called by 'operator()<_Float16 &, _Float16 &>'In file included from ./migraphx/kernels/pointwise.hpp
./migraphx/kernels/pointwise.hpp::2929:
:
./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::191191::5656::  error: error:     pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);reference to __host__ function '__fmax' in __device__ functionreference to __host__ function '__fmax' in __device__ function


                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)note: 

called by 'operator()<unsigned int>'                                                       ^                                                       ^


main.cppmain.cpp::1515::                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });4545
::                                                                 ^  
note: note: called by 'inner_pointwise<_Float16, _Float16>'called by 'inner_pointwise<_Float16, _Float16>'

./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));

        return f(i);                                            ^                                            ^


               ^main.cpp
main.cpp::2626:./migraphx/kernels/index.hpp:53:53:202: : note: 21note: called by 'operator()<_Float16 &, _Float16 &>':called by 'operator()<_Float16 &, _Float16 &>'
 
note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2508800>, migraphx::integral_constant<unsigned int, 2508800>>'
                    invoke_loop(f, start, _c<0>);    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                    ^
                                                    ^
                                                    ^

./migraphx/kernels/index.hpp./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp:::2264040:::96666:::   note: note: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2508800>>'called by 'operator()<unsigned int>'called by 'operator()<unsigned int>'


        for_stride<false>(global, n, nglobal(), f);
        ^
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });

                                                                 ^                                                                 ^

./migraphx/kernels/index.hpp./migraphx/kernels/pointwise.hpp./migraphx/kernels/index.hpp:::16039160:::16916:::   note: note: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'


        return f(i);
               ^
        return f(i);
               ^    idx.global_stride(out.get_shape().elements(),
./migraphx/kernels/index.hpp
:        ^./migraphx/kernels/index.hpp202
::20221::21 :note:  ./migraphx/kernels/pointwise.hppcalled by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 5017600>, migraphx::integral_constant<unsigned int, 5017600>>'note: :
called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1775616>>'48
:36:                     invoke_loop(f, start, _c<0>);note: 
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'                    invoke_loop(f, start, _c<0>);                    ^


                    ^3
./migraphx/kernels/index.hpp error:./migraphx/kernels/index.hpps226:        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); }); generated:226
 when compiling for 9:                                   ^2gfx908:9
 error.
 :snote:   generatedcalled by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 5017600>>'note:  when compiling for 
called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>>'gfx908
./migraphx/kernels/vectorize.hpp.
:        for_stride<false>(global, n, nglobal(), f);253
:        for_stride<false>(global, n, nglobal(), f);        ^13

:        ^ 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
./migraphx/kernels/pointwise.hpp:39            f(xs...);:
./migraphx/kernels/pointwise.hpp9            ^::
39 :note: ./migraphx/kernels/functional.hpp9called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'::
257 :note: 58called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'    idx.global_stride(out.get_shape().elements(),:

         ^note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'    idx.global_stride(out.get_shape().elements(),

        ^
./migraphx/kernels/pointwise.hpp:48:36: note: ./migraphx/kernels/pointwise.hppcalled by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>':    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
48
:                                                         ^36
:         t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });note: 
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'                                   ^
./migraphx/kernels/functional.hpp
:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13:         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'./migraphx/kernels/vectorize.hpp                                                 ^
:
253            f(xs...);:
./migraphx/kernels/functional.hpp13            ^::
289 :./migraphx/kernels/functional.hppnote: 20:called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>':257
 :note: 58            f(xs...);called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>':

             ^note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
./migraphx/kernels/functional.hpp:257:58            return f(arg_c<(is + size - 1) % size>()(xs...)...);:
                    ^    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };note: 

called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'                                                         ^

./migraphx/kernels/functional.hpp:118:12: note: ./migraphx/kernels/functional.hppcalled by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:

273                                                         ^:
50:     return f(index_constant<Ns>{}...);note: 
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'./migraphx/kernels/functional.hpp           ^
:
273:./migraphx/kernels/functional.hpp50::138         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:note: 
20called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'                                                 ^:

 note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'./migraphx/kernels/functional.hpp
:289:20:         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });note: 
called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'    return detail::sequence_c_impl(f, detail::gens<N>{});                                                 ^


                   ^
./migraphx/kernels/functional.hpp:289:            return f(arg_c<(is + size - 1) % size>()(xs...)...);20
:                   ^ 
note: ./migraphx/kernels/functional.hppcalled by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>':./migraphx/kernels/functional.hpp
287::11816::12            return f(arg_c<(is + size - 1) % size>()(xs...)...); :
note:                     ^called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>>'note: 

called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'./migraphx/kernels/functional.hpp
:118:12: note:     return f(index_constant<Ns>{}...);called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'        return sequence_c<sizeof...(xs)>([&](auto... is) {


           ^               ^
    return f(index_constant<Ns>{}...);

./migraphx/kernels/functional.hpp           ^:./migraphx/kernels/functional.hpp
138::./migraphx/kernels/functional.hpp25720:::13858 ::note: 20 called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>':note: 
 called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'note: 
called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
    return detail::sequence_c_impl(f, detail::gens<N>{});    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

./migraphx/kernels/functional.hpp                   ^                                                         ^:

287:16: note: ./migraphx/kernels/functional.hppcalled by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>>':
./migraphx/kernels/functional.hpp287::27316:        return sequence_c<sizeof...(xs)>([&](auto... is) {:16
 :               ^note:  
called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'note: 
./migraphx/kernels/functional.hppcalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>>':
257:58:        return sequence_c<sizeof...(xs)>([&](auto... is) { 
note:                ^called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'

./migraphx/kernels/functional.hpp:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });257
:               ^58
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
 ./migraphx/kernels/functional.hpp                                                         ^note: :
called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'257
:58: note: ./migraphx/kernels/functional.hppcalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':
273    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
16                                                         ^:
 note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^./migraphx/kernels/functional.hpp
:273:16:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); }); 
note:                ^./migraphx/kernels/functional.hppcalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
:./migraphx/kernels/functional.hpp
273::25750::58 :        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });note:  
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>>'note:                ^
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'

./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                 ^                                                         ^

    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/args.hpp:39./migraphx/kernels/functional.hpp::./migraphx/kernels/functional.hpp12273:::273 50:note: :50called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>' :
note:  called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>>'note: 
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
 
                                                 ^note:                                                  ^
called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'

./migraphx/kernels/args.hpp:39./migraphx/kernels/args.hpp::1239:: 12note: :called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>' 
note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };

                                    ^    return f(make_tensor<Ns>::apply(xs)...);

           ^    return f(make_tensor<Ns>::apply(xs)...);

./migraphx/kernels/functional.hpp           ^./migraphx/kernels/args.hpp:
:27345./migraphx/kernels/args.hpp:::163745:::  37note: note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>' 

note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
./migraphx/kernels/functional.hpp                                    ^        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };:

257./migraphx/kernels/functional.hpp                                    ^::
58273:./migraphx/kernels/functional.hpp: :16note: 273:called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>': 
16note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });48               ^
:
               ^9
./migraphx/kernels/functional.hpp::./migraphx/kernels/functional.hpp 257:note: :257called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'58:
:58 :note:  called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };38    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
:
                                                         ^                                                          ^
note: 
called by 'add_relu_kernel'./migraphx/kernels/pointwise.hpp
./migraphx/kernels/pointwise.hpp::4848::99::  note: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'

    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });:

1        ^        ^:

main.cpp main.cpp:note: :26'__fmax' declared here26:
:3838::  note: note: called by 'add_relu_kernel'called by 'add_relu_kernel'

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);

                                     ^                                     ^

/usr/include/x86_64-linux-gnu/bits/mathcalls.h  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)/usr/include/x86_64-linux-gnu/bits/mathcalls.h:
:329  ^329:
:11/usr/include/math.h:::  281note: note: :'__fmax' declared here'__fmax' declared here22

: note: expanded from macro '__MATHDECLX'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^^

  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
/usr/include/math.h/usr/include/math.h                     ^::
278278:/usr/include/x86_64-linux-gnu/sys/cdefs.h:3:3:105: : note: 23note: expanded from macro '__MATHCALLX':expanded from macro '__MATHCALLX'
 
note: expanded from macro '__CONCAT'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
#define __CONCAT(x,y)   x ## y  ^  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)


                        ^  ^/usr/include/math.h

:<scratch space>281/usr/include/math.h:::11722281:::1 22:note: : expanded from macro '__MATHDECLX' note: 
note: expanded from hereexpanded from macro '__MATHDECLX'

__fmax
^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)105
:                     ^23
: /usr/include/x86_64-linux-gnu/sys/cdefs.hnote: :expanded from macro '__CONCAT'105
:23: note: expanded from macro '__CONCAT'#define __CONCAT(x,y)   x ## y

                        ^
<scratch space>:#define __CONCAT(x,y)   x ## y117
:                        ^1
: <scratch space>note: :expanded from here117
:1__fmax:
 ^note: 
expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>, migraphx::integral_constant<unsigned int, 393216>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
3./migraphx/kernels/functional.hpp error:s273 generated: when compiling for 16gfx908:.
 note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
33    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; }; error error
ss                                                         ^ generated generated
 when compiling for  when compiling for ./migraphx/kernels/pointwise.hppgfx908gfx908:.
.
48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>, migraphx::integral_constant<unsigned int, 3763200>>'
                    invoke_loop(f, start, _c<0>);
                    ^
In file included from ./migraphx/kernels/index.hppmain.cpp::2263::
9In file included from :./migraphx/kernels/pointwise.hpp :note: 29called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>>':

./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
        for_stride<false>(global, n, nglobal(), f);
        ^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26./migraphx/kernels/pointwise.hpp:: 39note: :called by 'operator()<_Float16, _Float16>'9
: note: MIGRAPHX_DEVICE_MATH_VEC(max)called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'

                         ^
./migraphx/kernels/vec.hpp:    idx.global_stride(out.get_shape().elements(),119
:        ^29
: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);./migraphx/kernels/pointwise.hpp
:                            ^48
:36./migraphx/kernels/math.hpp:: 234note: :called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'1
: note: called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });54
:                                   ^16
: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15./migraphx/kernels/vectorize.hpp::45253:: 13note: :called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));

                                            ^
main.cpp            f(xs...);:
26            ^:
53: note: ./migraphx/kernels/functional.hppcalled by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>':
257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160./migraphx/kernels/functional.hpp::16273:: 50note: :called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>' 
note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'        return f(i);

               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>, migraphx::integral_constant<unsigned int, 393216>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^                    invoke_loop(f, start, _c<0>);

                    ^
./migraphx/kernels/functional.hpp./migraphx/kernels/index.hpp::289226::209::  note: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>>'

        for_stride<false>(global, n, nglobal(), f);
        ^
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/pointwise.hpp:39./migraphx/kernels/functional.hpp::9118:: 12note: :called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>' 
note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    idx.global_stride(out.get_shape().elements(),
        ^
    return f(index_constant<Ns>{}...);
./migraphx/kernels/pointwise.hpp           ^:
48:36./migraphx/kernels/functional.hpp:: 138note: :called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'20
: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
./migraphx/kernels/functional.hpp:287            f(vectorize_tensor<N, Axis>(xs)...);:
16            ^:
 note: ./migraphx/kernels/functional.hppcalled by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>':
257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };               ^

                                                         ^
./migraphx/kernels/functional.hpp:257:./migraphx/kernels/functional.hpp58::273 :note: 50called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>':
 note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
./migraphx/kernels/functional.hpp                                                         ^:
289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
./migraphx/kernels/functional.hpp:            return f(arg_c<(is + size - 1) % size>()(xs...)...);273
:                   ^16
: ./migraphx/kernels/functional.hppnote: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'118
:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });20
:               ^ 
note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
./migraphx/kernels/functional.hpp:257:58    return detail::sequence_c_impl(f, detail::gens<N>{});:
                    ^note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };        return sequence_c<sizeof...(xs)>([&](auto... is) {

                                                         ^               ^

./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'./migraphx/kernels/functional.hpp
:273:50:     return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };note: 
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'                                                         ^

./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:./migraphx/kernels/args.hpp257::3958::12 :note:  called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'note: 
called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
    return f(make_tensor<Ns>::apply(xs)...);
           ^./migraphx/kernels/functional.hpp
:273:./migraphx/kernels/args.hpp50::45 :note: 37called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>':
 note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^    return f(make_tensor<Ns>::apply(xs)...);

           ^
./migraphx/kernels/functional.hpp./migraphx/kernels/args.hpp::27345::1637::  note: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'

        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });./migraphx/kernels/functional.hpp
:               ^273
:16:./migraphx/kernels/functional.hpp :note: 257called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>':
58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };In file included from 
main.cpp    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };                                                         ^:

3                                                         ^:

./migraphx/kernels/pointwise.hppIn file included from ./migraphx/kernels/pointwise.hpp:./migraphx/kernels/pointwise.hpp:48:48:29:9:
9:./migraphx/kernels/math.hpp: : note: 191note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>':called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
56
: error: reference to __host__ function '__fmax' in __device__ function
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });:
26        ^MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax):

38                                                       ^main.cpp:
: 26note: main.cpp:called by 'add_relu_kernel':38
15:: 45note: :called by 'add_relu_kernel'    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2); 

note:                                      ^called by 'inner_pointwise<_Float16, _Float16>'

/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));

                                     ^                                            ^__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));


^
main.cpp/usr/include/x86_64-linux-gnu/bits/mathcalls.h:/usr/include/math.h:26:329:278:53:1:3: : note:  note: called by 'operator()<_Float16 &, _Float16 &>'note: '__fmax' declared here
expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);:

22^                                                    ^:

 note: expanded from macro '__MATHDECLX'./migraphx/kernels/pointwise.hpp/usr/include/math.h
::40278::  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)663
::                     ^  
note: note: /usr/include/x86_64-linux-gnu/sys/cdefs.hcalled by 'operator()<unsigned int>'expanded from macro '__MATHCALLX':

105:23: note: expanded from macro '__CONCAT'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)#define __CONCAT(x,y)   x ## y                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });


  ^                        ^                                                                 ^


<scratch space>/usr/include/math.h::117./migraphx/kernels/index.hpp281:::116022::: 16 note: :note: expanded from here expanded from macro '__MATHDECLX'
note: 
__fmaxcalled by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'

^
        return f(i);
               ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^./migraphx/kernels/index.hpp
:202:/usr/include/x86_64-linux-gnu/sys/cdefs.h21::105 :note: 23called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 887808>, migraphx::integral_constant<unsigned int, 887808>>':
 note: expanded from macro '__CONCAT'
                    invoke_loop(f, start, _c<0>);
#define __CONCAT(x,y)   x ## y                    ^

                        ^
./migraphx/kernels/index.hpp<scratch space>::226117::91::  note: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 887808>>'expanded from here

__fmax
^
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'3
 errors generated when compiling for gfx908.
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>, migraphx::integral_constant<unsigned int, 3763200>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
2 error./migraphx/kernels/functional.hpps: generated273 when compiling for :gfx90850.
: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1183744>, migraphx::integral_constant<unsigned int, 1183744>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1183744>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
3 errors generated when compiling for gfx908.
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 196608>, migraphx::integral_constant<unsigned int, 196608>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 196608>>'
In file included from main.cpp:        for_stride<false>(global, n, nglobal(), f);3
:
        ^In file included from 
./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:563:./migraphx/kernels/pointwise.hpp error :serror: 39 generatedreference to __host__ function '__fmax' in __device__ function: when compiling for 
9gfx908:.
 note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
    idx.global_stride(out.get_shape().elements(),
        ^main.cpp
:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'./migraphx/kernels/pointwise.hpp
:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });:
26                                   ^:
53: note: called by 'operator()<_Float16 &, _Float16 &>'
./migraphx/kernels/vectorize.hpp:257:13:     pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'                                                    ^

./migraphx/kernels/pointwise.hpp:40:            f(vectorize_tensor<N, Axis>(xs)...);66
:            ^ 
note: called by 'operator()<unsigned int>'./migraphx/kernels/functional.hpp
:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^./migraphx/kernels/index.hpp
:160:16: note: ./migraphx/kernels/functional.hppcalled by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>':
273:50:        return f(i); 
note:                ^called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'

./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1479680>, migraphx::integral_constant<unsigned int, 1479680>>'        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

                                                 ^
./migraphx/kernels/functional.hpp:289:                    invoke_loop(f, start, _c<0>);20
:                    ^ 
note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'./migraphx/kernels/index.hpp
:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1479680>>'            return f(arg_c<(is + size - 1) % size>()(xs...)...);

                   ^
./migraphx/kernels/functional.hpp:118:12        for_stride<false>(global, n, nglobal(), f);:
         ^note: 
called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/pointwise.hpp./migraphx/kernels/functional.hpp::39138::920::  note: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'

    idx.global_stride(out.get_shape().elements(),
    return detail::sequence_c_impl(f, detail::gens<N>{});        ^

                   ^
./migraphx/kernels/pointwise.hpp./migraphx/kernels/functional.hpp::48287::3616::  note: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>>'

        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });./migraphx/kernels/functional.hpp
:                                   ^257
:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
./migraphx/kernels/vectorize.hpp:253    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
13                                                         ^:
 note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
./migraphx/kernels/functional.hpp:            f(xs...);273
:            ^16
: note: ./migraphx/kernels/functional.hppcalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>>':
257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
                                                          ^note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
./migraphx/kernels/functional.hpp:273:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };50
:                                                         ^ 
note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:
20                                                 ^:
 note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
    return f(make_tensor<Ns>::apply(xs)...);
./migraphx/kernels/functional.hpp           ^:
118:./migraphx/kernels/args.hpp12::45 :note: 37called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>':
 note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return f(index_constant<Ns>{}...);
           ^
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };./migraphx/kernels/functional.hpp
:                                    ^138
:20./migraphx/kernels/functional.hpp:: 273note: :called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'16
: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:./migraphx/kernels/functional.hpp257::28758::16 :note:  called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'note: 
called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
        return sequence_c<sizeof...(xs)>([&](auto... is) {                                                         ^

               ^
./migraphx/kernels/pointwise.hpp:./migraphx/kernels/functional.hpp48::2579::58 :note:  called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'note: 
called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };main.cpp
:                                                         ^26
:38: note: called by 'add_relu_kernel'
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>>'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });1
:               ^ 
note: '__fmax' declared here./migraphx/kernels/functional.hpp
:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };3
:                                                         ^ 
note: expanded from macro '__MATHCALLX'
./migraphx/kernels/functional.hpp:273:50  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):
   ^note: 
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>>'/usr/include/math.h
:281:22: note: expanded from macro '__MATHDECLX'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
./migraphx/kernels/args.hpp                     ^:
39:/usr/include/x86_64-linux-gnu/sys/cdefs.h12::105 :note: 23called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>':
 note: expanded from macro '__CONCAT'
    return f(make_tensor<Ns>::apply(xs)...);#define __CONCAT(x,y)   x ## y

           ^                        ^

./migraphx/kernels/args.hpp<scratch space>::45117::371::  note: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'expanded from here

__fmax
^
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
In file included from /usr/include/math.hmain.cpp::2784::
3In file included from :./migraphx/kernels/ops.hpp :note: 27expanded from macro '__MATHCALLX':

./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.hMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax):
281                                                       ^:
22: note: expanded from macro '__MATHDECLX'main.cpp
:16:45: note: called by 'post_concat<_Float16, _Float16>'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));

                     ^                                            ^

/usr/include/x86_64-linux-gnu/sys/cdefs.hmain.cpp::10528::2374::  note: note: expanded from macro '__CONCAT'called by 'operator()<_Float16 &, _Float16 &>'

#define __CONCAT(x,y)   x ## y
                        ^
        concat<1>(concat_x0,concat_x1,concat_x2,concat_x3)(MIGRAPHX_LIFT(post_concat), y, xs...);
<scratch space>                                                                         ^:
117:1:./migraphx/kernels/concat.hpp :note: 70expanded from here:
56: __fmaxnote: 
called by 'operator()<unsigned int>'^

                                  [&](auto i) { y[i] = f(input[i], xs[i]...); });
                                                       ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/concat.hpp:70:35), unsigned int, unsigned int>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:182:13: note: called by 'for_stride_loop<(lambda at ./migraphx/kernels/concat.hpp:70:35), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1420492>>'
            invoke_loop(f, i, k);
            ^
./migraphx/kernels/index.hpp:214:17: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/concat.hpp:70:35), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1420492>>'
                for_stride_loop(start, n, stride, f);
                ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/concat.hpp:70:35), migraphx::integral_constant<unsigned int, 1775616>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/concat.hpp:69:21: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
                idx.global_stride(input.get_shape().elements(),
                    ^
./migraphx/kernels/concat.hpp:52:26: note: called by 'operator()<(lambda at ./migraphx/kernels/concat.hpp:68:54)>'
    return [=](auto f) { f(concat_slice<Axis>(xs, input, start)...); };
                         ^
./migraphx/kernels/concat.hpp:68:13: note: called by 'operator()<migraphx::integral_constant<unsigned int, 576>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>>'
            concat_slices<Axis>(input, start, ts...)([&](auto y, auto... xs) {
            ^
./migraphx/kernels/functional.hpp:181:25: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, migraphx::integral_constant<unsigned int, 576>, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
    return fold_impl(f, f(static_cast<T&&>(x), static_cast<U&&>(y)), static_cast<Ts&&>(xs)...);
                        ^
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, migraphx::integral_constant<unsigned int, 384>, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
    return fold_impl(f, f(static_cast<T&&>(x), static_cast<U&&>(y)), static_cast<Ts&&>(xs)...);
           ^
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, migraphx::integral_constant<unsigned int, 192>, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, const migraphx::integral_constant<int, 0> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
./migraphx/kernels/functional.hpp:187:39: note: called by 'operator()<const migraphx::integral_constant<int, 0> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
    return [=](auto&&... xs) { return fold_impl(f, static_cast<decltype(xs)&&>(xs)...); };
                                      ^
./migraphx/kernels/concat.hpp:67:9: note: called by 'operator()<(lambda at main.cpp:28:60), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
        fold([&](auto start, auto input) {
        ^
main.cpp:28:9: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
        concat<1>(concat_x0,concat_x1,concat_x2,concat_x3)(MIGRAPHX_LIFT(post_concat), y, xs...);
        ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at main.cpp:27:137), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:27:137)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>, migraphx::integral_constant<unsigned int, 5>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U, 5U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<6U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at main.cpp:27:137), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:27:137)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, 5U, void, void, void, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at main.cpp:27:137), void *, void *, void *, void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:27:137)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
main.cpp:27:136: note: called by 'concat_add_relu_kernel'
    transform_args(make_tensors(), rotate_last(), vectorize<1, 3>())(private_p0,private_p1,private_p2,private_p3,private_p4,private_p5)([](auto y, auto concat_x0,auto concat_x1,auto concat_x2,auto concat_x3, auto... xs) {
                                                                                                                                       ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
