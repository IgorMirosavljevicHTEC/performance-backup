In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
terminate called after throwing an instance of 'migraphx::version_1::exception'
  what():  /src/AMDMIGraphX/src/process.cpp:97: check_exec: Command cd /tmp/migraphx-compile-12d0-7f887a7fc700-648930d98b6ba1-6U8pxjMTlLuDXsEo; /opt/rocm/llvm/bin/clang++ -Wno-float-equal -DMIGRAPHX_NGLOBAL=200704 -DMIGRAPHX_NLOCAL=1024 -Weverything -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-conversion -Wno-double-promotion -Wno-exit-time-destructors -Wno-extra-semi -Wno-extra-semi-stmt -Wno-float-conversion -Wno-gnu-anonymous-struct -Wno-gnu-zero-variadic-macro-arguments -Wno-missing-prototypes -Wno-nested-anon-types -Wno-padded -Wno-shorten-64-to-32 -Wno-sign-conversion -Wno-sign-compare -Wno-unused-command-line-argument -Wno-weak-vtables -Wno-c99-extensions -ftemplate-backtrace-limit=0 -Werror --std=c++17 -fno-gpu-rdc -c --offload-arch=gfx908:sramecc+:xnack- --cuda-device-only -O3  -Wno-unused-command-line-argument -Wno-cuda-compat -mllvm -amdgpu-early-inline-all=true -mllvm -amdgpu-function-calls=false -x hip -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm-5.4.2/llvm/lib/clang/15.0.0/include/.. -D__HIP_PLATFORM_HCC__=1 -D__HIP_PLATFORM_AMD__=1 -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm/include --hip-link --hip-link -I. main.cpp -o main.o exited with status 1
timeout: the monitored command dumped core
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cppIn file included from :main.cpp3::
3In file included from :
./migraphx/kernels/reduce.hppIn file included from :./migraphx/kernels/pointwise.hpp30::
29In file included from :
./migraphx/kernels/ops.hpp./migraphx/kernels/math.hpp::27191:
:./migraphx/kernels/math.hpp56::191 :error: 56no member named '__hmax' in the global namespace; did you mean '__fmax'?:
 error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

                                                     ~~^~~~~~                                                     ~~^~~~~~

                                                       __fmax                                                       __fmax

./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::6767::6464::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h/usr/include/x86_64-linux-gnu/bits/mathcalls.h::329329::11::  note: note: '__fmax' declared here'__fmax' declared here

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^^

/usr/include/math.h/usr/include/math.h::278278::33::  note: note: expanded from macro '__MATHCALLX'expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

/usr/include/math.h  ^:
281/usr/include/math.h::22281:: 22note: :expanded from macro '__MATHDECLX' 
note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
/usr/include/x86_64-linux-gnu/sys/cdefs.h                     ^:
105:23/usr/include/x86_64-linux-gnu/sys/cdefs.h:: 105note: :expanded from macro '__CONCAT'23
: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1:<scratch space> :note: 117expanded from here:
1__fmax:
 ^note: 
expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
In file included from main.cpp:In file included from 3main.cpp:
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:In file included from 
3./migraphx/kernels/pointwise.hpp                                                               ^~~~~:
:
In file included from 29./migraphx/kernels/reduce.hpp:
:/usr/include/x86_64-linux-gnu/bits/mathcalls.h./migraphx/kernels/math.hpp30:::
332192In file included from ::./migraphx/kernels/ops.hpp156:::27  :
note: error: ./migraphx/kernels/math.hpp'__fmin' declared hereno member named '__hmin' in the global namespace; did you mean '__fmin'?:

192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~/usr/include/math.h
:                                                       __fmin278
:MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)3./migraphx/kernels/math.hpp
::                                                     ~~^~~~~~ 67
note: :                                                       __fminexpanded from macro '__MATHCALLX'64

: ./migraphx/kernels/math.hppnote: :expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'67
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):
64  ^:
 /usr/include/math.hnote:     inline auto __device__ name(type x, type y)->type { return fname(x, y); }:expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
281
                                                               ^~~~~:
22: note: /usr/include/x86_64-linux-gnu/bits/mathcalls.hexpanded from macro '__MATHDECLX':
332:1    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
                                                                ^~~~~note: 
'__fmin' declared here  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:/usr/include/x86_64-linux-gnu/sys/cdefs.h332::105__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));1:
:23^ :
note:  '__fmin' declared here/usr/include/math.hnote: 
:expanded from macro '__CONCAT'278
:3: note: expanded from macro '__MATHCALLX'#define __CONCAT(x,y)   x ## y__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));


                        ^^

<scratch space>  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):
118/usr/include/math.h  ^::
1278/usr/include/math.h::: note: 3281expanded from here::
 22__fminnote: :
expanded from macro '__MATHCALLX' ^
note: 
expanded from macro '__MATHDECLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)281
:                     ^22
: /usr/include/x86_64-linux-gnu/sys/cdefs.hnote: :expanded from macro '__MATHDECLX'105
:23: note: expanded from macro '__CONCAT'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)#define __CONCAT(x,y)   x ## y

                     ^                        ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h<scratch space>::105118::231::  note: note: expanded from macro '__CONCAT'expanded from here

__fmin
#define __CONCAT(x,y)   x ## y^

                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67In file included from :main.cpp64::4 :
note: In file included from expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'./migraphx/kernels/ops.hpp
:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)329
:                                                     ~~^~~~~~1
:                                                       __fmin 
note: '__fmax' declared here
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
                                                                ^~~~~note: 
expanded from macro '__MATHCALLX'
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1:   __MATHDECLX (_Mdouble_,function,suffix, args, attrib)note: 
'__fmin' declared here  ^

/usr/include/math.h:281:22: note: __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));expanded from macro '__MATHDECLX'

^
/usr/include/math.h:278:3:   __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)note: 
expanded from macro '__MATHCALLX'                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib) 
note:   ^expanded from macro '__CONCAT'

/usr/include/math.h:281:22:#define __CONCAT(x,y)   x ## y 
note:                         ^expanded from macro '__MATHDECLX'

<scratch space>:117:1: note:   __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)expanded from here

                     ^
__fmax
/usr/include/x86_64-linux-gnu/sys/cdefs.h^:
105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'In file included from 
main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
                                                                ^~~~~error: 
no member named '__hmax' in the global namespace; did you mean '__fmax'?
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));67
:^64
: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'/usr/include/math.h
:278:3: note: expanded from macro '__MATHCALLX'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h/usr/include/x86_64-linux-gnu/bits/mathcalls.h::281329::221::  note: note: expanded from macro '__MATHDECLX''__fmax' declared here

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

^                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h/usr/include/math.h::105278::233::  note: note: expanded from macro '__CONCAT'expanded from macro '__MATHCALLX'

#define __CONCAT(x,y)   x ## y
                        ^
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
<scratch space>:/usr/include/math.h117::2811::22 :note:  expanded from herenote: 
expanded from macro '__MATHDECLX'
__fmax
^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:In file included from 332main.cpp::14::
 In file included from note: ./migraphx/kernels/ops.hpp'__fmin' declared here:
27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^./migraphx/kernels/math.hpp
:67/usr/include/math.h::64281:: 22note: :expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR' 
note: expanded from macro '__MATHDECLX'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:/usr/include/x86_64-linux-gnu/bits/mathcalls.h23::329 :note: 1expanded from macro '__CONCAT':
 note: '__fmax' declared here
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));:
 ^note: 
expanded from here
/usr/include/math.h__fmin:
278^:
3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
In file included from main.cpp:MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)3
:
                                                     ~~^~~~~~In file included from 
./migraphx/kernels/pointwise.hpp                                                       __fmin:
29:
./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::19267::5664::  error: note: no member named '__hmin' in the global namespace; did you mean '__fmin'?expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)

                                                               ^~~~~                                                     ~~^~~~~~

                                                       __fmin
/usr/include/x86_64-linux-gnu/bits/mathcalls.h./migraphx/kernels/math.hpp::33267::164::  note: note: '__fmin' declared hereexpanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

In file included from main.cpp:4__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));:
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
In file included from 
^./migraphx/kernels/ops.hpp                                                               ^~~~~
:
/usr/include/math.h27::
278/usr/include/x86_64-linux-gnu/bits/mathcalls.h./migraphx/kernels/math.hpp:::3332191::: 156note: ::expanded from macro '__MATHCALLX'  
note: error: '__fmin' declared hereno member named '__hmax' in the global namespace; did you mean '__fmax'?

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));:
 ^note: 
expanded from macro '__MATHDECLX'
/usr/include/math.hMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax):
278                                                     ~~^~~~~~:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
3
                                                       __fmax:                     ^
 
note: ./migraphx/kernels/math.hppexpanded from macro '__MATHCALLX'/usr/include/x86_64-linux-gnu/sys/cdefs.h:
:67105::6423  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)::
    ^note: note: 
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'expanded from macro '__CONCAT'/usr/include/math.h

:281:22: #define __CONCAT(x,y)   x ## ynote: 
expanded from macro '__MATHDECLX'                        ^

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }<scratch space>
:                                                               ^~~~~118
:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)1
:                     ^ 
note: expanded from here/usr/include/x86_64-linux-gnu/sys/cdefs.h
:/usr/include/x86_64-linux-gnu/bits/mathcalls.h105__fmin::
32923^::
1 :note:  expanded from macro '__CONCAT'note: 
'__fmax' declared here
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));:
 ^note: 
expanded from here
/usr/include/math.h__fmin:
278^:
3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
In file included from #define __CONCAT(x,y)   x ## ymain.cpp
:                        ^4
:
In file included from ./migraphx/kernels/ops.hpp:27<scratch space>:
:./migraphx/kernels/math.hpp117::1921::56 :note:  expanded from hereerror: 
no member named '__hmin' in the global namespace; did you mean '__fmin'?
__fmax
^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
In file included from         return f(i);main.cpp
:               ^3
:
In file included from ./migraphx/kernels/pointwise.hpp:./migraphx/kernels/index.hpp29::
202./migraphx/kernels/math.hpp::21191:: 56note: :called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>' 
error: reference to __host__ function '__fmax' in __device__ function
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hppMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax):
226                                                       ^:
9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
main.cpp:15:45:         for_stride<false>(global, n, nglobal(), f);note: 
called by 'inner_pointwise<_Float16, _Float16>'        ^

auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^./migraphx/kernels/pointwise.hpp
:39:main.cpp9::26 :note: 53called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>':
 note: called by 'operator()<_Float16 &, _Float16 &>'
    idx.global_stride(out.get_shape().elements(),
        ^
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);./migraphx/kernels/pointwise.hpp
:                                                    ^48
:36./migraphx/kernels/pointwise.hpp:: 40note: :called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'66
: note: called by 'operator()<unsigned int>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:./migraphx/kernels/vectorize.hpp16::253 :note: 13called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>':
 note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(i);
               ^
            f(xs...);
            ^
./migraphx/kernels/index.hpp:202./migraphx/kernels/functional.hpp::21257:: 58note: :called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
226                                                         ^:
9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
./migraphx/kernels/functional.hpp:273:50:         for_stride<false>(global, n, nglobal(), f);note: 
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'        ^

./migraphx/kernels/pointwise.hpp        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:
39                                                 ^:
9: ./migraphx/kernels/functional.hppnote: :called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'289
:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
    idx.global_stride(out.get_shape().elements(),
        ^
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^./migraphx/kernels/pointwise.hpp
:48:36./migraphx/kernels/functional.hpp:: 118note: :called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'12
: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });    return f(index_constant<Ns>{}...);

                                   ^           ^

./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
./migraphx/kernels/vectorize.hpp:253:13: note:     return detail::sequence_c_impl(f, detail::gens<N>{});called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'

                   ^
            f(xs...);
            ^
./migraphx/kernels/functional.hpp./migraphx/kernels/functional.hpp::257287::5816::  note: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'

        return sequence_c<sizeof...(xs)>([&](auto... is) {
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };               ^

                                                         ^
./migraphx/kernels/functional.hpp:257:58: note: ./migraphx/kernels/functional.hppcalled by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>':
273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^./migraphx/kernels/functional.hpp
:273:16./migraphx/kernels/functional.hpp:: 289note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'20
: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^            return f(arg_c<(is + size - 1) % size>()(xs...)...);

                   ^./migraphx/kernels/functional.hpp
:257:./migraphx/kernels/functional.hpp58::118 :note: 12called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':
 note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };           ^

                                                         ^
./migraphx/kernels/functional.hpp:138:20: note: ./migraphx/kernels/functional.hppcalled by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>':
273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });./migraphx/kernels/functional.hpp
:                                                 ^287
:16: note: ./migraphx/kernels/args.hppcalled by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>':
39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp    return f(make_tensor<Ns>::apply(xs)...);:
257           ^:
58: ./migraphx/kernels/args.hppnote: :called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'45
:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
./migraphx/kernels/functional.hpp                                    ^:
273:16./migraphx/kernels/functional.hpp:: 273note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'16
: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });257
:               ^58
: ./migraphx/kernels/functional.hppnote: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'257
:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:./migraphx/kernels/pointwise.hpp273::4850::9 :note:  called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'note: 
called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

        ^                                                 ^

main.cpp:26:38./migraphx/kernels/args.hpp:: 39note: :called by 'add_relu_kernel'12
: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
./migraphx/kernels/args.hpp                                     ^:
45:37:/usr/include/x86_64-linux-gnu/bits/mathcalls.h :note: 329called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>':
1: note: '__fmax' declared here
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));                                    ^

^
./migraphx/kernels/functional.hpp:273:/usr/include/math.h16::278 :note: 3called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>':
 note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

  ^               ^

/usr/include/math.h:./migraphx/kernels/functional.hpp281::25722::58 :note:  expanded from macro '__MATHDECLX'note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                     ^                                                         ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h:./migraphx/kernels/pointwise.hpp105::4823::9 :note:  expanded from macro '__CONCAT'note: 
called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });:
1        ^:
 note: main.cppexpanded from here:
26:__fmax38
:^ 
note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(8))), _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(8))), _Float16 &>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>, migraphx::integral_constant<unsigned int, 1605632>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^In file included from 
main.cpp:3:
In file included from ./migraphx/kernels/functional.hpp./migraphx/kernels/pointwise.hpp::11829::
12./migraphx/kernels/math.hpp:: 191note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>':
56: error: reference to __host__ function '__fmax' in __device__ function
    return f(index_constant<Ns>{}...);
           ^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)./migraphx/kernels/functional.hpp
:                                                       ^138
:20:./migraphx/kernels/math.hpp :note: 234called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>':
26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
./migraphx/kernels/functional.hpp:287                result[i] = f(vec_at(xs, i)...);:
16                            ^:
 note: ./migraphx/kernels/math.hppcalled by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>':
234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
        return sequence_c<sizeof...(xs)>([&](auto... is) {^

               ^./migraphx/kernels/math.hpp
:54:./migraphx/kernels/functional.hpp16::257 :note: 58expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC':
 note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45:     return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };note: 
called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(8))), _Float16>'                                                         ^

auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp./migraphx/kernels/functional.hpp::26273::5316::  note: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(8))), _Float16 &>'called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'

    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); }); 
note:                ^called by 'operator()<unsigned int>'

./migraphx/kernels/functional.hpp:257:58                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });:
                                                                  ^note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
./migraphx/kernels/index.hpp                                                         ^:
202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>, migraphx::integral_constant<unsigned int, 1605632>>'
./migraphx/kernels/functional.hpp:                    invoke_loop(f, start, _c<0>);273
:                    ^50
:./migraphx/kernels/index.hpp :note: 226called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>':
9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/pointwise.hpp:39:9:./migraphx/kernels/args.hpp :note: 39called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>':
12: note:     idx.global_stride(out.get_shape().elements(),called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'

        ^
./migraphx/kernels/pointwise.hpp:    return f(make_tensor<Ns>::apply(xs)...);48
:           ^36
: note: ./migraphx/kernels/args.hppcalled by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>':
45:37: note:         t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'

                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note:         return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'

                                    ^
            f(vectorize_tensor<N, Axis>(xs)...);./migraphx/kernels/functional.hpp
:            ^273
:16./migraphx/kernels/functional.hpp:: 257note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'58
: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^./migraphx/kernels/functional.hpp
:273./migraphx/kernels/functional.hpp::50257:: 58note: :called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20:     return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };note: 
called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'                                                         ^

./migraphx/kernels/pointwise.hpp            return f(arg_c<(is + size - 1) % size>()(xs...)...);:
48                   ^:
9:./migraphx/kernels/functional.hpp :note: 118called by 'operator()<(lambda at main.cpp:26:39), void, void, void>':
12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });./migraphx/kernels/functional.hpp
:        ^138
:20main.cpp:: 26note: :called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'38
: note: called by 'add_relu_kernel'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h./migraphx/kernels/functional.hpp::329257::158In file included from ::main.cpp  :note: note: 3'__fmax' declared herecalled by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>':


In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));191                                                         ^
:
^56
:./migraphx/kernels/functional.hpp :/usr/include/math.herror: 273:reference to __host__ function '__fmax' in __device__ function:278
16::3 :note:  called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'note: 
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)expanded from macro '__MATHCALLX'

                                                       ^        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

               ^
./migraphx/kernels/functional.hpp:257:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)58./migraphx/kernels/math.hpp
::  ^ 234
note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'/usr/include/math.h26
::281 :note:     return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };22called by 'operator()<_Float16, _Float16>'
:
                                                         ^ 
note: expanded from macro '__MATHDECLX'MIGRAPHX_DEVICE_MATH_VEC(max)
./migraphx/kernels/functional.hpp
:                         ^273
:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^./migraphx/kernels/vec.hpp
:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });119/usr/include/x86_64-linux-gnu/sys/cdefs.h
::                                                 ^29105
:: 23./migraphx/kernels/args.hppnote: ::called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>' 39
note: :expanded from macro '__CONCAT'12
: note:                 result[i] = f(vec_at(xs, i)...);called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'

#define __CONCAT(x,y)   x ## y                            ^

    return f(make_tensor<Ns>::apply(xs)...);                        ^

./migraphx/kernels/math.hpp           ^<scratch space>:
:234./migraphx/kernels/args.hpp117:::1451::: 37 note: :note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>' expanded from here
note: 
called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
__fmaxMIGRAPHX_DEVICE_MATH_VEC(max)

^^
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };

                                    ^
./migraphx/kernels/math.hpp./migraphx/kernels/functional.hpp::54273::1616::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'

        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \257
:               ^58
: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
main.cpp:15:45:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; }; 
note:                                                          ^called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(8))), _Float16>'

./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });

        ^
main.cppmain.cpp::2626::5338::  note: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(8))), _Float16 &>'called by 'add_relu_kernel'

    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);:
1                                                    ^:
 note: '__fmax' declared here
./migraphx/kernels/pointwise.hpp:40:66:__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__)); 
note: ^called by 'operator()<unsigned int>'

/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });

  ^                                                                 ^

/usr/include/math.h:281:22: note: ./migraphx/kernels/index.hppexpanded from macro '__MATHDECLX':
160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h        return f(i);:
105               ^:
23: note: expanded from macro '__CONCAT'
./migraphx/kernels/index.hpp:202#define __CONCAT(x,y)   x ## y:
21                        ^:
 <scratch space>note: :called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>, migraphx::integral_constant<unsigned int, 1605632>>'117
:1: note: expanded from here
__fmax
^
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
3 errors generated when compiling for gfx908.
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
3/usr/include/x86_64-linux-gnu/sys/cdefs.h error:s105 generated: when compiling for 23gfx908:.
 note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>3: error117s: generated1 when compiling for :gfx908 .
note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:21:45: note: called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>'
auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));
                                            ^
main.cpp:32:53: note: called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 702464>, migraphx::integral_constant<unsigned int, 702464>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 702464>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 21952, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 21952, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp::4829::
36./migraphx/kernels/math.hpp:: 191note: :called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 21952, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 21952, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'56
: error: reference to __host__ function '__fmax' in __device__ function
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26./migraphx/kernels/vectorize.hpp:: 257note: :called by 'operator()<_Float16, _Float16>'13
: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/vec.hpp:119./migraphx/kernels/functional.hpp::29257:: 58note: :called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };./migraphx/kernels/math.hpp
:                                                         ^234
:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)./migraphx/kernels/functional.hpp
:^273
:50./migraphx/kernels/math.hpp:: 54note: :called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'16
: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
./migraphx/kernels/functional.hpp:289main.cpp::2021:: 45note: :called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>' 
note: called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));
                                            ^
./migraphx/kernels/functional.hpp:118main.cpp::1232:: 53note: :called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>' 
note: called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                                    ^
    return detail::sequence_c_impl(f, detail::gens<N>{});./migraphx/kernels/pointwise.hpp
:                   ^40
:66: note: called by 'operator()<unsigned int>'
./migraphx/kernels/functional.hpp:287:16: note:                       [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>>'

                                                                 ^
./migraphx/kernels/index.hpp:160        return sequence_c<sizeof...(xs)>([&](auto... is) {:
16               ^:
 note: ./migraphx/kernels/functional.hppcalled by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>':
257:58:        return f(i); 
note:                ^called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'

./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1103872>, migraphx::integral_constant<unsigned int, 1103872>>'    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                         ^
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/functional.hpp:273./migraphx/kernels/index.hpp::16226:: 9note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>>' 
note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1103872>>'
        for_stride<false>(global, n, nglobal(), f);
        ^        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 34496, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 34496, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                         ^
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>>'./migraphx/kernels/pointwise.hpp
:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 34496, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 34496, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });39
:                                   ^12
: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45./migraphx/kernels/vectorize.hpp::37257:: 13note: :called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };

                                    ^
./migraphx/kernels/functional.hpp:257:./migraphx/kernels/functional.hpp58::273 :note: 16called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':
 note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58:./migraphx/kernels/functional.hpp :note: 273called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':
50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:
48                                                 ^:
9: note: called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'./migraphx/kernels/functional.hpp
:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:32            return f(arg_c<(is + size - 1) % size>()(xs...)...);:
38                   ^:
 note: called by 'mul_mul_add_relu_kernel'
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>'
    return f(index_constant<Ns>{}...);
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);           ^

                                     ^
./migraphx/kernels/functional.hpp:138:/usr/include/x86_64-linux-gnu/bits/mathcalls.h20::329 :note: 1called by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>':
 note: '__fmax' declared here
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3:./migraphx/kernels/functional.hpp :note: 287expanded from macro '__MATHCALLX':
16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>>'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:        return sequence_c<sizeof...(xs)>([&](auto... is) {281
:               ^22
: ./migraphx/kernels/functional.hppnote: :expanded from macro '__MATHDECLX'257
:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
105                                                         ^:
23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
./migraphx/kernels/functional.hpp                        ^:
273<scratch space>::16117:: 1note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>>' 
note: expanded from here
__fmax
^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:32:38: note: called by 'mul_mul_add_relu_kernel'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:21:45: note: called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>'
auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));
                                            ^
main.cpp:32:53: note: called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 903168>, migraphx::integral_constant<unsigned int, 903168>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 903168>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 28224, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 28224, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 28224, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 28224, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:32:38: note: called by 'mul_mul_add_relu_kernel'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
In file included from main.cpp:3        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:

In file included from                                                  ^./migraphx/kernels/pointwise.hpp
:29:
./migraphx/kernels/math.hpp:191:56:./migraphx/kernels/args.hpp :error: 39reference to __host__ function '__fmax' in __device__ function:
12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
    return f(make_tensor<Ns>::apply(xs)...);./migraphx/kernels/math.hpp
:           ^234
:26: ./migraphx/kernels/args.hppnote: :called by 'operator()<_Float16, _Float16>'45
:37: MIGRAPHX_DEVICE_MATH_VEC(max)note: 
called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'                         ^

./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                result[i] = f(vec_at(xs, i)...);                                    ^

                            ^
./migraphx/kernels/math.hpp./migraphx/kernels/functional.hpp::234273::116::  note: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'

MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
./migraphx/kernels/functional.hpp               ^:
257main.cpp::5821:: 45note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>' 
note: called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>'
auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));
                                            ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };main.cpp
:                                                         ^32
:53: note: called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>'./migraphx/kernels/pointwise.hpp
:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });

        ^
main.cpp:26                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });:
38                                                                 ^:
 note: called by 'add_relu_kernel'./migraphx/kernels/index.hpp
:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);:
                                      ^note: 
called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 501760>, migraphx::integral_constant<unsigned int, 501760>>'
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:                    invoke_loop(f, start, _c<0>);329
:                    ^1
:./migraphx/kernels/index.hpp :note: 226'__fmax' declared here:
9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 501760>>'
        for_stride<false>(global, n, nglobal(), f);
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));        ^

^
/usr/include/math.h:278:3./migraphx/kernels/pointwise.hpp:: 39note: :expanded from macro '__MATHCALLX'9
: note: called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 15680, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 15680, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)        ^

  ^
/usr/include/math.h:281./migraphx/kernels/pointwise.hpp::2248:: 36note: :expanded from macro '__MATHDECLX' 
note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 15680, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 15680, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23./migraphx/kernels/vectorize.hpp:: 257note: :expanded from macro '__CONCAT'13
: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'#define __CONCAT(x,y)   x ## y

                        ^
            f(vectorize_tensor<N, Axis>(xs)...);<scratch space>
:            ^117
:1./migraphx/kernels/functional.hpp:: 257note: :expanded from here58
: note: __fmaxcalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'

^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:32:38: note: called by 'mul_mul_add_relu_kernel'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:21:45: note: called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>'
auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));
                                            ^
main.cpp:32:53: note: called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: In file included from note: main.cppcalled by 'operator()<unsigned int>':
3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });:
56                                                                 ^:
 error: reference to __host__ function '__fmax' in __device__ function
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
        return f(i);                                                       ^

               ^
./migraphx/kernels/index.hpp:202./migraphx/kernels/math.hpp::21234:: 26note: :called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1304576>, migraphx::integral_constant<unsigned int, 1304576>>' 
note: called by 'operator()<_Float16, _Float16>'
                    invoke_loop(f, start, _c<0>);
MIGRAPHX_DEVICE_MATH_VEC(max)                    ^

                         ^
./migraphx/kernels/index.hpp:226:9: note: ./migraphx/kernels/vec.hppcalled by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1304576>>':
119:29: note:         for_stride<false>(global, n, nglobal(), f);called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'

        ^
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234./migraphx/kernels/pointwise.hpp::139:: 9note: :called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>' 
note: called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 40768, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 40768, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'MIGRAPHX_DEVICE_MATH_VEC(max)

^
./migraphx/kernels/math.hpp:    idx.global_stride(out.get_shape().elements(),54
:        ^16
: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
./migraphx/kernels/pointwise.hpp:48:36        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \:
                ^note: 
called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 40768, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 40768, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
main.cpp:21:45: note: called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>'        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });

                                   ^
auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));
                                            ^
main.cpp:32:53:./migraphx/kernels/vectorize.hpp :note: 257called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>':
13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);

                                                    ^./migraphx/kernels/functional.hpp
:./migraphx/kernels/pointwise.hpp257::4058::66 :note:  called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'note: 
called by 'operator()<unsigned int>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });

                                                                 ^
./migraphx/kernels/index.hpp:./migraphx/kernels/functional.hpp160::27316::50 :note:  called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'note: 
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'        return f(i);

               ^
./migraphx/kernels/index.hpp:202:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });21
:                                                 ^ 
note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1505280>, migraphx::integral_constant<unsigned int, 1505280>>'
./migraphx/kernels/functional.hpp:289:20:                    invoke_loop(f, start, _c<0>); 
note:                     ^called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>'

./migraphx/kernels/index.hpp:226:9: note:             return f(arg_c<(is + size - 1) % size>()(xs...)...);called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1505280>>'

                   ^
./migraphx/kernels/functional.hpp:        for_stride<false>(global, n, nglobal(), f);118
:        ^12
: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/pointwise.hpp:./migraphx/kernels/functional.hpp39::1389::20 :note:  called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 47040, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 47040, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'note: 
called by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    idx.global_stride(out.get_shape().elements(),
        ^    return detail::sequence_c_impl(f, detail::gens<N>{});

                   ^
./migraphx/kernels/pointwise.hpp:48./migraphx/kernels/functional.hpp::36287:: 16note: :called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 47040, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 47040, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        return sequence_c<sizeof...(xs)>([&](auto... is) {                                   ^

               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
./migraphx/kernels/vectorize.hpp:257:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };13
:                                                         ^ 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
./migraphx/kernels/functional.hpp            f(vectorize_tensor<N, Axis>(xs)...);:
273            ^:
16:./migraphx/kernels/functional.hpp :note: 257called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>>':
58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };./migraphx/kernels/functional.hpp
:                                                         ^257
:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                         ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
./migraphx/kernels/functional.hpp                                                 ^:
273:50./migraphx/kernels/functional.hpp:: 289note: :called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>>'20
: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/args.hpp:39./migraphx/kernels/functional.hpp::12118:: 12note: :called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>' 
note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^    return f(index_constant<Ns>{}...);

           ^./migraphx/kernels/args.hpp
:45./migraphx/kernels/functional.hpp::37138:: 20note: :called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>' 
note: called by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };                   ^

                                    ^
./migraphx/kernels/functional.hpp:273:16:./migraphx/kernels/functional.hpp :note: 287called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>':
16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp        return sequence_c<sizeof...(xs)>([&](auto... is) {:
257               ^:
58:./migraphx/kernels/functional.hpp :note: 257called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':
58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
48                                                         ^:
9: note: called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'
./migraphx/kernels/functional.hpp:273:16        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });:
         ^note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>>'main.cpp
:32:38: note: called by 'mul_mul_add_relu_kernel'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note:     pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'

                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
1                                                         ^:
 note: '__fmax' declared here
./migraphx/kernels/functional.hpp:273:__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));50
:^ 
note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>>'/usr/include/math.h
:278:3: note: expanded from macro '__MATHCALLX'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^./migraphx/kernels/args.hpp
:/usr/include/math.h39::28112::22 :note:  called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>'note: 
expanded from macro '__MATHDECLX'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
45                     ^:
37:/usr/include/x86_64-linux-gnu/sys/cdefs.h :note: 105called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>':
23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };                        ^

                                    ^<scratch space>
:117./migraphx/kernels/functional.hpp::1273:: 16note: :expanded from here 
note: __fmaxcalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>'

^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:32:38: note: called by 'mul_mul_add_relu_kernel'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
