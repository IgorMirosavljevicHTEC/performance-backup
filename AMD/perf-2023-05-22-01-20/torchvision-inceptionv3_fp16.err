In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>, migraphx::integral_constant<unsigned int, 393216>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
terminate called after throwing an instance of 'migraphx::version_1::exception'
  what():  /src/AMDMIGraphX/src/process.cpp:97: check_exec: Command cd /tmp/migraphx-compile-246a-7ff207fef700-643b54228bbd2f-hwmnDHWKlJNr4Uxx; /opt/rocm/llvm/bin/clang++ -Wno-float-equal -DMIGRAPHX_NGLOBAL=393216 -DMIGRAPHX_NLOCAL=1024 -Weverything -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-conversion -Wno-double-promotion -Wno-exit-time-destructors -Wno-extra-semi -Wno-extra-semi-stmt -Wno-float-conversion -Wno-gnu-anonymous-struct -Wno-gnu-zero-variadic-macro-arguments -Wno-missing-prototypes -Wno-nested-anon-types -Wno-padded -Wno-shorten-64-to-32 -Wno-sign-conversion -Wno-sign-compare -Wno-unused-command-line-argument -Wno-weak-vtables -Wno-c99-extensions -ftemplate-backtrace-limit=0 -Werror --std=c++17 -fno-gpu-rdc -c --offload-arch=gfx908:sramecc+:xnack- --cuda-device-only -O3  -Wno-unused-command-line-argument -Wno-cuda-compat -mllvm -amdgpu-early-inline-all=true -mllvm -amdgpu-function-calls=false -x hip -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm-5.4.2/llvm/lib/clang/15.0.0/include/.. -D__HIP_PLATFORM_HCC__=1 -D__HIP_PLATFORM_AMD__=1 -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm/include --hip-link --hip-link -I. main.cpp -o main.o exited with status 1
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1775616>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
timeout: the monitored command dumped core
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:In file included from 329main.cpp::13::
 In file included from note: ./migraphx/kernels/pointwise.hpp'__fmax' declared here:
29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)                                                       __fmax

  ^
./migraphx/kernels/math.hpp/usr/include/math.h::67281::6422::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'expanded from macro '__MATHDECLX'

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                                                               ^~~~~                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:/usr/include/x86_64-linux-gnu/bits/mathcalls.h23::329 :note: 1expanded from macro '__CONCAT':
 note: '__fmax' declared here
#define __CONCAT(x,y)   x ## y
                        ^
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));<scratch space>
:^117
:1: /usr/include/math.hnote: :expanded from here278
:3__fmax:
 ^note: 
expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from In file included from main.cppmain.cpp::33:
:
In file included from In file included from ./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp::2929:
:
./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::191191::5656::  error: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?no member named '__hmax' in the global namespace; did you mean '__fmax'?

MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)                                                     ~~^~~~~~

                                                     ~~^~~~~~                                                       __fmax

                                                       __fmax
./migraphx/kernels/math.hpp:./migraphx/kernels/math.hpp67::6764::64 :note:  expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'note: 
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }                                                               ^~~~~

                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h/usr/include/x86_64-linux-gnu/bits/mathcalls.h::329329::11::  note: note: '__fmax' declared here'__fmax' declared here

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^^

/usr/include/math.h/usr/include/math.h::278278::33::  note: note: expanded from macro '__MATHCALLX'expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  ^

  ^
/usr/include/math.h:/usr/include/math.h281::28122::22 :note:  expanded from macro '__MATHDECLX'note: 
expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^/usr/include/x86_64-linux-gnu/sys/cdefs.h
:105/usr/include/x86_64-linux-gnu/sys/cdefs.h::23105:: 23note: :expanded from macro '__CONCAT' 
note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^#define __CONCAT(x,y)   x ## y

                        ^
<scratch space>:117<scratch space>::1117:: 1note: :expanded from here 
note: expanded from here__fmax

^__fmax

^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:In file included from 23main.cpp:: 3note: :
expanded from macro '__CONCAT'In file included from 
./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:#define __CONCAT(x,y)   x ## y192
:                        ^56
: <scratch space>error: :no member named '__hmin' in the global namespace; did you mean '__fmin'?118
:1: note: expanded from here
__fmin
^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hppMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):
29                                                     ~~^~~~~~:

./migraphx/kernels/math.hpp                                                       __fmin:
192:56./migraphx/kernels/math.hpp:: 67error: :no member named '__hmin' in the global namespace; did you mean '__fmin'?64
: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }                                                       __fmin

                                                               ^~~~~
./migraphx/kernels/math.hpp:67:/usr/include/x86_64-linux-gnu/bits/mathcalls.h64::332 :note: 1expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':
 note: '__fmin' declared here
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));                                                               ^~~~~

^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h/usr/include/math.h::332278::13::  note: note: '__fmin' declared hereexpanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

  ^^

/usr/include/math.h:281/usr/include/math.h::22278:: 3note: :expanded from macro '__MATHDECLX' 
note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

  ^                     ^

/usr/include/math.h:/usr/include/x86_64-linux-gnu/sys/cdefs.h281::10522::23 :note:  expanded from macro '__MATHDECLX'note: 
expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
118                     ^:
1:/usr/include/x86_64-linux-gnu/sys/cdefs.h :note: 105expanded from here:
23:__fmin 
note: ^expanded from macro '__CONCAT'

#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hppIn file included from :main.cpp29::
3./migraphx/kernels/math.hpp:
:In file included from 191./migraphx/kernels/pointwise.hpp::5629::
 ./migraphx/kernels/math.hpperror: :no member named '__hmax' in the global namespace; did you mean '__fmax'?191
:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

                                                       __fmax                                                     ~~^~~~~~

                                                       __fmax
./migraphx/kernels/math.hpp:./migraphx/kernels/math.hpp67::6764::64 :note:  expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'note: 
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~                                                               ^~~~~

/usr/include/x86_64-linux-gnu/bits/mathcalls.h/usr/include/x86_64-linux-gnu/bits/mathcalls.h::329329::11::  note: note: '__fmax' declared here'__fmax' declared here

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^/usr/include/math.h
:278:3/usr/include/math.h:: 278note: :expanded from macro '__MATHCALLX'3
: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)281
:  ^22
: /usr/include/math.hnote: :expanded from macro '__MATHDECLX'281
:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
                      ^note: 
expanded from macro '__CONCAT'
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23#define __CONCAT(x,y)   x ## y:
                         ^note: 
expanded from macro '__CONCAT'
<scratch space>:117#define __CONCAT(x,y)   x ## y:
1                        ^:
 note: expanded from here
<scratch space>__fmax:
117^:
1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
In file included from main.cpp:3:
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)In file included from 
./migraphx/kernels/pointwise.hpp                                                     ~~^~~~~~:
29                                                       __fmin:

./migraphx/kernels/math.hpp:191./migraphx/kernels/math.hpp::5667:: 64error: :no member named '__hmax' in the global namespace; did you mean '__fmax'? 
note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)                                                               ^~~~~

                                                     ~~^~~~~~
                                                       __fmax
/usr/include/x86_64-linux-gnu/bits/mathcalls.h./migraphx/kernels/math.hpp::33267::164::  note: note: '__fmin' declared hereexpanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~/usr/include/math.h
:278:3: note: /usr/include/x86_64-linux-gnu/bits/mathcalls.hexpanded from macro '__MATHCALLX':
329:1: note: '__fmax' declared here
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));22
:^ 
note: expanded from macro '__MATHDECLX'
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)23
:  ^ 
In file included from note: /usr/include/math.hmain.cppexpanded from macro '__CONCAT'::
2813::
22#define __CONCAT(x,y)   x ## yIn file included from :
./migraphx/kernels/pointwise.hpp                         ^:note: 
29expanded from macro '__MATHDECLX'<scratch space>:

:./migraphx/kernels/math.hpp118::1921::  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)56 
:note:                      ^ expanded from here
error: 
/usr/include/x86_64-linux-gnu/sys/cdefs.hno member named '__hmin' in the global namespace; did you mean '__fmin'?:__fmin
105
:^23
: note: expanded from macro '__CONCAT'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
#define __CONCAT(x,y)   x ## y
./migraphx/kernels/math.hpp                        ^:
67:64: <scratch space>note: :expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'117
:1: note: expanded from here
__fmax
^    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
In file included from MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)main.cpp
:                                                     ~~^~~~~~3
:
                                                       __fminIn file included from 
./migraphx/kernels/pointwise.hpp:29./migraphx/kernels/math.hpp:
:./migraphx/kernels/math.hpp67::19264::56 :note:  expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'error: 
no member named '__hmin' in the global namespace; did you mean '__fmin'?
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:332./migraphx/kernels/math.hpp::167:: 64note: :'__fmin' declared here 
note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }/usr/include/math.h
:                                                               ^~~~~278
:3: note: expanded from macro '__MATHCALLX'/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:332:1: note: '__fmin' declared here
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));:
 ^note: 
expanded from macro '__MATHDECLX'
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)105
:  ^23
:/usr/include/math.h :note: 281expanded from macro '__CONCAT':
22: note: expanded from macro '__MATHDECLX'#define __CONCAT(x,y)   x ## y

                        ^
<scratch space>:118:1: note: expanded from here  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^__fmin

^/usr/include/x86_64-linux-gnu/sys/cdefs.h
:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
In file included from main.cpp:4:
In file included from __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));./migraphx/kernels/ops.hpp
:^27
:
./migraphx/kernels/math.hpp:191/usr/include/math.h::56278:: 3error: :no member named '__hmax' in the global namespace; did you mean '__fmax'? 
note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
In file included from   ^main.cppMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
:
/usr/include/math.h3                                                     ~~^~~~~~::

281In file included from                                                        __fmax:./migraphx/kernels/pointwise.hpp
22:./migraphx/kernels/math.hpp:29: :
67note: ./migraphx/kernels/math.hpp:expanded from macro '__MATHDECLX':64
191:: 56note: :expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR' 
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)error: 
no member named '__hmax' in the global namespace; did you mean '__fmax'?                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }105
:                                                               ^~~~~23
: note: MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)expanded from macro '__CONCAT'

                                                     ~~^~~~~~/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:                                                       __fmax#define __CONCAT(x,y)   x ## y329

:                        ^1./migraphx/kernels/math.hpp
::<scratch space> 67:note: :118'__fmax' declared here64:
:1 :note:  expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'note: 
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));expanded from here

^
__fmin
^/usr/include/math.h
:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }278
:                                                               ^~~~~3
: note: expanded from macro '__MATHCALLX'
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1:   __MATHDECLX (_Mdouble_,function,suffix, args, attrib)note: 
'__fmax' declared here  ^

/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^
/usr/include/math.h:278:3:   __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)note: 
expanded from macro '__MATHCALLX'                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23:   __MATHDECLX (_Mdouble_,function,suffix, args, attrib)note: 
expanded from macro '__CONCAT'  ^

/usr/include/math.h:281:#define __CONCAT(x,y)   x ## y22
:                        ^ 
note: expanded from macro '__MATHDECLX'
<scratch space>:117:1: note: expanded from here
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)__fmax

                     ^^

/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fminIn file included from 
main.cpp:./migraphx/kernels/math.hpp3::
67In file included from :./migraphx/kernels/pointwise.hpp64::29 :
note: ./migraphx/kernels/math.hppexpanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':
192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.hMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):
332                                                     ~~^~~~~~:
1                                                       __fmin:
 note: '__fmin' declared here./migraphx/kernels/math.hpp
:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
                                                                ^~~~~note: 
expanded from macro '__MATHCALLX'
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib) 
note:   ^'__fmin' declared here

/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)3
:                     ^ 
note: expanded from macro '__MATHCALLX'/usr/include/x86_64-linux-gnu/sys/cdefs.h
:105:23: note: expanded from macro '__CONCAT'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
#define __CONCAT(x,y)   x ## y/usr/include/math.h
:                        ^281
:<scratch space>22::118 :note: 1expanded from macro '__MATHDECLX':
 note: expanded from here
__fmin
^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 196608>, migraphx::integral_constant<unsigned int, 196608>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 196608>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 13642240>, migraphx::integral_constant<unsigned int, 13642240>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 13642240>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2959360>, migraphx::integral_constant<unsigned int, 2959360>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2959360>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:2732: error50s: generated  when compiling for note: gfx908called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>>'.

        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from In file included from main.cpp./migraphx/kernels/pointwise.hpp::329:
:
In file included from ./migraphx/kernels/math.hpp./migraphx/kernels/pointwise.hpp::19129::
56./migraphx/kernels/math.hpp:: 191error: :reference to __host__ function '__fmax' in __device__ function56
: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

                                                       ^
main.cppmain.cpp::1515::4545::  note: note: called by 'inner_pointwise<_Float16, _Float16>'called by 'inner_pointwise<_Float16, _Float16>'

auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));                                            ^

                                            ^
main.cppIn file included from :main.cppmain.cpp26:::26353::
:53In file included from  :./migraphx/kernels/pointwise.hppnote:  :called by 'operator()<_Float16 &, _Float16 &>'note: 29
called by 'operator()<_Float16 &, _Float16 &>':

./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^./migraphx/kernels/pointwise.hpp
:40MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)./migraphx/kernels/pointwise.hpp:
:66                                                       ^40:
: 66note: :called by 'operator()<unsigned int>' 
note: main.cppcalled by 'operator()<unsigned int>':
15:45: note:                       [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });called by 'inner_pointwise<_Float16, _Float16>'

                                                                 ^                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });

                                                                 ^
./migraphx/kernels/index.hpp:./migraphx/kernels/index.hpp160::auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));16016
::                                            ^16 
:note:  called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'note: main.cpp
called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>':
26        return f(i);:
        return f(i);53               ^
:
               ^ 
note: ./migraphx/kernels/index.hppcalled by 'operator()<_Float16 &, _Float16 &>'./migraphx/kernels/index.hpp:
:202202::2121::  note: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 5017600>, migraphx::integral_constant<unsigned int, 5017600>>'called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1775616>>'

    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
                    invoke_loop(f, start, _c<0>);                    invoke_loop(f, start, _c<0>);
./migraphx/kernels/pointwise.hpp
                    ^:                    ^
40
:./migraphx/kernels/index.hpp66./migraphx/kernels/index.hpp:::226 226:note: :9called by 'operator()<unsigned int>'9:
:  note: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 5017600>>'called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>>'

                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
        for_stride<false>(global, n, nglobal(), f);                                                                 ^        for_stride<false>(global, n, nglobal(), f);


        ^        ^

./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp::3939        return f(i);::
99               ^::
  note: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'./migraphx/kernels/index.hpp

:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1479680>, migraphx::integral_constant<unsigned int, 1479680>>'    idx.global_stride(out.get_shape().elements(),
    idx.global_stride(out.get_shape().elements(),

        ^        ^

                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp::./migraphx/kernels/index.hpp4848:::2263636:::9  :note: note:  called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'note: 

called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1479680>>'
        for_stride<false>(global, n, nglobal(), f);
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });        ^


                                   ^                                   ^

./migraphx/kernels/pointwise.hpp:39:9:./migraphx/kernels/vectorize.hpp ./migraphx/kernels/vectorize.hpp:note: :253called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'253:
:1313::  note: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),

            f(xs...);        ^
            f(xs...);
            ^

            ^
./migraphx/kernels/functional.hpp:./migraphx/kernels/functional.hpp257./migraphx/kernels/pointwise.hpp:::2575848:::58 36:note: : called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>' note: 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                         ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
./migraphx/kernels/functional.hpp        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });                                                         ^:

273                                   ^:
50./migraphx/kernels/functional.hpp:: 273note: :called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'50
: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
./migraphx/kernels/vectorize.hpp:253:13:         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });                                                 ^


                                                 ^
            f(xs...);./migraphx/kernels/functional.hpp
./migraphx/kernels/functional.hpp:            ^:289
289::2020./migraphx/kernels/functional.hpp:::  257note: note: :called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'58

: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);            return f(arg_c<(is + size - 1) % size>()(xs...)...);

                   ^                   ^

    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
./migraphx/kernels/functional.hpp                                                         ^./migraphx/kernels/functional.hpp:
:118118::1212::  note: ./migraphx/kernels/functional.hppnote: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>':called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
273
:50:     return f(index_constant<Ns>{}...);note: 
    return f(index_constant<Ns>{}...);called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'           ^


           ^
./migraphx/kernels/functional.hpp:./migraphx/kernels/functional.hpp138::13820::20 :note:         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); }); called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
note: 
                                                 ^called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'

./migraphx/kernels/functional.hpp    return detail::sequence_c_impl(f, detail::gens<N>{});:
289                   ^    return detail::sequence_c_impl(f, detail::gens<N>{});:

20                   ^:
 ./migraphx/kernels/functional.hppnote: :called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'287
./migraphx/kernels/functional.hpp::16287:: 16note: :called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>>' 
note:             return f(arg_c<(is + size - 1) % size>()(xs...)...);called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'

                   ^
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:./migraphx/kernels/functional.hpp        return sequence_c<sizeof...(xs)>([&](auto... is) {118:
:257               ^12:
:./migraphx/kernels/functional.hpp58 ::note: 257 called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>':note: 
58called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>':
 note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'    return f(index_constant<Ns>{}...);

           ^
./migraphx/kernels/functional.hpp    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
138                                                         ^    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:

20                                                         ^:
 ./migraphx/kernels/functional.hppnote: :called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'273
./migraphx/kernels/functional.hpp::16273:: 16note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>>'     return detail::sequence_c_impl(f, detail::gens<N>{});
note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'                   ^

        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp./migraphx/kernels/functional.hpp:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:287
257:               ^:16
58::./migraphx/kernels/functional.hpp  :note: note: 257called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>>'called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':

58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
./migraphx/kernels/functional.hpp                                                         ^:
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };257
:                                                         ^58./migraphx/kernels/functional.hpp
:: 273note: :./migraphx/kernels/functional.hppcalled by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'50:
:273 :note: 50called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>>':
 note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });./migraphx/kernels/functional.hpp
:./migraphx/kernels/args.hpp                                                 ^273:
:3916:./migraphx/kernels/args.hpp:12: :39note:  :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>>'note: 12
called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>':
 note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
    return f(make_tensor<Ns>::apply(xs)...);

./migraphx/kernels/args.hpp               ^           ^:

45:./migraphx/kernels/args.hpp./migraphx/kernels/functional.hpp37:::45257 ::note: 3758called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'::
  note: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'

        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
16
                                                         ^:                                    ^
 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
./migraphx/kernels/functional.hpp:273:./migraphx/kernels/functional.hpp16::273 :note:         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });50called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
:
               ^ 
note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>>'./migraphx/kernels/functional.hpp
:257:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });58
:               ^ 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'./migraphx/kernels/functional.hpp
:257:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });58
:                                                 ^ 
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'                                                         ^

./migraphx/kernels/args.hpp:./migraphx/kernels/pointwise.hpp39::4812:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:9
 :                                                         ^note:  
called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'note: 
./migraphx/kernels/pointwise.hppcalled by 'operator()<(lambda at main.cpp:26:39), void, void, void>':
48:9:     return f(make_tensor<Ns>::apply(xs)...);note: 
called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'           ^        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });


        ^./migraphx/kernels/args.hpp
:main.cpp45:        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });:26
37:        ^:38
 :main.cppnote:  :called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'note: 26
called by 'add_relu_kernel':
38: note: called by 'add_relu_kernel'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);

                                     ^    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
./migraphx/kernels/functional.hpp
:                                     ^/usr/include/x86_64-linux-gnu/bits/mathcalls.h273
::32916/usr/include/x86_64-linux-gnu/bits/mathcalls.h:::1 329:note: : called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'1note: 
:'__fmax' declared here 
note: '__fmax' declared here
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));               ^^


^./migraphx/kernels/functional.hpp
:/usr/include/math.h257:/usr/include/math.h:278:58:278:3: :3note:  :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'note:  
expanded from macro '__MATHCALLX'note: 
expanded from macro '__MATHCALLX'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)


                                                         ^  ^  ^


/usr/include/math.h/usr/include/math.h./migraphx/kernels/pointwise.hpp:::28128148:::22229:::   note: note: note: expanded from macro '__MATHDECLX'expanded from macro '__MATHDECLX'called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'


        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)


        ^                     ^                     ^


main.cpp/usr/include/x86_64-linux-gnu/sys/cdefs.h/usr/include/x86_64-linux-gnu/sys/cdefs.h:::26105105:::382323:::   note: note: note: called by 'add_relu_kernel'expanded from macro '__CONCAT'expanded from macro '__CONCAT'


#define __CONCAT(x,y)   x ## y#define __CONCAT(x,y)   x ## y

                        ^                        ^

<scratch space><scratch space>::117117:    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);:1
1:                                     ^: 
 note: note: expanded from hereexpanded from here
/usr/include/x86_64-linux-gnu/bits/mathcalls.h
__fmax:
__fmax329^
:
^1
: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
2 errors generated when compiling for gfx908.
33 error errorss generated generated when compiling for  when compiling for gfx908gfx908.
.
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>, migraphx::integral_constant<unsigned int, 3763200>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1183744>, migraphx::integral_constant<unsigned int, 1183744>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1183744>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^In file included from 
main.cpp:3/usr/include/math.h:
:In file included from 278./migraphx/kernels/pointwise.hpp::329::
 ./migraphx/kernels/math.hppnote: :expanded from macro '__MATHCALLX'191
:56: error: reference to __host__ function '__fmax' in __device__ function
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)expanded from macro '__MATHDECLX'

                                                       ^
main.cpp:15  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
45                     ^:
 note: /usr/include/x86_64-linux-gnu/sys/cdefs.hcalled by 'inner_pointwise<_Float16, _Float16>':
105:23: note: expanded from macro '__CONCAT'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));#define __CONCAT(x,y)   x ## y

                                            ^                        ^

main.cpp<scratch space>::26117::531::  note: note: called by 'operator()<_Float16 &, _Float16 &>'expanded from here

__fmax
^
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 887808>, migraphx::integral_constant<unsigned int, 887808>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 887808>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
3 error                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });s
 generated                                                                 ^ when compiling for 
gfx908.
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>, migraphx::integral_constant<unsigned int, 3763200>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:16:45: note: called by 'post_concat<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:28:74: note: called by 'operator()<_Float16 &, _Float16 &>'
        concat<1>(concat_x0,concat_x1,concat_x2,concat_x3)(MIGRAPHX_LIFT(post_concat), y, xs...);
                                                                         ^
./migraphx/kernels/concat.hpp:70:56: note: called by 'operator()<unsigned int>'
                                  [&](auto i) { y[i] = f(input[i], xs[i]...); });
                                                       ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/concat.hpp:70:35), unsigned int, unsigned int>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:182:13: note: called by 'for_stride_loop<(lambda at ./migraphx/kernels/concat.hpp:70:35), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1420492>>'
            invoke_loop(f, i, k);
            ^
./migraphx/kernels/index.hpp:214:17: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/concat.hpp:70:35), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1420492>>'
                for_stride_loop(start, n, stride, f);
                ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/concat.hpp:70:35), migraphx::integral_constant<unsigned int, 1775616>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/concat.hpp2: error69s: generated21 when compiling for :gfx908 .
note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
                idx.global_stride(input.get_shape().elements(),
                    ^
./migraphx/kernels/concat.hpp:52:26: note: called by 'operator()<(lambda at ./migraphx/kernels/concat.hpp:68:54)>'
    return [=](auto f) { f(concat_slice<Axis>(xs, input, start)...); };
                         ^
./migraphx/kernels/concat.hpp:68:13: note: called by 'operator()<migraphx::integral_constant<unsigned int, 576>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>>'
            concat_slices<Axis>(input, start, ts...)([&](auto y, auto... xs) {
            ^
./migraphx/kernels/functional.hpp:181:25: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, migraphx::integral_constant<unsigned int, 576>, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
    return fold_impl(f, f(static_cast<T&&>(x), static_cast<U&&>(y)), static_cast<Ts&&>(xs)...);
                        ^
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, migraphx::integral_constant<unsigned int, 384>, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
    return fold_impl(f, f(static_cast<T&&>(x), static_cast<U&&>(y)), static_cast<Ts&&>(xs)...);
           ^
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, migraphx::integral_constant<unsigned int, 192>, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, const migraphx::integral_constant<int, 0> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
./migraphx/kernels/functional.hpp:187:39: note: called by 'operator()<const migraphx::integral_constant<int, 0> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
    return [=](auto&&... xs) { return fold_impl(f, static_cast<decltype(xs)&&>(xs)...); };
                                      ^
./migraphx/kernels/concat.hpp:67:9: note: called by 'operator()<(lambda at main.cpp:28:60), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
        fold([&](auto start, auto input) {
        ^
main.cpp:28:9: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
        concat<1>(concat_x0,concat_x1,concat_x2,concat_x3)(MIGRAPHX_LIFT(post_concat), y, xs...);
        ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at main.cpp:27:137), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:27:137)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>, migraphx::integral_constant<unsigned int, 5>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U, 5U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<6U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at main.cpp:27:137), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:27:137)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, 5U, void, void, void, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at main.cpp:27:137), void *, void *, void *, void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:27:137)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
main.cpp:27:136: note: called by 'concat_add_relu_kernel'
    transform_args(make_tensors(), rotate_last(), vectorize<1, 3>())(private_p0,private_p1,private_p2,private_p3,private_p4,private_p5)([](auto y, auto concat_x0,auto concat_x1,auto concat_x2,auto concat_x3, auto... xs) {
                                                                                                                                       ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1881600>, migraphx::integral_constant<unsigned int, 1881600>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1881600>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2508800>, migraphx::integral_constant<unsigned int, 2508800>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2508800>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12:In file included from  main.cppnote: :called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'3
:
In file included from ./migraphx/kernels/pointwise.hpp:29    return f(index_constant<Ns>{}...);:

./migraphx/kernels/math.hpp           ^:
191:./migraphx/kernels/functional.hpp56::138 :error: 20reference to __host__ function '__fmax' in __device__ function:
 note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)    return detail::sequence_c_impl(f, detail::gens<N>{});

                                                       ^                   ^

./migraphx/kernels/math.hpp./migraphx/kernels/functional.hpp::234287::2616::  note: note: called by 'operator()<_Float16, _Float16>'called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>>'

MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257./migraphx/kernels/vec.hpp::58119:: 29note: :called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };                result[i] = f(vec_at(xs, i)...);

                                                         ^                            ^

./migraphx/kernels/math.hpp:234./migraphx/kernels/functional.hpp::1273:: 16note: :called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });16
:               ^ 
note: ./migraphx/kernels/functional.hppexpanded from macro 'MIGRAPHX_DEVICE_MATH_VEC':
257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };15
:                                                         ^45
: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>'
./migraphx/kernels/functional.hpp:273:50: note: auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>>'

                                            ^
main.cpp:26:53:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); }); 
note:                                                  ^called by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>'

./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);

                                                    ^
./migraphx/kernels/pointwise.hpp    return f(make_tensor<Ns>::apply(xs)...);:
40           ^:
66./migraphx/kernels/args.hpp:: 45note: :called by 'operator()<unsigned int>'37
: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };./migraphx/kernels/index.hpp
:                                    ^160
:16./migraphx/kernels/functional.hpp:: 273note: :called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'16
: note:         return f(i);called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'

               ^
./migraphx/kernels/index.hpp:202:21        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:
                ^note: 
called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>, migraphx::integral_constant<unsigned int, 393216>>'./migraphx/kernels/functional.hpp
:257:58:                     invoke_loop(f, start, _c<0>);note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'                    ^

./migraphx/kernels/index.hpp:226:9:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; }; 
note:                                                          ^called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>>'

./migraphx/kernels/pointwise.hpp:48:9:        for_stride<false>(global, n, nglobal(), f); 
note:         ^called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'

        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
./migraphx/kernels/pointwise.hpp        ^:
39main.cpp::926:: 38note: :called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>' 
note: called by 'add_relu_kernel'
    idx.global_stride(out.get_shape().elements(),
        ^
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);./migraphx/kernels/pointwise.hpp
:                                     ^48
:36: /usr/include/x86_64-linux-gnu/bits/mathcalls.hnote: :called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'329
:1: note: '__fmax' declared here
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3:./migraphx/kernels/vectorize.hpp :note: 257expanded from macro '__MATHCALLX':
13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
            f(vectorize_tensor<N, Axis>(xs)...);/usr/include/math.h
:            ^281
:22./migraphx/kernels/functional.hpp:: 257note: :expanded from macro '__MATHDECLX'58
: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };/usr/include/x86_64-linux-gnu/sys/cdefs.h
:                                                         ^105
:23: note: expanded from macro '__CONCAT'./migraphx/kernels/functional.hpp
:273:50:#define __CONCAT(x,y)   x ## y 
note:                         ^called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'

<scratch space>:117:1: note: expanded from here
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });__fmax

                                                 ^^

./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1775616>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>, migraphx::integral_constant<unsigned int, 393216>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
