In file included from main.cpp:3:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/reduce.hpp:30:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
2 errors generated when compiling for gfx908.
terminate called after throwing an instance of 'migraphx::version_1::exception'
  what():  /src/AMDMIGraphX/src/process.cpp:97: check_exec: Command cd /tmp/migraphx-compile-12f3-7f18a5ffd700-643a9f14294b4f-3EX0nJN7yb5kXBrd; /opt/rocm/llvm/bin/clang++ -Wno-float-equal -DMIGRAPHX_NGLOBAL=2097152 -DMIGRAPHX_NLOCAL=64 -Weverything -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-conversion -Wno-double-promotion -Wno-exit-time-destructors -Wno-extra-semi -Wno-extra-semi-stmt -Wno-float-conversion -Wno-gnu-anonymous-struct -Wno-gnu-zero-variadic-macro-arguments -Wno-missing-prototypes -Wno-nested-anon-types -Wno-padded -Wno-shorten-64-to-32 -Wno-sign-conversion -Wno-sign-compare -Wno-unused-command-line-argument -Wno-weak-vtables -Wno-c99-extensions -ftemplate-backtrace-limit=0 -Werror --std=c++17 -fno-gpu-rdc -c --offload-arch=gfx908:sramecc+:xnack- --cuda-device-only -O3  -Wno-unused-command-line-argument -Wno-cuda-compat -mllvm -amdgpu-early-inline-all=true -mllvm -amdgpu-function-calls=false -x hip -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm-5.4.2/llvm/lib/clang/15.0.0/include/.. -D__HIP_PLATFORM_HCC__=1 -D__HIP_PLATFORM_AMD__=1 -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm/include --hip-link --hip-link -I. main.cpp -o main.o exited with status 1
timeout: the monitored command dumped core
In file included from In file included from main.cppmain.cpp::33:
:
In file included from In file included from ./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp::2929:
:
./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::191191::5656::  error: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?no member named '__hmax' in the global namespace; did you mean '__fmax'?

MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

                                                     ~~^~~~~~                                                     ~~^~~~~~

                                                       __fmax                                                       __fmax

./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::6767::6464::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~                                                               ^~~~~

/usr/include/x86_64-linux-gnu/bits/mathcalls.h/usr/include/x86_64-linux-gnu/bits/mathcalls.h::329329::11::  note: note: '__fmax' declared here'__fmax' declared here

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^^

/usr/include/math.h/usr/include/math.h::278278::33::  note: note: expanded from macro '__MATHCALLX'expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^  ^

/usr/include/math.h/usr/include/math.h::281281::2222::  note: note: expanded from macro '__MATHDECLX'expanded from macro '__MATHDECLX'

  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h/usr/include/x86_64-linux-gnu/sys/cdefs.h::105105::2323::  note: note: expanded from macro '__CONCAT'expanded from macro '__CONCAT'

#define __CONCAT(x,y)   x ## y#define __CONCAT(x,y)   x ## y

                        ^                        ^

<scratch space><scratch space>::117117::11::  note: note: expanded from hereexpanded from here

__fmax__fmax

^^

In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from In file included from main.cppmain.cpp::33:
:
In file included from In file included from ./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp::2929:
:
./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::192192::5656::  error: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?no member named '__hmin' in the global namespace; did you mean '__fmin'?

MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)

                                                     ~~^~~~~~                                                     ~~^~~~~~

                                                       __fmin                                                       __fmin

./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::6767::6464::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~                                                               ^~~~~

/usr/include/x86_64-linux-gnu/bits/mathcalls.h/usr/include/x86_64-linux-gnu/bits/mathcalls.h::332332::11::  note: note: '__fmin' declared here'__fmin' declared here

__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^^

/usr/include/math.h/usr/include/math.h::278278::33::  note: note: expanded from macro '__MATHCALLX'expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^  ^

/usr/include/math.h/usr/include/math.h::281281::2222::  note: note: expanded from macro '__MATHDECLX'expanded from macro '__MATHDECLX'

  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h/usr/include/x86_64-linux-gnu/sys/cdefs.h::105105::2323::  note: note: expanded from macro '__CONCAT'expanded from macro '__CONCAT'

#define __CONCAT(x,y)   x ## y#define __CONCAT(x,y)   x ## y

                        ^                        ^

<scratch space><scratch space>::118118::11::  note: note: expanded from hereexpanded from here

__fmin__fmin

^^

In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
In file included from main.cpp:<scratch space>3::
117In file included from :./migraphx/kernels/pointwise.hpp1::29 :
note: ./migraphx/kernels/math.hppexpanded from here:
191:__fmax56
:^ 
error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
In file included from   __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)main.cpp
:                     ^3
:
In file included from /usr/include/x86_64-linux-gnu/sys/cdefs.h./migraphx/kernels/pointwise.hpp::10529::
23./migraphx/kernels/math.hpp:: 191note: :expanded from macro '__CONCAT'56
: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)__fmax

                                                     ~~^~~~~~^

                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
In file included from /usr/include/x86_64-linux-gnu/bits/mathcalls.hmain.cpp::3323::
1In file included from :./migraphx/kernels/pointwise.hpp :note: 29'__fmin' declared here:

./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)

                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)67
:  ^64
:/usr/include/math.h :note: 281expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':
22: note: expanded from macro '__MATHDECLX'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
/usr/include/x86_64-linux-gnu/bits/mathcalls.h                     ^:
332:/usr/include/x86_64-linux-gnu/sys/cdefs.h1::105 :note: 23'__fmin' declared here:
 note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));                        ^

^<scratch space>
:118:1/usr/include/math.hIn file included from ::main.cpp 278:note: :3expanded from here3:

:In file included from  __fmin./migraphx/kernels/pointwise.hppnote: 
:expanded from macro '__MATHCALLX'^29

:
./migraphx/kernels/math.hpp:191:56:   __MATHDECLX (_Mdouble_,function,suffix, args, attrib)error: 
no member named '__hmax' in the global namespace; did you mean '__fmax'?  ^

/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^./migraphx/kernels/math.hpp
:67/usr/include/x86_64-linux-gnu/sys/cdefs.h::64105:: 23note: :expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR' 
note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }<scratch space>
:                                                               ^~~~~118
:1: note: expanded from here
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:__fmin329
:^1
: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56In file included from :main.cpp :error: 4no member named '__hmax' in the global namespace; did you mean '__fmax'?:

In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmaxMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

                                                     ~~^~~~~~
./migraphx/kernels/math.hpp                                                       __fmax:
67:64./migraphx/kernels/math.hpp:: 67note: :expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'64
: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h/usr/include/x86_64-linux-gnu/bits/mathcalls.h::329329::11::  note: note: '__fmax' declared here'__fmax' declared here

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^^

/usr/include/math.h/usr/include/math.h::278278::33::  note: note: expanded from macro '__MATHCALLX'expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^  ^

/usr/include/math.h/usr/include/math.h::281281::2222::  note: note: expanded from macro '__MATHDECLX'expanded from macro '__MATHDECLX'

  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h/usr/include/x86_64-linux-gnu/sys/cdefs.h::105105::2323::  note: note: expanded from macro '__CONCAT'expanded from macro '__CONCAT'

#define __CONCAT(x,y)   x ## y#define __CONCAT(x,y)   x ## y

                        ^                        ^

<scratch space><scratch space>::117117::11::  note: note: expanded from hereexpanded from here

__fmax__fmax

^^

In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
In file included from main.cpp:4MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):

In file included from                                                      ~~^~~~~~./migraphx/kernels/ops.hpp
:                                                       __fmin27
:
./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::19267::5664::  error: note: no member named '__hmin' in the global namespace; did you mean '__fmin'?expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)

                                                               ^~~~~                                                     ~~^~~~~~

                                                       __fmin
/usr/include/x86_64-linux-gnu/bits/mathcalls.h./migraphx/kernels/math.hpp::33267::164::  note: note: '__fmin' declared hereexpanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }^

                                                               ^~~~~
/usr/include/math.h:278:/usr/include/x86_64-linux-gnu/bits/mathcalls.h3::332 :note: 1expanded from macro '__MATHCALLX':
 note: '__fmin' declared here
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

/usr/include/math.h^:
281:22/usr/include/math.h:: 278note: :expanded from macro '__MATHDECLX'3
: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

  ^                     ^

/usr/include/math.h:/usr/include/x86_64-linux-gnu/sys/cdefs.h281::10522::23 :note:  expanded from macro '__MATHDECLX'note: 
expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)<scratch space>
:                     ^118
:1/usr/include/x86_64-linux-gnu/sys/cdefs.h:: 105note: :expanded from here23
: __fminnote: 
expanded from macro '__CONCAT'^

#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:In file included from 67main.cpp::644::
 In file included from note: ./migraphx/kernels/ops.hppexpanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':
27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):
1                                                     ~~^~~~~~:
                                                        __fminnote: 
'__fmax' declared here
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
278                                                               ^~~~~:
3: note: expanded from macro '__MATHCALLX'/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:332:1: note: '__fmin' declared here
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22:__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__)); 
note: ^expanded from macro '__MATHDECLX'

/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):
23  ^:
 /usr/include/math.hnote: :expanded from macro '__CONCAT'281
:22: note: expanded from macro '__MATHDECLX'#define __CONCAT(x,y)   x ## y

                        ^
<scratch space>:117:1:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib) 
note:                      ^expanded from here

/usr/include/x86_64-linux-gnu/sys/cdefs.h__fmax:
105^:
23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
In file included from main.cpp:4:
In file included from MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)./migraphx/kernels/ops.hpp
:                                                     ~~^~~~~~27
:
                                                       __fmin./migraphx/kernels/math.hpp
:191:./migraphx/kernels/math.hpp56::67 :error: 64no member named '__hmax' in the global namespace; did you mean '__fmax'?:
 note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:                                                       __fmax332
:1:./migraphx/kernels/math.hpp :note: 67'__fmin' declared here:
64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }278
:                                                               ^~~~~3
: note: expanded from macro '__MATHCALLX'
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1:   __MATHDECLX (_Mdouble_,function,suffix, args, attrib)note: 
'__fmax' declared here  ^

/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^
/usr/include/math.h:278:3:   __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)note: 
expanded from macro '__MATHCALLX'                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib) 
note:   ^expanded from macro '__CONCAT'

/usr/include/math.h:281:22:#define __CONCAT(x,y)   x ## y 
note:                         ^expanded from macro '__MATHDECLX'

<scratch space>:118:1: note: expanded from here
__fmin  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

^                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(8))), _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(8))), _Float16 &>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>, migraphx::integral_constant<unsigned int, 1605632>>'
In file included from                     invoke_loop(f, start, _c<0>);main.cpp
:                    ^3
:
./migraphx/kernels/index.hppIn file included from :./migraphx/kernels/pointwise.hpp226::299:
:./migraphx/kernels/math.hpp :note: 191called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>>':
56: error:         for_stride<false>(global, n, nglobal(), f);reference to __host__ function '__fmax' in __device__ function

        ^
./migraphx/kernels/pointwise.hpp:39:9:MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax) 
note:                                                        ^called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'

main.cpp    idx.global_stride(out.get_shape().elements(),:
15        ^:
45: note: called by 'inner_pointwise<_Float16, _Float16>'./migraphx/kernels/pointwise.hpp
:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });

                                            ^                                   ^

main.cpp:26:53: note: ./migraphx/kernels/vectorize.hppcalled by 'operator()<_Float16 &, _Float16 &>':
257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58:    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2); 
note:                                                     ^called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'

./migraphx/kernels/pointwise.hpp:40:66    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
                                                          ^note: 
called by 'operator()<unsigned int>'
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

                                                 ^
./migraphx/kernels/functional.hpp./migraphx/kernels/index.hpp::289160::2016::  note: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'

            return f(arg_c<(is + size - 1) % size>()(xs...)...);        return f(i);

                   ^               ^

./migraphx/kernels/functional.hpp:118:./migraphx/kernels/index.hpp12::202 :note: 21called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>':
 note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note:                     invoke_loop(f, start, _c<0>);called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'

                    ^
    return detail::sequence_c_impl(f, detail::gens<N>{});./migraphx/kernels/index.hpp
:                   ^226
:9: ./migraphx/kernels/functional.hppnote: :called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'287
:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        for_stride<false>(global, n, nglobal(), f);        return sequence_c<sizeof...(xs)>([&](auto... is) {

        ^               ^

./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
./migraphx/kernels/pointwise.hpp:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };39
:                                                         ^9
: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'./migraphx/kernels/functional.hpp
:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:./migraphx/kernels/pointwise.hpp58::48 :note: 36called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':
 note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                         ^
./migraphx/kernels/functional.hpp:273:50: note:         t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'

                                   ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: ./migraphx/kernels/vectorize.hppnote: :called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'253
:13:     return f(make_tensor<Ns>::apply(xs)...);note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'           ^

./migraphx/kernels/args.hpp:45:            f(xs...);37
:            ^ 
note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
./migraphx/kernels/functional.hpp:257:58:         return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'                                    ^

./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

               ^
./migraphx/kernels/functional.hpp:257:58: note: ./migraphx/kernels/functional.hppcalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':
273:50: note:     return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'

                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });

                                                 ^        ^

main.cpp:26./migraphx/kernels/functional.hpp::38289:: 20note: :called by 'add_relu_kernel' 
note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
            return f(arg_c<(is + size - 1) % size>()(xs...)...);/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:                   ^329
:1: ./migraphx/kernels/functional.hppnote: :'__fmax' declared here118
:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^
/usr/include/math.h:278:    return f(index_constant<Ns>{}...);3
:           ^ 
note: expanded from macro '__MATHCALLX'./migraphx/kernels/functional.hpp
:138:20:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib) 
note:   ^called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'

/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: ./migraphx/kernels/functional.hppexpanded from macro '__CONCAT':
287:16#define __CONCAT(x,y)   x ## y:
                         ^note: 
called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'<scratch space>
:117:1: note: expanded from here
__fmax
^
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
In file included from main.cpp./migraphx/kernels/functional.hpp::3273:
:In file included from 50./migraphx/kernels/pointwise.hpp:: 29note: :
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'./migraphx/kernels/math.hpp
:191:56: error: reference to __host__ function '__fmax' in __device__ function
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)./migraphx/kernels/args.hpp
:                                                       ^39
:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
./migraphx/kernels/math.hpp:234:26:     return f(make_tensor<Ns>::apply(xs)...);note: 
called by 'operator()<_Float16, _Float16>'           ^

./migraphx/kernels/args.hpp:MIGRAPHX_DEVICE_MATH_VEC(max)45
:                         ^37
: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
                result[i] = f(vec_at(xs, i)...);
                            ^./migraphx/kernels/functional.hpp
:273:./migraphx/kernels/math.hpp16::234 :note: 1called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>':
 note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });./migraphx/kernels/math.hpp
:               ^54
:16./migraphx/kernels/functional.hpp:: 257note: :expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'58
: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
main.cpp                                                         ^:
21:45:./migraphx/kernels/pointwise.hpp :note: 48called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>':
9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));
                                            ^
main.cpp        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });:
32        ^:
53:main.cpp :note: 26called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>':
38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);                                                    ^

                                     ^
./migraphx/kernels/pointwise.hpp:40/usr/include/x86_64-linux-gnu/bits/mathcalls.h::66329:: 1note: :called by 'operator()<unsigned int>' 
note: '__fmax' declared here
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^
./migraphx/kernels/index.hpp/usr/include/math.h::160278::163::  note: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'expanded from macro '__MATHCALLX'

        return f(i);
               ^
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^./migraphx/kernels/index.hpp
:/usr/include/math.h202::28121::22 :note:  called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1103872>, migraphx::integral_constant<unsigned int, 1103872>>'note: 
expanded from macro '__MATHDECLX'
                    invoke_loop(f, start, _c<0>);
                    ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)./migraphx/kernels/index.hpp
:                     ^226
:9/usr/include/x86_64-linux-gnu/sys/cdefs.h:: 105note: :called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1103872>>'23
: note: expanded from macro '__CONCAT'
        for_stride<false>(global, n, nglobal(), f);
        ^#define __CONCAT(x,y)   x ## y

                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 34496, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 34496, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
In file included from main.cpp    idx.global_stride(out.get_shape().elements(),:
3        ^:

In file included from In file included from ./migraphx/kernels/pointwise.hppmain.cpp::293./migraphx/kernels/pointwise.hpp:
:
:./migraphx/kernels/math.hppIn file included from 48:./migraphx/kernels/pointwise.hpp:191:36:29:56:
 :./migraphx/kernels/math.hppnote:  :called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 34496, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 34496, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'error: 191
reference to __host__ function '__fmax' in __device__ function:
56: error: reference to __host__ function '__fmax' in __device__ function        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });

                                   ^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^./migraphx/kernels/math.hpp
:234:26main.cpp:./migraphx/kernels/vectorize.hpp: :15note: 257:called by 'operator()<_Float16, _Float16>':45
13::  MIGRAPHX_DEVICE_MATH_VEC(max)note: note: 
called by 'inner_pointwise<_Float16, _Float16>'called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'                         ^


            f(vectorize_tensor<N, Axis>(xs)...);
./migraphx/kernels/vec.hppauto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));            ^:

119                                            ^:./migraphx/kernels/functional.hpp
29::257main.cpp ::note: 5826called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'::
 53note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>' 
                result[i] = f(vec_at(xs, i)...);note: 
called by 'operator()<_Float16 &, _Float16 &>'                            ^

    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
./migraphx/kernels/math.hpp                                                         ^:
234:1: note:     pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'

                                                    ^./migraphx/kernels/functional.hpp
:MIGRAPHX_DEVICE_MATH_VEC(max)273
./migraphx/kernels/pointwise.hpp:^:50
40::./migraphx/kernels/math.hpp 66:note: :54called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>' :
note: 16called by 'operator()<unsigned int>':
         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });note: 
expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'                                                 ^

                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
./migraphx/kernels/functional.hpp                                                                 ^:
289        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \:
20./migraphx/kernels/index.hpp               ^::
 160note: :main.cppcalled by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>'16:
:21 :note: 45called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>':            return f(arg_c<(is + size - 1) % size>()(xs...)...);
 
note:                    ^        return f(i);called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>'


               ^./migraphx/kernels/functional.hpp
:118:12:./migraphx/kernels/index.hpp auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));:note: 
202called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>'                                            ^:

21: main.cppnote: :    return f(index_constant<Ns>{}...);called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'32

:           ^53
: ./migraphx/kernels/functional.hppnote:                     invoke_loop(f, start, _c<0>);:called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>'
138
                    ^:
20: ./migraphx/kernels/index.hppnote: :called by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'226
:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);

    return detail::sequence_c_impl(f, detail::gens<N>{});                                                    ^

                   ^
        for_stride<false>(global, n, nglobal(), f);./migraphx/kernels/pointwise.hpp
:        ^40
:66./migraphx/kernels/functional.hpp:: 287note: :called by 'operator()<unsigned int>'16
./migraphx/kernels/pointwise.hpp:: 39note: :called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>>'9
:                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); }); 
note:                                                                  ^called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {

               ^./migraphx/kernels/index.hpp
:./migraphx/kernels/functional.hpp160:    idx.global_stride(out.get_shape().elements(),:257
16:        ^:58
 :note:  called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'note: 
called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'./migraphx/kernels/pointwise.hpp
:        return f(i);48
:               ^36
:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; }; 
./migraphx/kernels/index.hppnote:                                                          ^:called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
202
:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 903168>, migraphx::integral_constant<unsigned int, 903168>>'
./migraphx/kernels/functional.hpp:273        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });:
16                    invoke_loop(f, start, _c<0>);                                   ^:

                     ^note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>>'
./migraphx/kernels/index.hpp:226:9: note: ./migraphx/kernels/vectorize.hppcalled by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 903168>>':
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });253
:               ^13
        for_stride<false>(global, n, nglobal(), f);:
./migraphx/kernels/functional.hpp         ^:note: 
257called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>':
58: note:             f(xs...);called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'

            ^
./migraphx/kernels/pointwise.hpp:39./migraphx/kernels/functional.hpp::9257    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };::
 58                                                         ^note: :
called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 28224, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 28224, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
./migraphx/kernels/functional.hpp    idx.global_stride(out.get_shape().elements(),:
273        ^:
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };50
:                                                         ^ 
note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 352, 784>, migraphx::integral_const_array<unsigned int, 275968, 784, 1>>>>'
./migraphx/kernels/pointwise.hpp:48:36./migraphx/kernels/functional.hpp:: 273note:         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 28224, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 28224, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
50
                                                 ^:
 note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
./migraphx/kernels/args.hpp:        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });39
:                                   ^12
:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); }); 
note:                                                  ^called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>'

./migraphx/kernels/functional.hpp:./migraphx/kernels/vectorize.hpp289:    return f(make_tensor<Ns>::apply(xs)...);:257
20:           ^:13
 :note: ./migraphx/kernels/args.hpp called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>':note: 
45called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>':
37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
            f(vectorize_tensor<N, Axis>(xs)...);                   ^

            ^
./migraphx/kernels/functional.hpp:./migraphx/kernels/functional.hpp118        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };::
25712                                    ^::
58 :./migraphx/kernels/functional.hppnote:  :called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'note: 273
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':
16:    return f(index_constant<Ns>{}...); 
note:            ^called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>'

    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };./migraphx/kernels/functional.hpp
:                                                         ^138
:20:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); }); 
note:                ^3called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
./migraphx/kernels/functional.hpp error
./migraphx/kernels/functional.hpp:s:273 generated257: when compiling for     return detail::sequence_c_impl(f, detail::gens<N>{});:50gfx908
58:.
                   ^: 
 note: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'

./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });


                                                         ^                                                 ^

        return sequence_c<sizeof...(xs)>([&](auto... is) {./migraphx/kernels/pointwise.hpp
:               ^./migraphx/kernels/functional.hpp48
::289./migraphx/kernels/functional.hpp9:::20257 ::note:  58called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'note: :
called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
            return f(arg_c<(is + size - 1) % size>()(xs...)...);main.cpp
:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };                   ^32

:                                                         ^38
:./migraphx/kernels/functional.hpp :note: 118called by 'mul_mul_add_relu_kernel':./migraphx/kernels/functional.hpp
12::273 :note: 16called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>':
 note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);

    return f(index_constant<Ns>{}...);                                     ^

           ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h./migraphx/kernels/functional.hpp:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:329
138:               ^:1
20::./migraphx/kernels/functional.hpp  :note: note: 257'__fmax' declared herecalled by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>':

58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));    return detail::sequence_c_impl(f, detail::gens<N>{});

^                   ^

    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };/usr/include/math.h
:                                                         ^278
:3: note: ./migraphx/kernels/functional.hppexpanded from macro '__MATHCALLX':
./migraphx/kernels/functional.hpp287::27316::  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)50 
:note:   ^ called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>>'
note: 
/usr/include/math.hcalled by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>':
281:22:        return sequence_c<sizeof...(xs)>([&](auto... is) { 
note:                ^expanded from macro '__MATHDECLX'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

./migraphx/kernels/functional.hpp                                                 ^:
257  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
58                     ^./migraphx/kernels/args.hpp:
: 39/usr/include/x86_64-linux-gnu/sys/cdefs.hnote: ::called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'12105
:: 23note: :called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>' 
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };note: 
expanded from macro '__CONCAT'                                                         ^

    return f(make_tensor<Ns>::apply(xs)...);
           ^#define __CONCAT(x,y)   x ## y

                        ^./migraphx/kernels/args.hpp
:<scratch space>45./migraphx/kernels/functional.hpp:::11737273:::1 16:note: : called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>' note: 
note: expanded from herecalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>>'

__fmax
^
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

               ^
./migraphx/kernels/functional.hpp:273./migraphx/kernels/functional.hpp::16257:: 58note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

               ^                                                         ^

./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 288, 784>, migraphx::integral_const_array<unsigned int, 225792, 784, 1>>>>'    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                         ^
./migraphx/kernels/pointwise.hpp:48:9:         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });note: 
called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'                                                 ^

./migraphx/kernels/args.hpp:39:12        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });:
         ^note: 
called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>'main.cpp
:26:38: note:     return f(make_tensor<Ns>::apply(xs)...);called by 'add_relu_kernel'

           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };:
1                                    ^:
 note: '__fmax' declared here
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:
                ^note: 
expanded from macro '__MATHCALLX'
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; }; 
note:                                                          ^expanded from macro '__MATHDECLX'

./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23:         t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });note: 
expanded from macro '__CONCAT'        ^

main.cpp:32#define __CONCAT(x,y)   x ## y:
38                        ^:
 <scratch space>note: :called by 'mul_mul_add_relu_kernel'117
:1: note: expanded from here
__fmax
^
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3:2  errornote: sexpanded from macro '__MATHCALLX' generated
 when compiling for gfx908.
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
3 errors generated when compiling for gfx908.
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(8))), _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(8))), _Float16 &>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>, migraphx::integral_constant<unsigned int, 1605632>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
In file included from ./migraphx/kernels/args.hppmain.cpp::393::
12In file included from :./migraphx/kernels/pointwise.hpp :note: 29called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>':

./migraphx/kernels/math.hpp:191:56:     return f(make_tensor<Ns>::apply(xs)...);error: 
reference to __host__ function '__fmax' in __device__ function           ^

./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

                                                       ^
./migraphx/kernels/math.hpp:234:26:         return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };note: 
called by 'operator()<_Float16, _Float16>'                                    ^

./migraphx/kernels/functional.hppMIGRAPHX_DEVICE_MATH_VEC(max):
273                         ^:
16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp                result[i] = f(vec_at(xs, i)...);:
257                            ^:
58:./migraphx/kernels/math.hpp :note: 234called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':
1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                         ^./migraphx/kernels/math.hpp
:54:16./migraphx/kernels/pointwise.hpp:: 48note: :expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'9
: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });main.cpp
:        ^21
:45main.cpp:: 26note: :called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>'38
: note: called by 'add_relu_kernel'
auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));
                                            ^
main.cpp:32:53:    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2); 
note:                                      ^called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>'

/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));66
:^ 
note: called by 'operator()<unsigned int>'
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
./migraphx/kernels/index.hpp  ^:
160:/usr/include/math.h16::281 :note: 22called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>':
 note: expanded from macro '__MATHDECLX'        return f(i);

               ^
./migraphx/kernels/index.hpp:202:21: note:   __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 702464>, migraphx::integral_constant<unsigned int, 702464>>'

                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105                    invoke_loop(f, start, _c<0>);:
23                    ^:
 note: ./migraphx/kernels/index.hppexpanded from macro '__CONCAT':
226:9: note: #define __CONCAT(x,y)   x ## ycalled by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 702464>>'

                        ^
<scratch space>:117:1        for_stride<false>(global, n, nglobal(), f);:
         ^note: 
expanded from here
__fmax
^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 21952, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 21952, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 21952, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 21952, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 224, 784>, migraphx::integral_const_array<unsigned int, 175616, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:32:38: note: called by 'mul_mul_add_relu_kernel'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
3MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax) error
s                                                       ^ generated
 when compiling for gfx908.
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:21:45: note: called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>'
auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));
                                            ^
main.cpp:32:53: note: called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1304576>, migraphx::integral_constant<unsigned int, 1304576>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1304576>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 40768, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 40768, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: 3note:  errorcalled by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 40768, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 40768, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'s
 generated when compiling for gfx908.
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 416, 784>, migraphx::integral_const_array<unsigned int, 326144, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:32:38: note: called by 'mul_mul_add_relu_kernel'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:21:45: note: called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>'
auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));
                                            ^
main.cpp:32:53: note: called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 501760>, migraphx::integral_constant<unsigned int, 501760>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 501760>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 15680, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 15680, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 15680, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 15680, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 784>, migraphx::integral_const_array<unsigned int, 125440, 784, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:32:38: note: called by 'mul_mul_add_relu_kernel'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:In file included from 36main.cpp:: 3note: :
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'In file included from 
./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)3
 error                                                       ^s
 generated./migraphx/kernels/vectorize.hpp when compiling for :gfx908./migraphx/kernels/math.hpp253.
::23413::26 :note:  called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'note: 
called by 'operator()<_Float16, _Float16>'
            f(xs...);MIGRAPHX_DEVICE_MATH_VEC(max)

            ^                         ^

./migraphx/kernels/functional.hpp:257:./migraphx/kernels/vec.hpp58::119 :note: 29called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':
 note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
1                                                         ^:
 note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/functional.hpp./migraphx/kernels/math.hpp::27354::5016::  note: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'

        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:21:45        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:
                                                  ^note: 
called by 'inner_pointwise<_Float16, _Float16 __attribute__((ext_vector_type(8))), _Float16, _Float16>'
./migraphx/kernels/functional.hpp:289:20auto z7 = migraphx::convert<half>(migraphx::max(decltype(z6){0}, z6));:
                                             ^note: 
called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
main.cpp:32:53: note: called by 'operator()<_Float16 &, _Float16 & __attribute__((ext_vector_type(8))), _Float16 &, _Float16 &>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);:
118                                                    ^:
12./migraphx/kernels/pointwise.hpp:: 40note: :called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'66
: note: called by 'operator()<unsigned int>'
    return f(index_constant<Ns>{}...);
           ^
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^./migraphx/kernels/functional.hpp
:138:./migraphx/kernels/index.hpp20::160 :note: 16called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>':
 note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp    return detail::sequence_c_impl(f, detail::gens<N>{});:
202                   ^:
21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1505280>, migraphx::integral_constant<unsigned int, 1505280>>'
                    invoke_loop(f, start, _c<0>);./migraphx/kernels/functional.hpp
:                    ^287
:./migraphx/kernels/index.hpp16::226 :note: 9called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>':
 note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1505280>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58./migraphx/kernels/pointwise.hpp:: 39note: :called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'9
: note: called by 'pointwise_tensor<(lambda at main.cpp:32:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 47040, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 47040, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 47040, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 47040, 98, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 98>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
./migraphx/kernels/functional.hpp:273:16:         t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'                                   ^

        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });./migraphx/kernels/vectorize.hpp
:               ^257
:13:./migraphx/kernels/functional.hpp :note: 257called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>':
58: note:             f(vectorize_tensor<N, Axis>(xs)...);called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'

            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273./migraphx/kernels/functional.hpp::50273:: 50note: :called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>' 
note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^./migraphx/kernels/functional.hpp
:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>>'./migraphx/kernels/args.hpp
:39:12:             return f(arg_c<(is + size - 1) % size>()(xs...)...);note: 
called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'                   ^

./migraphx/kernels/functional.hpp:118:12:     return f(make_tensor<Ns>::apply(xs)...);note: 
called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U>'           ^

    return f(index_constant<Ns>{}...);./migraphx/kernels/args.hpp
:           ^45
:./migraphx/kernels/functional.hpp37::138 :note: 20called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>':
 note: called by 'sequence_c<5U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };./migraphx/kernels/functional.hpp
:                                    ^287
:16: ./migraphx/kernels/functional.hppnote: :called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>>'273
:16: note:         return sequence_c<sizeof...(xs)>([&](auto... is) {called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'

               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };               ^

                                                         ^
./migraphx/kernels/functional.hpp:257:58: ./migraphx/kernels/functional.hppnote: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'273
:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

                                                         ^               ^

./migraphx/kernels/functional.hpp:./migraphx/kernels/pointwise.hpp257::4858::9 :note:  called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'note: 
called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });./migraphx/kernels/functional.hpp
:        ^273
:50main.cpp:: 26note: :called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 480, 784>, migraphx::integral_const_array<unsigned int, 376320, 784, 1>>>>'38
: note: called by 'add_relu_kernel'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, void, void, void, void, void>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^    return f(make_tensor<Ns>::apply(xs)...);

           ^
./migraphx/kernels/args.hpp/usr/include/x86_64-linux-gnu/bits/mathcalls.h::45329::371::  note: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>''__fmax' declared here

        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));./migraphx/kernels/functional.hpp
:^273
:16: note: /usr/include/math.hcalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *, void *, void *>':
278:3: note: expanded from macro '__MATHCALLX'        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^
/usr/include/math.h:281    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
22                                                         ^:
 ./migraphx/kernels/pointwise.hppnote: :expanded from macro '__MATHDECLX'48
:9: note: called by 'operator()<(lambda at main.cpp:32:39), void, void, void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)main.cpp
:                     ^32
:38/usr/include/x86_64-linux-gnu/sys/cdefs.h:: 105note: :called by 'mul_mul_add_relu_kernel'23
: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2,private_p3,private_p4);117
:                                     ^1
: note: expanded from here/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:329__fmax:
1^:
 note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(8))), _Float16 __attribute__((ext_vector_type(8))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(8))), _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(8))), _Float16 &>'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>, migraphx::integral_constant<unsigned int, 1605632>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1605632>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(8))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 50176, 392, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 392>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 3136>, migraphx::integral_const_array<unsigned int, 401408, 3136, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<8, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>, migraphx::integral_constant<unsigned int, 200704>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 200704>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 49>, migraphx::integral_const_array<unsigned int, 6272, 49, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
