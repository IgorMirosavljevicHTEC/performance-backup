In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>, migraphx::integral_constant<unsigned int, 3763200>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
In file included from ./migraphx/kernels/functional.hppmain.cpp::1383::
20In file included from :./migraphx/kernels/pointwise.hpp :note: 29called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>':

./migraphx/kernels/math.hpp:191:56:     return detail::sequence_c_impl(f, detail::gens<N>{});error: 
reference to __host__ function '__fmax' in __device__ function                   ^

./migraphx/kernels/functional.hpp:287:MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)16
:                                                       ^ 
note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
main.cpp:15        return sequence_c<sizeof...(xs)>([&](auto... is) {:
45               ^:
 ./migraphx/kernels/functional.hppnote: :called by 'inner_pointwise<_Float16, _Float16>'257
:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
26                                                         ^:
53: note: called by 'operator()<_Float16 &, _Float16 &>'
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:
66               ^:
 ./migraphx/kernels/functional.hppnote: :called by 'operator()<unsigned int>'257
:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^./migraphx/kernels/index.hpp
:160:16: ./migraphx/kernels/functional.hppnote: :called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'273
:50:        return f(i); 
note:                ^called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'

./migraphx/kernels/index.hpp:202:21: note:         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2508800>, migraphx::integral_constant<unsigned int, 2508800>>'

                                                 ^
                    invoke_loop(f, start, _c<0>);./migraphx/kernels/args.hpp
:                    ^39
:12./migraphx/kernels/index.hpp:: 226note: :called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'9
: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2508800>>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp        for_stride<false>(global, n, nglobal(), f);:
45        ^:
37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
./migraphx/kernels/pointwise.hpp:39:9:         return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };note: 
called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'                                    ^

./migraphx/kernels/functional.hpp:273    idx.global_stride(out.get_shape().elements(),:
16        ^:
 note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
./migraphx/kernels/pointwise.hpp:48:36: note:         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'

               ^
./migraphx/kernels/functional.hpp:257:58        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });:
                                    ^note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
./migraphx/kernels/vectorize.hpp                                                         ^:
253:./migraphx/kernels/pointwise.hpp13::48 :note: 9called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>':
 note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'            f(xs...);

            ^
./migraphx/kernels/functional.hpp:257:        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });58
:        ^ 
note: main.cppcalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':
26:38: note: called by 'add_relu_kernel'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);:
273                                     ^:
50: note: /usr/include/x86_64-linux-gnu/bits/mathcalls.hcalled by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>':
329:1: note: '__fmax' declared here
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^
./migraphx/kernels/functional.hpp:289/usr/include/math.h::20278:: 3note: :called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>' 
note: expanded from macro '__MATHCALLX'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)                   ^

  ^
./migraphx/kernels/functional.hpp/usr/include/math.h::118281::1222::  note: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'expanded from macro '__MATHDECLX'

    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
138                     ^:
20:/usr/include/x86_64-linux-gnu/sys/cdefs.h :note: 105called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>':
23: note: expanded from macro '__CONCAT'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:./migraphx/kernels/functional.hpp117::2871::16 :note:  expanded from herenote: 
called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>>'
__fmax
^
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 64, 1225>, migraphx::integral_const_array<unsigned int, 78400, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
terminate called after throwing an instance of 'migraphx::version_1::exception'
  what():  /src/AMDMIGraphX/src/process.cpp:97: check_exec: Command cd /tmp/migraphx-compile-245c-7feb6c7f8700-645903ca5cccf1-7OvWtNdtdVq9Njah; /opt/rocm/llvm/bin/clang++ -Wno-float-equal -DMIGRAPHX_NGLOBAL=2508800 -DMIGRAPHX_NLOCAL=1024 -Weverything -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-conversion -Wno-double-promotion -Wno-exit-time-destructors -Wno-extra-semi -Wno-extra-semi-stmt -Wno-float-conversion -Wno-gnu-anonymous-struct -Wno-gnu-zero-variadic-macro-arguments -Wno-missing-prototypes -Wno-nested-anon-types -Wno-padded -Wno-shorten-64-to-32 -Wno-sign-conversion -Wno-sign-compare -Wno-unused-command-line-argument -Wno-weak-vtables -Wno-c99-extensions -ftemplate-backtrace-limit=0 -Werror --std=c++17 -fno-gpu-rdc -c --offload-arch=gfx908:sramecc+:xnack- --cuda-device-only -O3  -Wno-unused-command-line-argument -Wno-cuda-compat -mllvm -amdgpu-early-inline-all=true -mllvm -amdgpu-function-calls=false -x hip -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm-5.4.2/llvm/lib/clang/15.0.0/include/.. -D__HIP_PLATFORM_HCC__=1 -D__HIP_PLATFORM_AMD__=1 -isystem /opt/rocm-5.4.2/include -isystem /opt/rocm/include --hip-link --hip-link -I. main.cpp -o main.o exited with status 1
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
./migraphx/kernels/math.hpp:234:26: note: called by 'operator()<_Float16, _Float16>'
MIGRAPHX_DEVICE_MATH_VEC(max)
                         ^
./migraphx/kernels/vec.hpp:119:29: note: called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'
                result[i] = f(vec_at(xs, i)...);
                            ^
./migraphx/kernels/math.hpp:234:1: note: called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>'
MIGRAPHX_DEVICE_MATH_VEC(max)
^
./migraphx/kernels/math.hpp:54:16: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
               ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>, migraphx::integral_constant<unsigned int, 393216>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
timeout: the monitored command dumped core
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
In file included from main.cpp:__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));3
:
^In file included from 
./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp/usr/include/math.h::191278::563::  error: note: no member named '__hmax' in the global namespace; did you mean '__fmax'?expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

                                                     ~~^~~~~~/usr/include/math.h
:                                                       __fmax281
:22./migraphx/kernels/math.hpp:: 67note: :expanded from macro '__MATHDECLX'64
: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)                                                               ^~~~~

                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:/usr/include/x86_64-linux-gnu/bits/mathcalls.h105::32923::1 :note:  expanded from macro '__CONCAT'note: 
'__fmax' declared here
#define __CONCAT(x,y)   x ## y
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));                        ^

^
/usr/include/math.h:278<scratch space>::3117:: 1note: :expanded from macro '__MATHCALLX' 
note: expanded from here
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)__fmax

  ^^

/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hppIn file included from :main.cpp29::
3./migraphx/kernels/math.hpp:
:In file included from 191./migraphx/kernels/pointwise.hpp::5629::
 ./migraphx/kernels/math.hpperror: :no member named '__hmax' in the global namespace; did you mean '__fmax'?191
:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)                                                     ~~^~~~~~

                                                     ~~^~~~~~In file included from                                                        __fmax
main.cpp
                                                       __fmax:
./migraphx/kernels/math.hpp3:./migraphx/kernels/math.hpp:
67:In file included from :67./migraphx/kernels/pointwise.hpp64:::6429 ::
note:  ./migraphx/kernels/math.hppexpanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'note: :
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'192
:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~/usr/include/x86_64-linux-gnu/bits/mathcalls.h
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:                                                       __fmin:329
329::1./migraphx/kernels/math.hpp1::: 67 note: :note: '__fmax' declared here64'__fmax' declared here
:
 note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^
/usr/include/math.h    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
/usr/include/math.h278                                                               ^~~~~::
2783::3 /usr/include/x86_64-linux-gnu/bits/mathcalls.h:note: : expanded from macro '__MATHCALLX'332note: 
:expanded from macro '__MATHCALLX'1
: note:   __MATHDECLX (_Mdouble_,function,suffix, args, attrib)'__fmin' declared here

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  ^

  ^
/usr/include/math.h:/usr/include/math.h281::28122:__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));:22
 :^note:  
expanded from macro '__MATHDECLX'note: 
expanded from macro '__MATHDECLX'/usr/include/math.h
:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
/usr/include/x86_64-linux-gnu/sys/cdefs.h                     ^:
105  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):/usr/include/x86_64-linux-gnu/sys/cdefs.h
23:  ^:105
 :/usr/include/math.hnote: 23:expanded from macro '__CONCAT':281
 :note: 22expanded from macro '__CONCAT'#define __CONCAT(x,y)   x ## y:

                         ^note: 
#define __CONCAT(x,y)   x ## yexpanded from macro '__MATHDECLX'

                        ^<scratch space>
:117:1:<scratch space> :note: 117expanded from here:
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)1__fmax
:
                     ^ ^
note: 
expanded from here/usr/include/x86_64-linux-gnu/sys/cdefs.h
:__fmax105
:^23
: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:In file included from 3main.cpp:
:In file included from 3./migraphx/kernels/pointwise.hpp:
:In file included from 29./migraphx/kernels/pointwise.hpp:
:./migraphx/kernels/math.hpp29::
191./migraphx/kernels/math.hpp::56191:: 56error: :no member named '__hmax' in the global namespace; did you mean '__fmax'? 
error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

                                                     ~~^~~~~~                                                     ~~^~~~~~

                                                       __fmax                                                       __fmax

./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::6767::6464::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

    inline auto __device__ name(type x, type y)->type { return fname(x, y); }    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~                                                               ^~~~~

/usr/include/x86_64-linux-gnu/bits/mathcalls.h/usr/include/x86_64-linux-gnu/bits/mathcalls.h::329329::11::  note: note: '__fmax' declared here'__fmax' declared here

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^^

/usr/include/math.h/usr/include/math.h::278278::33::  note: note: expanded from macro '__MATHCALLX'expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^  ^

/usr/include/math.h/usr/include/math.h::281281::2222::  note: note: expanded from macro '__MATHDECLX'expanded from macro '__MATHDECLX'

  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

                     ^                     ^

/usr/include/x86_64-linux-gnu/sys/cdefs.h/usr/include/x86_64-linux-gnu/sys/cdefs.h::105105::2323::  note: note: expanded from macro '__CONCAT'expanded from macro '__CONCAT'

#define __CONCAT(x,y)   x ## y#define __CONCAT(x,y)   x ## y

                        ^                        ^

<scratch space><scratch space>::117117::11::  note: note: expanded from hereexpanded from here

__fmax__fmax

^^

In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'In file included from 
main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):

./migraphx/kernels/math.hpp  ^:In file included from 
192main.cpp:/usr/include/math.h:56:3:281:
 :In file included from error: 22./migraphx/kernels/pointwise.hppno member named '__hmin' in the global namespace; did you mean '__fmin'?::
 29note: :
expanded from macro '__MATHDECLX'./migraphx/kernels/math.hpp
:192:56MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):
                                                      ~~^~~~~~error: 
no member named '__hmin' in the global namespace; did you mean '__fmin'?                                                       __fmin

  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
./migraphx/kernels/math.hpp                     ^:
67:/usr/include/x86_64-linux-gnu/sys/cdefs.h64MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)::
105                                                      ~~^~~~~~:note: 
23expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'                                                       __fmin:

 note: ./migraphx/kernels/math.hppexpanded from macro '__CONCAT':
67:64    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
                                                                ^~~~~#define __CONCAT(x,y)   x ## ynote: 

expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'                        ^

/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1<scratch space>:: 117    inline auto __device__ name(type x, type y)->type { return fname(x, y); }note: :
'__fmin' declared here1                                                               ^~~~~
:
 note: expanded from here
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:__fmax332__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
:
^1^
:
 note: '__fmin' declared here/usr/include/math.h
:278:3: note: expanded from macro '__MATHCALLX'
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):
278  ^:
3:/usr/include/math.h :note: 281expanded from macro '__MATHCALLX':
22: note: expanded from macro '__MATHDECLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
                      ^note: 
expanded from macro '__MATHDECLX'
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^#define __CONCAT(x,y)   x ## y

                        ^/usr/include/x86_64-linux-gnu/sys/cdefs.h
:105<scratch space>::23118:: 1note: :expanded from macro '__CONCAT' 
note: expanded from here
__fmin
#define __CONCAT(x,y)   x ## y^

                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:In file included from 3main.cpp:: 3note: :
expanded from macro '__MATHCALLX'In file included from 
./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib) 
error:   ^no member named '__hmin' in the global namespace; did you mean '__fmin'?

/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
In file included from                                                      ~~^~~~~~  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)main.cpp

:                                                       __fmin                     ^3

:
./migraphx/kernels/math.hppIn file included from /usr/include/x86_64-linux-gnu/sys/cdefs.h:./migraphx/kernels/pointwise.hpp:67:105:29:64:
23:./migraphx/kernels/math.hpp: : note: 191note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':expanded from macro '__CONCAT'
56
: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
#define __CONCAT(x,y)   x ## y
                        ^
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
<scratch space>                                                               ^~~~~:
118:1: /usr/include/x86_64-linux-gnu/bits/mathcalls.hnote: :expanded from here332
:1__fmin:
 MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)^note: 

'__fmin' declared here                                                     ~~^~~~~~
In file included from 
main.cpp                                                       __fmax:
3:
In file included from __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));./migraphx/kernels/math.hpp./migraphx/kernels/pointwise.hpp
::^6729
::
64./migraphx/kernels/math.hpp:/usr/include/math.h: :191note: 278:expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':56
3::  error: note: no member named '__hmax' in the global namespace; did you mean '__fmax'?expanded from macro '__MATHCALLX'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:/usr/include/math.h329MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)::
2811                                                     ~~^~~~~~::
22                                                        __fmax:note: 
 '__fmax' declared herenote: ./migraphx/kernels/math.hpp
expanded from macro '__MATHDECLX':
67:64: note: __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'

^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
/usr/include/math.h                     ^:
278    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
/usr/include/x86_64-linux-gnu/sys/cdefs.h3                                                               ^~~~~::
105 :note: 23expanded from macro '__MATHCALLX'/usr/include/x86_64-linux-gnu/bits/mathcalls.h:
: 329note: :expanded from macro '__CONCAT'  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)1

:  ^ 
note: '__fmax' declared here/usr/include/math.h#define __CONCAT(x,y)   x ## y
:
281                        ^:
22:__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));<scratch space> 
:note: ^118expanded from macro '__MATHDECLX'
:
1/usr/include/math.h:: 278note: :expanded from here  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)3

:                     ^ __fmin
note: 
expanded from macro '__MATHCALLX'/usr/include/x86_64-linux-gnu/sys/cdefs.h^
:
105:23: note: expanded from macro '__CONCAT'  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^
/usr/include/math.h:281#define __CONCAT(x,y)   x ## y:
22                        ^:
 note: expanded from macro '__MATHDECLX'
<scratch space>:117:1: note: expanded from here
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)__fmax

                     ^^

/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.hIn file included from :main.cpp329::31:
:In file included from  ./migraphx/kernels/pointwise.hppnote: :'__fmax' declared here29
:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3In file included from :MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)main.cpp 
:note:                                                      ~~^~~~~~3expanded from macro '__MATHCALLX'
:

                                                       __fmaxIn file included from 
./migraphx/kernels/pointwise.hpp:./migraphx/kernels/math.hpp29:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):
67
./migraphx/kernels/math.hpp:  ^:64
192:/usr/include/math.h: :56In file included from note: 281:main.cppexpanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR': :
22error: 4:no member named '__hmin' in the global namespace; did you mean '__fmin'?:
 
In file included from note:     inline auto __device__ name(type x, type y)->type { return fname(x, y); }./migraphx/kernels/ops.hppexpanded from macro '__MATHDECLX'
:
                                                               ^~~~~27
:
./migraphx/kernels/math.hpp:192MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):/usr/include/x86_64-linux-gnu/bits/mathcalls.h
56:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)                                                     ~~^~~~~~:329

 :                     ^                                                       __fminerror: 1

no member named '__hmin' in the global namespace; did you mean '__fmin'?:/usr/include/x86_64-linux-gnu/sys/cdefs.h
./migraphx/kernels/math.hpp ::note: 10567'__fmax' declared here::MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
2364
::                                                     ~~^~~~~~  
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));note: note:                                                        __fmin
expanded from macro '__CONCAT'expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
^


./migraphx/kernels/math.hpp:67#define __CONCAT(x,y)   x ## y:/usr/include/math.h
64:                        ^:278
    inline auto __device__ name(type x, type y)->type { return fname(x, y); } :
note: 3<scratch space>                                                               ^~~~~expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'::

 117note: :expanded from macro '__MATHCALLX'/usr/include/x86_64-linux-gnu/bits/mathcalls.h1
:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:332
   __MATHDECLX (_Mdouble_,function,suffix, args, attrib):                                                               ^~~~~note: 
1
expanded from here  ^:

/usr/include/x86_64-linux-gnu/bits/mathcalls.h __fmax/usr/include/math.h:note: 
:332'__fmin' declared here^281:

:122::  __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));note: note: 
'__fmin' declared hereexpanded from macro '__MATHDECLX'^


/usr/include/math.h__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));:
278^:
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)3
/usr/include/math.h:                     ^: 
278note: :/usr/include/x86_64-linux-gnu/sys/cdefs.hexpanded from macro '__MATHCALLX'3:
:105 :note: 23expanded from macro '__MATHCALLX':  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
 
note:   ^expanded from macro '__CONCAT'  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)


/usr/include/math.h  ^:
281#define __CONCAT(x,y)   x ## y/usr/include/math.h:
:22                        ^281:
: 22note: <scratch space>:expanded from macro '__MATHDECLX': 
117note: :expanded from macro '__MATHDECLX'1
: note: expanded from here  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)                     ^__fmax


                     ^^/usr/include/x86_64-linux-gnu/sys/cdefs.h

:/usr/include/x86_64-linux-gnu/sys/cdefs.h105::10523::23 :note:  expanded from macro '__CONCAT'note: 
expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y#define __CONCAT(x,y)   x ## y

                        ^                        ^

<scratch space><scratch space>::118118::11::  note: note: expanded from hereexpanded from here

__fmin__fmin

^^

In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:In file included from 105main.cpp::233::
 In file included from note: ./migraphx/kernels/pointwise.hppexpanded from macro '__CONCAT':
29:
./migraphx/kernels/math.hpp:191#define __CONCAT(x,y)   x ## y:
56                        ^:
 error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
<scratch space>:117:1: note: expanded from here
__fmax
^
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
In file included from main.cpp:4:
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));In file included from 
./migraphx/kernels/ops.hpp^:
27:
./migraphx/kernels/math.hpp/usr/include/math.h::191278::563::  error: note: no member named '__hmax' in the global namespace; did you mean '__fmax'?expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22:MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax) 
note:                                                      ~~^~~~~~expanded from macro '__MATHDECLX'

                                                       __fmax
./migraphx/kernels/math.hpp  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
67                     ^:
64:/usr/include/x86_64-linux-gnu/sys/cdefs.h :note: 105expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR':
23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                        ^                                                               ^~~~~

<scratch space>:117:1:/usr/include/x86_64-linux-gnu/bits/mathcalls.h :note: 329expanded from here:
1:__fmax 
note: ^'__fmax' declared here

__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
In file included from /usr/include/math.hmain.cpp::2783::
3In file included from :./migraphx/kernels/pointwise.hpp :note: 29expanded from macro '__MATHCALLX':

./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
                      ^note: 
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~#define __CONCAT(x,y)   x ## y

                        ^
<scratch space>/usr/include/x86_64-linux-gnu/bits/mathcalls.h::118332::11::  note: note: expanded from here'__fmin' declared here

__fmin
^
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
In file included from __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));main.cpp
:^3
:
In file included from ./migraphx/kernels/pointwise.hpp:/usr/include/math.h29::
278./migraphx/kernels/math.hpp::3192:: 56note: :expanded from macro '__MATHCALLX' 
error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):
22                                                     ~~^~~~~~:
                                                        __fminnote: 
expanded from macro '__MATHDECLX'
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23:    inline auto __device__ name(type x, type y)->type { return fname(x, y); } 
note:                                                                ^~~~~expanded from macro '__CONCAT'

/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332#define __CONCAT(x,y)   x ## y:
1                        ^:
 note: <scratch space>'__fmin' declared here:
118:1: note: expanded from here
__fmin
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));^

^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
In file included from     inline auto __device__ name(type x, type y)->type { return fname(x, y); }main.cpp
:                                                               ^~~~~3
:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:/usr/include/x86_64-linux-gnu/bits/mathcalls.h191::32956::1 :error:  no member named '__hmax' in the global namespace; did you mean '__fmax'?note: 
'__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.hMIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax):
278                                                     ~~^~~~~~:
3                                                       __fmax:
 note: expanded from macro '__MATHCALLX'./migraphx/kernels/math.hpp
:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'    inline auto __device__ name(type x, type y)->type { return fname(x, y); }

                                                               ^~~~~
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:                     ^329
:1:/usr/include/x86_64-linux-gnu/sys/cdefs.h :note: 105'__fmax' declared here:
23: note: expanded from macro '__CONCAT'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));#define __CONCAT(x,y)   x ## y

^                        ^

/usr/include/math.h:278:<scratch space>3::117 :note: 1expanded from macro '__MATHCALLX':
 note: expanded from here
__fmax
^
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64:In file included from  main.cppnote: :expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'3
:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error:     inline auto __device__ name(type x, type y)->type { return fname(x, y); }no member named '__hmin' in the global namespace; did you mean '__fmin'?

                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin):
                                                      ~~^~~~~~note: 
'__fmax' declared here                                                       __fmin

./migraphx/kernels/math.hpp:67:64: __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));note: 
expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'^

/usr/include/math.h:278:3: note:     inline auto __device__ name(type x, type y)->type { return fname(x, y); }expanded from macro '__MATHCALLX'

                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):
1  ^:
 /usr/include/math.hnote: :'__fmin' declared here281
:22: note: expanded from macro '__MATHDECLX'
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib):
                      ^note: 
expanded from macro '__MATHCALLX'
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note:   __MATHDECLX (_Mdouble_,function,suffix, args, attrib)expanded from macro '__CONCAT'

  ^
/usr/include/math.h:#define __CONCAT(x,y)   x ## y281
:                        ^22
: note: expanded from macro '__MATHDECLX'
<scratch space>:117:1: note: expanded from here
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
__fmax                     ^

^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.hIn file included from :main.cpp332::41:
:In file included from  ./migraphx/kernels/ops.hppnote: :'__fmin' declared here27
:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));

^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)

                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)67
:  ^64
: /usr/include/math.hnote: :expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'281
:22: note: expanded from macro '__MATHDECLX'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:/usr/include/x86_64-linux-gnu/sys/cdefs.h332::1051::23 :note:  '__fmin' declared herenote: 
expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));<scratch space>
:^118
:1:/usr/include/math.h :note: 278expanded from here:
3:__fmin 
note: ^expanded from macro '__MATHCALLX'

  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1479680>, migraphx::integral_constant<unsigned int, 1479680>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1479680>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20In file included from :main.cpp :note: 4called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>':

In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp            return f(arg_c<(is + size - 1) % size>()(xs...)...);:
191                   ^:
56:./migraphx/kernels/functional.hpp :error: 118no member named '__hmax' in the global namespace; did you mean '__fmax'?:
12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
    return detail::sequence_c_impl(f, detail::gens<N>{});                                                     ~~^~~~~~

                   ^                                                       __fmax

./migraphx/kernels/math.hpp./migraphx/kernels/functional.hpp::67287::6416::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>>'

        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257    inline auto __device__ name(type x, type y)->type { return fname(x, y); }:
58                                                               ^~~~~:
 note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
/usr/include/x86_64-linux-gnu/bits/mathcalls.h    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
329                                                         ^:
1: note: '__fmax' declared here./migraphx/kernels/functional.hpp
:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>>'
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
/usr/include/math.h./migraphx/kernels/functional.hpp::278257::358::  note: note: expanded from macro '__MATHCALLX'called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'

    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)

  ^
./migraphx/kernels/functional.hpp/usr/include/math.h::273281::5022::  note: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 160, 289>, migraphx::integral_const_array<unsigned int, 46240, 289, 1>>>>'expanded from macro '__MATHDECLX'

        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
./migraphx/kernels/args.hpp                     ^:
39:12/usr/include/x86_64-linux-gnu/sys/cdefs.h:: 105note: :called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'23
: note: expanded from macro '__CONCAT'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp#define __CONCAT(x,y)   x ## y:
45                        ^:
37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
<scratch space>:117:1: note: expanded from here        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };

                                    ^__fmax

^./migraphx/kernels/functional.hpp
:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: In file included from error: main.cppno member named '__hmin' in the global namespace; did you mean '__fmin'?:
3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)no member named '__hmin' in the global namespace; did you mean '__fmin'?

                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)

                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:    inline auto __device__ name(type x, type y)->type { return fname(x, y); }64
:                                                               ^~~~~ 
note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));/usr/include/x86_64-linux-gnu/bits/mathcalls.h
:^332
:1:/usr/include/math.h :note: 278'__fmin' declared here:
3: note: expanded from macro '__MATHCALLX'
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^/usr/include/math.h
:/usr/include/math.h278::2813::22 :note:  expanded from macro '__MATHCALLX'note: 
expanded from macro '__MATHDECLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)

/usr/include/math.h                     ^:3
281 error:/usr/include/x86_64-linux-gnu/sys/cdefs.hs22: generated:105 when compiling for  :gfx908note: 23.
expanded from macro '__MATHDECLX':
 note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)<scratch space>
:                     ^118
:1/usr/include/x86_64-linux-gnu/sys/cdefs.h:: 105note: :expanded from here23
: __fminnote: 
expanded from macro '__CONCAT'^

#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
2 errors generated when compiling for gfx908.
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: no member named '__hmax' in the global namespace; did you mean '__fmax'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                     ~~^~~~~~
                                                       __fmax
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:192:56: error: no member named '__hmin' in the global namespace; did you mean '__fmin'?
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, min, ::__hmin)
                                                     ~~^~~~~~
                                                       __fmin
./migraphx/kernels/math.hpp:67:64: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_BINARY_FOR'
    inline auto __device__ name(type x, type y)->type { return fname(x, y); }
                                                               ^~~~~
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:1: note: '__fmin' declared here
__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:118:1: note: expanded from here
__fmin
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 13642240>, migraphx::integral_constant<unsigned int, 13642240>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 13642240>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 80, 5329>, migraphx::integral_const_array<unsigned int, 426320, 5329, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1881600>, migraphx::integral_constant<unsigned int, 1881600>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1881600>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 48, 1225>, migraphx::integral_const_array<unsigned int, 58800, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1183744>, migraphx::integral_constant<unsigned int, 1183744>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1183744>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 289>, migraphx::integral_const_array<unsigned int, 36992, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
2 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1775616>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 5017600>, migraphx::integral_constant<unsigned int, 5017600>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 5017600>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 128, 1225>, migraphx::integral_const_array<unsigned int, 156800, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>, migraphx::integral_constant<unsigned int, 3763200>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 3763200>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 1225>, migraphx::integral_const_array<unsigned int, 117600, 1225, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2959360>, migraphx::integral_constant<unsigned int, 2959360>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 2959360>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp            return f(arg_c<(is + size - 1) % size>()(xs...)...);:
29                   ^:

./migraphx/kernels/math.hpp:191:./migraphx/kernels/functional.hpp56::118 :error: 12reference to __host__ function '__fmax' in __device__ function:
 note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)           ^

                                                       ^./migraphx/kernels/functional.hpp
:138:20: main.cppnote: :called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'15
:45: note: called by 'inner_pointwise<_Float16, _Float16>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^./migraphx/kernels/functional.hpp
:287:main.cpp16::26 :note: 53called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>>':
 note: called by 'operator()<_Float16 &, _Float16 &>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
3./migraphx/kernels/functional.hpp error:s    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);257 generated
: when compiling for                                                     ^58gfx908
:.
 ./migraphx/kernels/pointwise.hppnote: :called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'40
:66: note: called by 'operator()<unsigned int>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/functional.hpp:273:16./migraphx/kernels/index.hpp:: 160note: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>>'16
: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^./migraphx/kernels/index.hpp
:202./migraphx/kernels/functional.hpp::21257:: 58note: :called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 887808>, migraphx::integral_constant<unsigned int, 887808>>' 
note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
226                                                         ^:
9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 887808>>'
./migraphx/kernels/functional.hpp:273:50:         for_stride<false>(global, n, nglobal(), f);note: 
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 320, 289>, migraphx::integral_const_array<unsigned int, 92480, 289, 1>>>>'        ^

        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });./migraphx/kernels/pointwise.hpp
:                                                 ^39
:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'./migraphx/kernels/args.hpp
:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    idx.global_stride(out.get_shape().elements(),
        ^
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/pointwise.hpp./migraphx/kernels/args.hpp::4845::3637::  note: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'

        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: ./migraphx/kernels/vectorize.hppcalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>':
253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

               ^
./migraphx/kernels/functional.hpp:./migraphx/kernels/functional.hpp257::25758::58 :note:  called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'note: 
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                         ^
./migraphx/kernels/pointwise.hpp:48./migraphx/kernels/functional.hpp::9273:: 50note: :called by 'operator()<(lambda at main.cpp:26:39), void, void, void>' 
note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });26
:                                                 ^38
: note: ./migraphx/kernels/functional.hppcalled by 'add_relu_kernel':
289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
            return f(arg_c<(is + size - 1) % size>()(xs...)...);                                     ^

                   ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h./migraphx/kernels/functional.hpp::329118::112::  note: note: '__fmax' declared herecalled by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'

    return f(index_constant<Ns>{}...);
           ^
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
./migraphx/kernels/functional.hpp^:
138:20:/usr/include/math.h :note: 278called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>':
3: note: expanded from macro '__MATHCALLX'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:./migraphx/kernels/functional.hpp281::28722::16 :note:  expanded from macro '__MATHDECLX'note: 
called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)               ^

                     ^
./migraphx/kernels/functional.hpp:/usr/include/x86_64-linux-gnu/sys/cdefs.h257::10558::23 :note:  called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'note: 
expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };<scratch space>
:                                                         ^117
:1: note: expanded from here
./migraphx/kernels/functional.hpp__fmax:
273^:
16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 96, 289>, migraphx::integral_const_array<unsigned int, 27744, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
3 errors generated when compiling for gfx908.
In file included from main.cpp:3:
In file included from ./migraphx/kernels/pointwise.hpp:29:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:15:45: note: called by 'inner_pointwise<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 &, _Float16 &>'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1775616>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
2 errors generated when compiling for gfx908.
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
In file included from In file included from main.cppmain.cpp::33:
:
In file included from In file included from ./migraphx/kernels/pointwise.hpp./migraphx/kernels/pointwise.hpp::2929:
:
./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::191191::5656::  error: error: reference to __host__ function '__fmax' in __device__ functionreference to __host__ function '__fmax' in __device__ function

MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)

                                                       ^                                                       ^

./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::234234::2626::  note: note: called by 'operator()<_Float16, _Float16>'called by 'operator()<_Float16, _Float16>'

MIGRAPHX_DEVICE_MATH_VEC(max)MIGRAPHX_DEVICE_MATH_VEC(max)

                         ^                         ^

In file included from ./migraphx/kernels/vec.hpp./migraphx/kernels/vec.hppmain.cpp:::1191193:::
2929In file included from ::./migraphx/kernels/pointwise.hpp  :note: note: 29called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>'called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>':


./migraphx/kernels/math.hpp:191:56: error:                 result[i] = f(vec_at(xs, i)...);reference to __host__ function '__fmax' in __device__ function                result[i] = f(vec_at(xs, i)...);


                            ^                            ^

./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::234234:MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax):1
1:                                                       ^: 
 note: note: called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>'called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>'

main.cppMIGRAPHX_DEVICE_MATH_VEC(max)MIGRAPHX_DEVICE_MATH_VEC(max):

15^^:

45./migraphx/kernels/math.hpp./migraphx/kernels/math.hpp::: 5454note: ::called by 'inner_pointwise<_Float16, _Float16>'1616
::  note: note: expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'

auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note:         return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \        return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \called by 'operator()<_Float16 &, _Float16 &>'


               ^               ^

main.cppmain.cpp::1515::4545::     pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2); note: 
note: called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>'                                                    ^called by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>'


./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));                                            ^

                                            ^
main.cpp:main.cpp                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });26:
:26                                                                 ^53:
:53 :note:  ./migraphx/kernels/index.hppcalled by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>'note: :
called by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>'160
:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);

    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);               ^                                                    ^


                                                    ^
./migraphx/kernels/pointwise.hpp./migraphx/kernels/index.hpp:./migraphx/kernels/pointwise.hpp:40:202:40:66:21:66: : note:  note: called by 'operator()<unsigned int>'note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1775616>>'
called by 'operator()<unsigned int>'

                    invoke_loop(f, start, _c<0>);
                    ^
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });./migraphx/kernels/index.hpp
:                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });                                                                 ^226

:                                                                 ^9./migraphx/kernels/index.hpp
:: 160./migraphx/kernels/index.hppnote: ::called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 1775616>>'16160
:: 16note: :called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>' 
note:         for_stride<false>(global, n, nglobal(), f);called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
        ^

               ^        return f(i);

               ^
./migraphx/kernels/index.hpp:202./migraphx/kernels/index.hpp::./migraphx/kernels/pointwise.hpp21202:::39 21:note: :9called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 196608>, migraphx::integral_constant<unsigned int, 196608>>' :
note:  called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>, migraphx::integral_constant<unsigned int, 393216>>'note: 
called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'                    invoke_loop(f, start, _c<0>);

                    ^
                    invoke_loop(f, start, _c<0>);
./migraphx/kernels/index.hpp                    ^    idx.global_stride(out.get_shape().elements(),:

226        ^./migraphx/kernels/index.hpp:
:9226:: 9note: :called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 196608>>'./migraphx/kernels/pointwise.hpp 
:note: 48called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>>':
36        for_stride<false>(global, n, nglobal(), f);:
         ^note:         for_stride<false>(global, n, nglobal(), f);
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'

        ^
./migraphx/kernels/pointwise.hpp:39:9        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });:
 ./migraphx/kernels/pointwise.hpp                                   ^note: :
called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'39
:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),./migraphx/kernels/vectorize.hpp
:        ^253    idx.global_stride(out.get_shape().elements(),
:
13        ^:
 ./migraphx/kernels/pointwise.hppnote: :called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'48./migraphx/kernels/pointwise.hpp
::3648::             f(xs...);36note: 
:called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 6144, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'            ^ 

note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'./migraphx/kernels/functional.hpp
:257:58:        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); }); 
note:                                    ^called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });


                                   ^
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^./migraphx/kernels/vectorize.hpp
:./migraphx/kernels/vectorize.hpp257::25713::13./migraphx/kernels/functional.hpp ::note:  273called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'note: :
called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'50
: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'            f(vectorize_tensor<N, Axis>(xs)...);
            f(vectorize_tensor<N, Axis>(xs)...);

            ^            ^

./migraphx/kernels/functional.hpp./migraphx/kernels/functional.hpp::257257        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });::
5858                                                 ^::
  note: note: ./migraphx/kernels/functional.hppcalled by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':

289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                         ^            return f(arg_c<(is + size - 1) % size>()(xs...)...);                                                         ^


                   ^
./migraphx/kernels/functional.hpp./migraphx/kernels/functional.hpp:./migraphx/kernels/functional.hpp:273:118:273:50:12:50: : note:  note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'

    return f(index_constant<Ns>{}...);        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });

           ^                                                 ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
./migraphx/kernels/functional.hpp
:./migraphx/kernels/functional.hpp                                                 ^138:
:28920./migraphx/kernels/functional.hpp:::20 289:note: : called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'20note: 
:called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>' 
note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^            return f(arg_c<(is + size - 1) % size>()(xs...)...);
./migraphx/kernels/functional.hpp
:./migraphx/kernels/functional.hpp                   ^287:
:11816./migraphx/kernels/functional.hpp:::12 118:note: : called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'12note: 
:called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>' 
note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
    return f(index_constant<Ns>{}...);               ^
    return f(index_constant<Ns>{}...);
           ^

./migraphx/kernels/functional.hpp           ^./migraphx/kernels/functional.hpp:
:257138./migraphx/kernels/functional.hpp:::5820138:::  20note: note: :called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>' 

note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };    return detail::sequence_c_impl(f, detail::gens<N>{});

    return detail::sequence_c_impl(f, detail::gens<N>{});                                                         ^                   ^


                   ^
./migraphx/kernels/functional.hpp:273:./migraphx/kernels/functional.hpp16./migraphx/kernels/functional.hpp:::287 287:note: :16called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'16:
:  note: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>>'called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'

        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp        return sequence_c<sizeof...(xs)>([&](auto... is) {:        return sequence_c<sizeof...(xs)>([&](auto... is) {
257
               ^:               ^
58./migraphx/kernels/functional.hpp
:./migraphx/kernels/functional.hpp: :257note: 257:called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':58
58::  note: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'

    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };273

:                                                         ^                                                         ^50

: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 289>, migraphx::integral_const_array<unsigned int, 55488, 289, 1>>>>'
./migraphx/kernels/functional.hpp./migraphx/kernels/functional.hpp::273273::1616::  note: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>>'        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'


                                                 ^
./migraphx/kernels/args.hpp:39:        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });12
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:               ^
 
               ^note: 
./migraphx/kernels/functional.hppcalled by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>':./migraphx/kernels/functional.hpp
257::25758::58     return f(make_tensor<Ns>::apply(xs)...);:note: 
 called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'           ^note: 

called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };

                                                         ^
./migraphx/kernels/functional.hpp:        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };273./migraphx/kernels/functional.hpp
::                                    ^50273
:: 50./migraphx/kernels/functional.hppnote: ::called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 64>, migraphx::integral_const_array<unsigned int, 12288, 64, 1>>>>' 273
note: :called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'16
: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
./migraphx/kernels/args.hpp                                                 ^        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });:

39               ^:./migraphx/kernels/args.hpp
12::./migraphx/kernels/functional.hpp39 ::note: 25712called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'::
58 :note:  called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'    return f(make_tensor<Ns>::apply(xs)...);note: 

called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'           ^

    return f(make_tensor<Ns>::apply(xs)...);
./migraphx/kernels/args.hpp           ^:
45:./migraphx/kernels/args.hpp37::45    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; }; :
note: 37                                                         ^called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>':

 note: ./migraphx/kernels/pointwise.hppcalled by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>':
48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };273        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
:
                                    ^16        ^
:
 ./migraphx/kernels/functional.hppmain.cppnote: ::called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'27326
::1638::  note: note:         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'called by 'add_relu_kernel'


               ^
./migraphx/kernels/functional.hpp:257:58: note:         return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'

               ^    pointwise(idx, vectorize<1, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);

                                     ^./migraphx/kernels/functional.hpp
:257    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };:
/usr/include/x86_64-linux-gnu/bits/mathcalls.h58                                                         ^::
329 :./migraphx/kernels/pointwise.hppnote: 1:called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>':48
 :note: 9'__fmax' declared here:
     return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };note: 
called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'                                                         ^

./migraphx/kernels/pointwise.hpp__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));:
48^:        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
9
:        ^ /usr/include/math.h
note: :main.cppcalled by 'operator()<(lambda at main.cpp:26:39), void, void, void>'278:
:263:In file included from :38        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });main.cpp :
:note:          ^3expanded from macro '__MATHCALLX'note: 
:

called by 'add_relu_kernel'main.cppIn file included from 
:./migraphx/kernels/pointwise.hpp26:  __MATHDECLX (_Mdouble_,function,suffix, args, attrib):29
38:
  ^:./migraphx/kernels/math.hpp    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
 :
/usr/include/math.hnote: 191                                     ^:called by 'add_relu_kernel':
281
56:/usr/include/x86_64-linux-gnu/bits/mathcalls.h:22: :329error:  :    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);reference to __host__ function '__fmax' in __device__ functionnote: 1

expanded from macro '__MATHDECLX':                                     ^
 
note: MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)'__fmax' declared here
/usr/include/x86_64-linux-gnu/bits/mathcalls.h
                                                       ^:
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)329
:                     ^./migraphx/kernels/math.hpp__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));1
:
:234/usr/include/x86_64-linux-gnu/sys/cdefs.h^ ::
note: 26105'__fmax' declared here:/usr/include/math.h:
 :23note: 278:called by 'operator()<_Float16, _Float16>': __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
3note: 
:expanded from macro '__CONCAT'MIGRAPHX_DEVICE_MATH_VEC(max)^ 


note:                          ^expanded from macro '__MATHCALLX'#define __CONCAT(x,y)   x ## y
/usr/include/math.h

:                        ^278./migraphx/kernels/vec.hpp
::  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)<scratch space>3119
:::  ^117 29
:note: :/usr/include/math.h1expanded from macro '__MATHCALLX' ::
note: 281 called by 'operator()<(lambda at ./migraphx/kernels/math.hpp:234:1)>':note: 
22  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)expanded from here:

                result[i] = f(vec_at(xs, i)...);   ^
__fmaxnote: 
                            ^
expanded from macro '__MATHDECLX'/usr/include/math.h
^
:./migraphx/kernels/math.hpp
281::23422::  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)1 
:note:                      ^ expanded from macro '__MATHDECLX'
note: 
called by 'max<_Float16 __attribute__((ext_vector_type(2))), _Float16 __attribute__((ext_vector_type(2))), void>'/usr/include/x86_64-linux-gnu/sys/cdefs.h
:105:  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)MIGRAPHX_DEVICE_MATH_VEC(max)23

:                     ^^ 

note: /usr/include/x86_64-linux-gnu/sys/cdefs.h./migraphx/kernels/math.hppexpanded from macro '__CONCAT'::
10554::23#define __CONCAT(x,y)   x ## y16:
:                         ^ note: 
note: expanded from macro '__CONCAT'<scratch space>expanded from macro 'MIGRAPHX_DEVICE_MATH_VEC'
:
117:1#define __CONCAT(x,y)   x ## y:
                         ^note:         return vec_transform(xs...)([](auto... ys) { return name(ys...); }); \
expanded from here<scratch space>

:               ^117__fmax
:
main.cpp1^::
15 :note: 45expanded from here:
 note: __fmaxcalled by 'inner_pointwise<_Float16 __attribute__((ext_vector_type(2))), _Float16>'

^
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:26:53: note: called by 'operator()<_Float16 & __attribute__((ext_vector_type(2))), _Float16 &>'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                                    ^
./migraphx/kernels/pointwise.hpp:40:66: note: called by 'operator()<unsigned int>'
                      [&](auto i) { out[i] = implicit_conversion(f(xs[i]...)); });
                                                                 ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), unsigned int, migraphx::integral_constant<int, 0>>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:202:21: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>, migraphx::integral_constant<unsigned int, 393216>>'
                    invoke_loop(f, start, _c<0>);
                    ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/pointwise.hpp:40:23), migraphx::integral_constant<unsigned int, 393216>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/pointwise.hpp:39:9: note: called by 'pointwise_tensor<(lambda at main.cpp:26:39), migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
    idx.global_stride(out.get_shape().elements(),
        ^
./migraphx/kernels/pointwise.hpp:48:36: note: called by 'operator()<migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16 __attribute__((ext_vector_type(2))), migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 12288, 32, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 32>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
                                   ^
./migraphx/kernels/vectorize.hpp:257:13: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
            f(vectorize_tensor<N, Axis>(xs)...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<3U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 0, 1, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 384, 64>, migraphx::integral_const_array<unsigned int, 24576, 64, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18), void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/pointwise.hpp:48:18)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/pointwise.hpp:48:9: note: called by 'operator()<(lambda at main.cpp:26:39), void, void, void>'
        t(ps...)([&](auto... xs) { pointwise_tensor(idx, f, xs...); });
        ^
main.cpp:26:38: note: called by 'add_relu_kernel'
    pointwise(idx, vectorize<2, 2>())(MIGRAPHX_LIFT(inner_pointwise), private_p0,private_p1,private_p2);
                                     ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
33 error errorss generated generated when compiling for  when compiling for gfx908gfx908.
.
3 errors generated when compiling for gfx908.
In file included from main.cpp:4:
In file included from ./migraphx/kernels/ops.hpp:27:
./migraphx/kernels/math.hpp:191:56: error: reference to __host__ function '__fmax' in __device__ function
MIGRAPHX_DEVICE_MATH_BINARY_FOR(migraphx::half, max, ::__hmax)
                                                       ^
main.cpp:16:45: note: called by 'post_concat<_Float16, _Float16>'
auto z3 = migraphx::convert<half>(migraphx::max(decltype(z2){0}, z2));
                                            ^
main.cpp:28:74: note: called by 'operator()<_Float16 &, _Float16 &>'
        concat<1>(concat_x0,concat_x1,concat_x2,concat_x3)(MIGRAPHX_LIFT(post_concat), y, xs...);
                                                                         ^
./migraphx/kernels/concat.hpp:70:56: note: called by 'operator()<unsigned int>'
                                  [&](auto i) { y[i] = f(input[i], xs[i]...); });
                                                       ^
./migraphx/kernels/index.hpp:160:16: note: called by 'invoke_loop<(lambda at ./migraphx/kernels/concat.hpp:70:35), unsigned int, unsigned int>'
        return f(i);
               ^
./migraphx/kernels/index.hpp:182:13: note: called by 'for_stride_loop<(lambda at ./migraphx/kernels/concat.hpp:70:35), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1420492>>'
            invoke_loop(f, i, k);
            ^
./migraphx/kernels/index.hpp:214:17: note: called by 'for_stride<false, (lambda at ./migraphx/kernels/concat.hpp:70:35), migraphx::integral_constant<unsigned int, 1775616>, migraphx::integral_constant<unsigned int, 1420492>>'
                for_stride_loop(start, n, stride, f);
                ^
./migraphx/kernels/index.hpp:226:9: note: called by 'global_stride<(lambda at ./migraphx/kernels/concat.hpp:70:35), migraphx::integral_constant<unsigned int, 1775616>>'
        for_stride<false>(global, n, nglobal(), f);
        ^
./migraphx/kernels/concat.hpp:69:21: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
                idx.global_stride(input.get_shape().elements(),
                    ^
./migraphx/kernels/concat.hpp:52:26: note: called by 'operator()<(lambda at ./migraphx/kernels/concat.hpp:68:54)>'
    return [=](auto f) { f(concat_slice<Axis>(xs, input, start)...); };
                         ^
./migraphx/kernels/concat.hpp:68:13: note: called by 'operator()<migraphx::integral_constant<unsigned int, 576>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>>'
            concat_slices<Axis>(input, start, ts...)([&](auto y, auto... xs) {
            ^
./migraphx/kernels/functional.hpp:181:25: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, migraphx::integral_constant<unsigned int, 576>, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
    return fold_impl(f, f(static_cast<T&&>(x), static_cast<U&&>(y)), static_cast<Ts&&>(xs)...);
                        ^
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, migraphx::integral_constant<unsigned int, 384>, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
    return fold_impl(f, f(static_cast<T&&>(x), static_cast<U&&>(y)), static_cast<Ts&&>(xs)...);
           ^
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, migraphx::integral_constant<unsigned int, 192>, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
./migraphx/kernels/functional.hpp:181:12: note: called by 'fold_impl<const (lambda at ./migraphx/kernels/concat.hpp:67:14) &, const migraphx::integral_constant<int, 0> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
./migraphx/kernels/functional.hpp:187:39: note: called by 'operator()<const migraphx::integral_constant<int, 0> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &, const migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>> &>'
    return [=](auto&&... xs) { return fold_impl(f, static_cast<decltype(xs)&&>(xs)...); };
                                      ^
./migraphx/kernels/concat.hpp:67:9: note: called by 'operator()<(lambda at main.cpp:28:60), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
        fold([&](auto start, auto input) {
        ^
main.cpp:28:9: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
        concat<1>(concat_x0,concat_x1,concat_x2,concat_x3)(MIGRAPHX_LIFT(post_concat), y, xs...);
        ^
./migraphx/kernels/vectorize.hpp:253:13: note: called by 'operator()<(lambda at main.cpp:27:137), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
            f(xs...);
            ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:27:137)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/functional.hpp:289:20: note: called by 'operator()<migraphx::integral_constant<unsigned int, 0>, migraphx::integral_constant<unsigned int, 1>, migraphx::integral_constant<unsigned int, 2>, migraphx::integral_constant<unsigned int, 3>, migraphx::integral_constant<unsigned int, 4>, migraphx::integral_constant<unsigned int, 5>>'
            return f(arg_c<(is + size - 1) % size>()(xs...)...);
                   ^
./migraphx/kernels/functional.hpp:118:12: note: called by 'sequence_c_impl<(lambda at ./migraphx/kernels/functional.hpp:287:42) &, 0U, 1U, 2U, 3U, 4U, 5U>'
    return f(index_constant<Ns>{}...);
           ^
./migraphx/kernels/functional.hpp:138:20: note: called by 'sequence_c<6U, (lambda at ./migraphx/kernels/functional.hpp:287:42)>'
    return detail::sequence_c_impl(f, detail::gens<N>{});
                   ^
./migraphx/kernels/functional.hpp:287:16: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>>'
        return sequence_c<sizeof...(xs)>([&](auto... is) {
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at main.cpp:27:137), migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:27:137)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
./migraphx/kernels/functional.hpp:273:50: note: called by 'operator()<migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 192, 17, 17>, migraphx::integral_const_array<unsigned int, 55488, 289, 17, 1>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 0, 1, 0, 0>>>, migraphx::tensor_view<_Float16, migraphx::shape<migraphx::integral_const_array<unsigned int, 32, 768, 17, 17>, migraphx::integral_const_array<unsigned int, 221952, 289, 17, 1>>>>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
                                                 ^
./migraphx/kernels/args.hpp:39:12: note: called by 'make_tensors_impl<(lambda at ./migraphx/kernels/functional.hpp:273:25), 0U, 1U, 2U, 3U, 4U, 5U, void, void, void, void, void, void>'
    return f(make_tensor<Ns>::apply(xs)...);
           ^
./migraphx/kernels/args.hpp:45:37: note: called by 'operator()<(lambda at ./migraphx/kernels/functional.hpp:273:25)>'
        return [=](auto f) { return make_tensors_impl(f, detail::gens<sizeof...(xs)>{}, xs...); };
                                    ^
./migraphx/kernels/functional.hpp:273:16: note: called by 'operator()<(lambda at main.cpp:27:137), void *, void *, void *, void *, void *, void *>'
        return f(xs...)([=](auto... ys) { return transform_args(fs...)(ys...)(g); });
               ^
./migraphx/kernels/functional.hpp:257:58: note: called by 'operator()<(lambda at main.cpp:27:137)>'
    return [=](auto... xs) { return [=](auto g) { return f(g, xs...); }; };
                                                         ^
main.cpp:27:136: note: called by 'concat_add_relu_kernel'
    transform_args(make_tensors(), rotate_last(), vectorize<1, 3>())(private_p0,private_p1,private_p2,private_p3,private_p4,private_p5)([](auto y, auto concat_x0,auto concat_x1,auto concat_x2,auto concat_x3, auto... xs) {
                                                                                                                                       ^
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:1: note: '__fmax' declared here
__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
^
/usr/include/math.h:278:3: note: expanded from macro '__MATHCALLX'
  __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
  ^
/usr/include/math.h:281:22: note: expanded from macro '__MATHDECLX'
  __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
                     ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:105:23: note: expanded from macro '__CONCAT'
#define __CONCAT(x,y)   x ## y
                        ^
<scratch space>:117:1: note: expanded from here
__fmax
^
3 errors generated when compiling for gfx908.
